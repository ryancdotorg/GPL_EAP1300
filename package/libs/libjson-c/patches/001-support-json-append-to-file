--- a/json_util.c
+++ b/json_util.c
@@ -139,6 +139,48 @@ int json_object_to_file_ext(char *filena
   return 0;
 }
 
+/* extended "format and write to file" function */
+
+int json_object_to_file_ext_append(char *filename, struct json_object *obj, int flags)
+{
+  const char *json_str;
+  int fd, ret;
+  unsigned int wpos, wsize;
+
+  if(!obj) {
+    MC_ERROR("json_object_to_file: object is null\n");
+    return -1;
+  }
+
+  if((fd = open(filename, O_WRONLY | O_APPEND | O_CREAT, 0644)) < 0) {
+    MC_ERROR("json_object_to_file: error opening file %s: %s\n",
+	     filename, strerror(errno));
+    return -1;
+  }
+
+  if(!(json_str = json_object_to_json_string_ext(obj,flags))) {
+    close(fd);
+    return -1;
+  }
+
+  wsize = (unsigned int)(strlen(json_str) & UINT_MAX); /* CAW: probably unnecessary, but the most 64bit safe */
+  wpos = 0;
+  while(wpos < wsize) {
+    if((ret = write(fd, json_str + wpos, wsize-wpos)) < 0) {
+      close(fd);
+      MC_ERROR("json_object_to_file: error writing file %s: %s\n",
+	     filename, strerror(errno));
+      return -1;
+    }
+
+	/* because of the above check for ret < 0, we can safely cast and add */
+    wpos += (unsigned int)ret;
+  }
+
+  close(fd);
+  return 0;
+}
+
 // backwards compatible "format and write to file" function
 
 int json_object_to_file(char *filename, struct json_object *obj)
@@ -146,6 +188,11 @@ int json_object_to_file(char *filename,
   return json_object_to_file_ext(filename, obj, JSON_C_TO_STRING_PLAIN);
 }
 
+int json_object_to_file_append(char *filename, struct json_object *obj)
+{
+  return json_object_to_file_ext_append(filename, obj, JSON_C_TO_STRING_PLAIN);
+}
+
 int json_parse_double(const char *buf, double *retval)
 {
   return (sscanf(buf, "%lf", retval)==1 ? 0 : 1);
--- a/json_util.h
+++ b/json_util.h
@@ -24,6 +24,8 @@ extern "C" {
 extern struct json_object* json_object_from_file(const char *filename);
 extern int json_object_to_file(char *filename, struct json_object *obj);
 extern int json_object_to_file_ext(char *filename, struct json_object *obj, int flags);
+extern int json_object_to_file_append(char *filename, struct json_object *obj);
+extern int json_object_to_file_ext_append(char *filename, struct json_object *obj, int flags);
 extern int json_parse_int64(const char *buf, int64_t *retval);
 extern int json_parse_double(const char *buf, double *retval);
