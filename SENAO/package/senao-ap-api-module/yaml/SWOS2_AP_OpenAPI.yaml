openapi: 3.0.0
info:
  version: 2.0.20201223
  title: EnGenius AP API
  description: The document declares APIs used in EnGenius AP products.
servers:
  - url: 'https://192.168.1.1:4430/api'
paths:
  /version:
    get:
      tags:
        - api
      description: Return api version
      operationId: get_version
      parameters: []
      security:
        - bearerAuth: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiVersion'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
  /sys/login:
    post:
      tags:
        - sys
      description: Login to API server
      operationId: post_login
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login_Token'
        '400':
          $ref: '#/components/responses/SetValueFailError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /sys/change_account:
    post:
      tags:
        - sys
      description: Change account and password
      operationId: post_change_account
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeAccount'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/SuccessCode'
        '400':
          $ref: '#/components/responses/SetValueFailError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
  /sys/system_config:
    post:
      tags:
        - sys
      description: Set system configuration
      operationId: post_system_config
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_SystemCfg'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/SuccessCode'
        '400':
          $ref: '#/components/responses/SetValueFailError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
  /sys/sys_info:
    get:
      tags:
        - sys
      description: Return device system information
      operationId: get_sys_info
      parameters: []
      security:
        - bearerAuth: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemInfo'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
  /sys/apply:
    post:
      tags:
        - sys
      description: Request reload configuration
      operationId: post_apply
      parameters: []
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NullData'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/SuccessCode'
        '400':
          $ref: '#/components/responses/SetValueFailError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
  /net/ethernet:
    post:
      tags:
        - net
      description: Set configuration for Ethernet interface
      operationId: post_ethernet
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_Ethernet'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/SuccessCode'
        '400':
          $ref: '#/components/responses/SetValueFailError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
    get:
      tags:
        - net
      description: Return Ethernet interface configuration
      operationId: get_ethernet
      parameters: []
      security:
        - bearerAuth: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ethernet'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
  /sys/dev_capability:
    get:
      tags:
        - sys
      description: Return device's supported capability
      operationId: get_dev_capability
      parameters: []
      security:
        - bearerAuth: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceCapability'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
  /sys/syslog:
    post:
      tags:
        - sys
      description: Set configuration for system log
      operationId: post_syslog
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_System_log'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/SuccessCode'
        '400':
          $ref: '#/components/responses/SetValueFailError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
    get:
      tags:
        - sys
      description: Return system log configuration
      operationId: get_syslog
      parameters: []
      security:
        - bearerAuth: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
  /sys/snmp:
    post:
      tags:
        - sys
      description: Set configuration for snmp
      operationId: post_snmp
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_Snmp'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/SuccessCode'
        '400':
          $ref: '#/components/responses/SetValueFailError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
    get:
      tags:
        - sys
      description: Return snmp configuration
      operationId: get_snmp
      parameters: []
      security:
        - bearerAuth: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Snmp'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
  /sys/presence_reporting:
    post:
      tags:
        - sys
      description: Set configuration for presence reporting
      operationId: post_presence_reporting
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_Presence_reporting'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/SuccessCode'
        '400':
          $ref: '#/components/responses/SetValueFailError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
    get:
      tags:
        - sys
      description: Return snmp configuration
      operationId: get_presence_reporting
      parameters: []
      security:
        - bearerAuth: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Presence_reporting'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
  /net/ethernet/traffic_info:
    get:
      tags:
        - net
      description: Get ethernet traffic information result
      operationId: get_ethernet_traffic_info
      parameters: []
      security:
        - bearerAuth: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ethernet_Traffic_Info'
        '202':
          $ref: '#/components/responses/AcceptedCode'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
  /net/ethernet/client_info:
    get:
      tags:
        - net
      description: Get ethernet client information result
      operationId: get_ethernet_client_info
      parameters: []
      security:
        - bearerAuth: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EthernetClientInfoResult'
        '202':
          $ref: '#/components/responses/AcceptedCode'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
  /net/proxy:
    post:
      tags:
        - net
      description: Set configuration for http & https proxy settings
      operationId: post_proxy_settings
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_Proxy_settings'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/SuccessCode'
        '400':
          $ref: '#/components/responses/SetValueFailError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
    get:
      tags:
        - net
      description: Return http & https proxy configuration
      operationId: get_proxy_settings
      parameters: []
      security:
        - bearerAuth: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Proxy_settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
  /net/spanning_tree:
    post:
      tags:
        - net
      description: Set configuration for spanning tree
      operationId: post_spanning_tree
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_Spanning_tree'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/SuccessCode'
        '400':
          $ref: '#/components/responses/SetValueFailError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError' 
    get:
      tags:
        - net
      description: Return spanning tree configuration
      operationId: get_spanning_tree
      parameters: []
      security:
        - bearerAuth: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Spanning_tree'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
  '/net/wallmount_lan_ports/{port}':
    post:
      tags:
        - net
      description: Set wallmount lan ports for ethprofile
      operationId: post_wallmount_lan_ports
      parameters:
        - name: port
          in: path
          description: port to return
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_Wallmount_lan_ports'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/SuccessCode'
        '400':
          $ref: '#/components/responses/SetValueFailError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
    get:
      tags:
        - net
      description: Return wallmount lan ports configuration
      operationId: get_allmount_lan_ports
      parameters:
        - name: port
          in: path
          description: port to return
          required: true
          schema:
            type: integer
            format: int32
      security:
        - bearerAuth: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallmount_lan_ports'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
  '/net/wallmount_lan_ports/{port}/security':
    post:
      tags:
        - net
      description: Set security configuration for ethprofile
      operationId: post_wallmount_lan_ports_security
      parameters:
        - name: port
          in: path
          description: port to return
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_Security'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/SuccessCode'
        '400':
          $ref: '#/components/responses/SetValueFailError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
    get:
      tags:
        - net
      description: Return security configuration
      operationId: get_allmount_lan_ports_security
      parameters:
        - name: port
          in: path
          description: port to return
          required: true
          schema:
            type: integer
            format: int32  
      security:
        - bearerAuth: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Security'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
  '/net/wallmount_lan_ports/{port}/accounting_server':
    post:
      tags:
        - net
      description: Set accounting server configuration for ethprofile
      operationId: post_wallmount_lan_ports_accounting_server
      parameters:
        - name: port
          in: path
          description: port to return
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_AccountingServer'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/SuccessCode'
        '400':
          $ref: '#/components/responses/SetValueFailError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
    get:
      tags:
        - net
      description: Return accounting server configuration
      operationId: get_allmount_lan_ports_accounting_server
      parameters:
        - name: port
          in: path
          description: port to return
          required: true
          schema:
            type: integer
            format: int32
      security:
        - bearerAuth: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountingServer'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
  '/net/wallmount_lan_ports/{port}/radius_server':
    post:
      tags:
        - net
      description: Set radius server configuration for ethprofile
      operationId: post_wallmount_lan_ports_radius_server
      parameters:
        - name: port
          in: path
          description: port to return
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_RadiusServer'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/SuccessCode'
        '400':
          $ref: '#/components/responses/SetValueFailError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
    get:
      tags:
        - net
      description: Return radius server configuration
      operationId: get_allmount_lan_ports_radius_server
      parameters:
        - name: port
          in: path
          description: port to return
          required: true
          schema:
            type: integer
            format: int32
      security:
        - bearerAuth: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadiusServer'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
  '/net/wallmount_lan_ports/{port}/radius_settings':
    post:
      tags:
        - net
      description: Set radius settings configuration for ethprofile
      operationId: post_wallmount_lan_ports_radius_settings
      parameters:
        - name: port
          in: path
          description: port to return
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_Radius_settings'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/SuccessCode'
        '400':
          $ref: '#/components/responses/SetValueFailError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
    get:
      tags:
        - net
      description: Return radius settings configuration
      operationId: get_allmount_lan_ports_radius_settings
      parameters:
        - name: port
          in: path
          description: port to return
          required: true
          schema:
            type: integer
            format: int32
      security:
        - bearerAuth: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Radius_settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
  '/net/wallmount_lan_ports/{port}/l2_isolation':
    post:
      tags:
        - net
      description: Set l2 isolation configuration for ethprofile
      operationId: post_wallmount_lan_ports_l2_isolation
      parameters:
        - name: port
          in: path
          description: port to return
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_L2_isolation'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/SuccessCode'
        '400':
          $ref: '#/components/responses/SetValueFailError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
    get:
      tags:
        - net
      description: Return l2 isolation configuration
      operationId: get_allmount_lan_ports_l2_isolation
      parameters:
        - name: port
          in: path
          description: port to return
          required: true
          schema:
            type: integer
            format: int32
      security:
        - bearerAuth: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/L2_isolation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
  '/net/wallmount_lan_ports/{port}/client_dns_server':
    post:
      tags:
        - net
      description: Set client dns server configuration for ethprofile
      operationId: post_wallmount_lan_ports_client_dns_server
      parameters:
        - name: port
          in: path
          description: port to return
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_ClientDnsServer'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/SuccessCode'
        '400':
          $ref: '#/components/responses/SetValueFailError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
    get:
      tags:
        - net
      description: Return client dns server configuration
      operationId: get_allmount_lan_ports_client_dns_server
      parameters:
        - name: port
          in: path
          description: port to return
          required: true
          schema:
            type: integer
            format: int32
      security:
        - bearerAuth: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientDnsServer'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
  '/net/wallmount_lan_ports/{port}/captive_portal':
    post:
      tags:
        - net
      description: Set captive portal configuration for ethprofile
      operationId: post_wallmount_lan_ports_captive_portal
      parameters:
        - name: port
          in: path
          description: port to return
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_Captive_Portal'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/SuccessCode'
        '400':
          $ref: '#/components/responses/SetValueFailError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
    get:
      tags:
        - net
      description: Return captive portal server configuration
      operationId: get_allmount_lan_ports_captive_portal
      parameters:
        - name: port
          in: path
          description: port to return
          required: true
          schema:
            type: integer
            format: int32
      security:
        - bearerAuth: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Captive_Portal'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
  '/net/wallmount_lan_ports/{port}/l2_acl':
    post:
      tags:
        - net
      description: Set l2 acl configuration for ethprofile
      operationId: post_wallmount_lan_ports_l2_acl
      parameters:
        - name: port
          in: path
          description: port to return
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_L2Acl'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/SuccessCode'
        '400':
          $ref: '#/components/responses/SetValueFailError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
    get:
      tags:
        - net
      description: Return l2 acl server configuration
      operationId: get_allmount_lan_ports_l2_acl
      parameters:
        - name: port
          in: path
          description: port to return
          required: true
          schema:
            type: integer
            format: int32
      security:
        - bearerAuth: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/L2Acl'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
  '/net/wallmount_lan_ports/{port}/l3_filter':
    post:
      tags:
        - net
      description: Set l3 filter configuration for ethprofile
      operationId: post_wallmount_lan_ports_l3_filter
      parameters:
        - name: port
          in: path
          description: port to return
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_L3_filter'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/SuccessCode'
        '400':
          $ref: '#/components/responses/SetValueFailError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
    get:
      tags:
        - net
      description: Return l3 filter server configuration
      operationId: get_allmount_lan_ports_l3_filter
      parameters:
        - name: port
          in: path
          description: port to return
          required: true
          schema:
            type: integer
            format: int32
      security:
        - bearerAuth: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/L3_filter'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
  /wifi/radio/24g:
    post:
      tags:
        - wifi
      description: Set 2.4GHz wifi radio configuration
      operationId: post_radio_24g
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_Radio_24G'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/SuccessCode'
        '400':
          $ref: '#/components/responses/SetValueFailError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
    get:
      tags:
        - wifi
      description: Return 2.4GHz wifi radio configuration
      operationId: get_radio_24g
      parameters: []
      security:
        - bearerAuth: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Radio_24G'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
  /wifi/radio/5g:
    post:
      tags:
        - wifi
      description: Set 5GHz or first 5GHz wifi radio configuration
      operationId: post_radio_5g
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_Radio_5G'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/SuccessCode'
        '400':
          $ref: '#/components/responses/SetValueFailError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
    get:
      tags:
        - wifi
      description: Return 5GHz or first 5GHz wifi radio configuration
      operationId: get_radio_5g
      parameters: []
      security:
        - bearerAuth: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Radio_5G'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
  /wifi/radio/5g_2:
    post:
      tags:
        - wifi
      description: Set second 5GHz wifi radio configuration
      operationId: post_radio_5g_2
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_Radio_5G'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/SuccessCode'
        '400':
          $ref: '#/components/responses/SetValueFailError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
    get:
      tags:
        - wifi
      description: Return second 5GHz wifi radio configuration
      operationId: get_radio_5g_2
      parameters: []
      security:
        - bearerAuth: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Radio_5G'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
  /wifi/channel_list:
    post:
      tags:
        - wifi
      description: Set country and green mode for channel
      operationId: post_channel_list
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_Channel_list'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/SuccessCode'
        '400':
          $ref: '#/components/responses/SetValueFailError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
    get:
      tags:
        - wifi
      description: get wifi radio channel list
      operationId: get_channel_list
      parameters: []
      security:
        - bearerAuth: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel_list'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
  /wifi/airtimefairness:
    post:
      tags:
        - wifi
      description: Set configuration for airtimefairness
      operationId: post_airtimefairness
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_Airtimefairness'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/SuccessCode'
        '400':
          $ref: '#/components/responses/SetValueFailError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
    get:
      tags:
        - wifi
      description: Return airtimefairness configuration
      operationId: get_airtimefairness
      parameters: []
      security:
        - bearerAuth: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Airtimefairness'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
  /wifi/mesh:
    post:
      tags:
        - wifi
      description: Set configuration for Mesh interface
      operationId: post_mesh
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_Mesh'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/SuccessCode'
        '400':
          $ref: '#/components/responses/SetValueFailError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
    get:
      tags:
        - wifi
      description: Return WiFi Mesh interface configuration
      operationId: get_mesh
      parameters: []
      security:
        - bearerAuth: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mesh'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
  /wifi/mesh/mesh_group_info:
    get:
      tags:
        - wifi
      description: Return wireless mesh group information
      operationId: get_mesh_group_info
      parameters: []
      security:
        - bearerAuth: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeshGroupInfo'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
  /wifi/mesh/mesh_group_tree_topology:
    get:
      tags:
        - wifi
      description: Return wireless mesh group tree topology information
      operationId: get_mesh_group_tree_topology
      parameters: []
      security:
        - bearerAuth: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeshGroupTreeTopology'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
  /wifi/mesh/mesh_group_node_info:
    get:
      tags:
        - wifi
      description: Return specified mesh node information in wireless mesh group
      operationId: get_mesh_group_node_info
      parameters:
        - in: query
          name: target_mac_addr
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeshGroupNodeInfo'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
  /wifi/ssids:
    get:
      tags:
        - wifi
      description: Get all SSID configuration
      operationId: get_ssids
      parameters: []
      security:
        - bearerAuth: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SSIDs'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
  '/wifi/{ssid_mode}/{id}':
    post:
      tags:
        - wifi
      description: Set SSID configuration according to specified ID
      operationId: post_ssidconfig_id
      parameters:
        - name: ssid_mode
          in: path
          description: ap, wds_ap_24g, wds_ap_5g, wds_ap_5g_2, enjet
          required: true
          schema:
            type: string
            enum:
              - ap
              - wds_ap_24g
              - wds_ap_5g
              - wds_ap_5g_2
              - enjet
        - name: id
          in: path
          description: ID of SSID to return
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_SSID'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/SuccessCode'
        '400':
          $ref: '#/components/responses/SetValueFailError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
    get:
      tags:
        - wifi
      description: Return SSID configuration according to specified ID
      operationId: get_ssidconfig_id
      parameters:
        - name: ssid_mode
          in: path
          description: ap, wds_ap_24g, wds_ap_5g, wds_ap_5g_2, enjet
          required: true
          schema:
            type: string
            enum:
              - ap
              - wds_ap_24g
              - wds_ap_5g
              - wds_ap_5g_2
              - enjet
        - name: id
          in: path
          description: ID of SSID to return
          required: true
          schema:
            type: integer
            format: int32
      security:
        - bearerAuth: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SSID'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
  '/wifi/{ssid_mode}/{id}/security':
    post:
      tags:
        - wifi
      description: Set security configuration according to specified SSID
      operationId: post_ssid_security
      parameters:
        - name: ssid_mode
          in: path
          description: ap, wds_ap_24g, wds_ap_5g, wds_ap_5g_2, enjet
          required: true
          schema:
            type: string
            enum:
              - ap
              - wds_ap_24g
              - wds_ap_5g
              - wds_ap_5g_2
              - enjet        
        - name: id
          in: path
          description: ID of SSID to return
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_WifiSecurity'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/SuccessCode'
        '400':
          $ref: '#/components/responses/SetValueFailError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
    get:
      tags:
        - wifi
      description: Return security configuration according to specified SSID
      operationId: get_ssid_security
      parameters:
        - name: ssid_mode
          in: path
          description: ap, wds_ap_24g, wds_ap_5g, wds_ap_5g_2, enjet
          required: true
          schema:
            type: string
            enum:
              - ap
              - wds_ap_24g
              - wds_ap_5g
              - wds_ap_5g_2
              - enjet        
        - name: id
          in: path
          description: ID of SSID to return
          required: true
          schema:
            type: integer
            format: int32
      security:
        - bearerAuth: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WifiSecurity'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
  '/wifi/{ssid_mode}/{id}/captive_portal':
    post:
      tags:
        - wifi
      description: Set captive portal configuration according to specified SSID
      operationId: post_ssid_captive_portal
      parameters:
        - name: ssid_mode
          in: path
          description: ap
          required: true
          schema:
            type: string
            enum:
              - ap
        - name: id
          in: path
          description: ID of SSID to return
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_Captive_Portal'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/SuccessCode'
        '400':
          $ref: '#/components/responses/SetValueFailError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
    get:
      tags:
        - wifi
      description: Return captive portal configuration according to specified SSID
      operationId: get_ssid_captive_portal
      parameters:
        - name: ssid_mode
          in: path
          description: ap
          required: true
          schema:
            type: string
            enum:
              - ap
        - name: id
          in: path
          description: ID of SSID to return
          required: true
          schema:
            type: integer
            format: int32
      security:
        - bearerAuth: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Captive_Portal'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
  '/wifi/{ssid_mode}/{id}/accounting_server':
    post:
      tags:
        - wifi
      description: Set accounting_server configuration according to specified SSID
      operationId: post_ssid_accounting_server
      parameters:
        - name: ssid_mode
          in: path
          description: ap, wds_ap_24g, wds_ap_5g, wds_ap_5g_2, enjet
          required: true
          schema:
            type: string
            enum:
              - ap
              - wds_ap_24g
              - wds_ap_5g
              - wds_ap_5g_2
              - enjet        
        - name: id
          in: path
          description: ID of SSID to return
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_AccountingServer'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/SuccessCode'
        '400':
          $ref: '#/components/responses/SetValueFailError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
    get:
      tags:
        - wifi
      description: Return accounting_server configuration according to specified SSID
      operationId: get_ssid_accounting_server
      parameters:
        - name: ssid_mode
          in: path
          description: ap, wds_ap_24g, wds_ap_5g, wds_ap_5g_2, enjet
          required: true
          schema:
            type: string
            enum:
              - ap
              - wds_ap_24g
              - wds_ap_5g
              - wds_ap_5g_2
              - enjet        
        - name: id
          in: path
          description: ID of SSID to return
          required: true
          schema:
            type: integer
            format: int32
      security:
        - bearerAuth: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountingServer'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
  '/wifi/{ssid_mode}/{id}/traffic_shaping':
    post:
      tags:
        - wifi
      description: Set traffic_shaping configuration according to specified SSID
      operationId: post_ssid_traffic_shaping
      parameters:
        - name: ssid_mode
          in: path
          description: ap, wds_ap_24g, wds_ap_5g, wds_ap_5g_2, enjet
          required: true
          schema:
            type: string
            enum:
              - ap
              - wds_ap_24g
              - wds_ap_5g
              - wds_ap_5g_2
        - name: id
          in: path
          description: ID of SSID to return
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_TrafficShaping'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/SuccessCode'
        '400':
          $ref: '#/components/responses/SetValueFailError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
    get:
      tags:
        - wifi
      description: Return traffic_shaping configuration according to specified SSID
      operationId: get_ssid_traffic_shaping
      parameters:
        - name: ssid_mode
          in: path
          description: ap, wds_ap_24g, wds_ap_5g, wds_ap_5g_2
          required: true
          schema:
            type: string
            enum:
              - ap
              - wds_ap_24g
              - wds_ap_5g
              - wds_ap_5g_2
        - name: id
          in: path
          description: ID of SSID to return
          required: true
          schema:
            type: integer
            format: int32
      security:
        - bearerAuth: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrafficShaping'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
  '/wifi/{ssid_mode}/{id}/band_steering':
    post:
      tags:
        - wifi
      description: Set band_steering configuration according to specified SSID
      operationId: post_ssid_band_steering
      parameters:
        - name: ssid_mode
          in: path
          description: ap
          required: true
          schema:
            type: string
            enum:
              - ap   
        - name: id
          in: path
          description: ID of SSID to return
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_BandSteering'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/SuccessCode'
        '400':
          $ref: '#/components/responses/SetValueFailError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
    get:
      tags:
        - wifi
      description: Return band_steering configuration according to specified SSID
      operationId: get_ssid_band_steering
      parameters:
        - name: ssid_mode
          in: path
          description: ap
          required: true
          schema:
            type: string
            enum:
              - ap
        - name: id
          in: path
          description: ID of SSID to return
          required: true
          schema:
            type: integer
            format: int32
      security:
        - bearerAuth: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BandSteering'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
  '/wifi/{ssid_mode}/{id}/client_dns_server':
    post:
      tags:
        - wifi
      description: Set client dns server configuration according to specified SSID
      operationId: post_ssid_client_dns_server
      parameters:
        - name: ssid_mode
          in: path
          description: ap
          required: true
          schema:
            type: string
            enum:
              - ap
        - name: id
          in: path
          description: ID of SSID to return
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_ClientDnsServer'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/SuccessCode'
        '400':
          $ref: '#/components/responses/SetValueFailError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
    get:
      tags:
        - wifi
      description: Return client dns server configuration according to specified SSID
      operationId: get_ssid_client_dns_server
      parameters:
        - name: ssid_mode
          in: path
          description: ap
          required: true
          schema:
            type: string
            enum:
              - ap
        - name: id
          in: path
          description: ID of SSID to return
          required: true
          schema:
            type: integer
            format: int32
      security:
        - bearerAuth: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientDnsServer'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
  '/wifi/{ssid_mode}/{id}/wpa':
    post:
      tags:
        - wifi
      description: Set configuration for wpa
      operationId: post_ssid_wpa
      parameters:
        - name: ssid_mode
          in: path
          description: ap, wds_ap_24g, wds_ap_5g, wds_ap_5g_2, enjet
          required: true
          schema:
            type: string
            enum:
              - ap
              - wds_ap_24g
              - wds_ap_5g
              - wds_ap_5g_2
              - enjet
        - name: id
          in: path
          description: ID of SSID to return
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_WPA'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/SuccessCode'
        '400':
          $ref: '#/components/responses/SetValueFailError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
    get:
      tags:
        - wifi
      description: Return configuration for wpa
      operationId: get_ssid_wpa
      parameters:
        - name: ssid_mode
          in: path
          description: ap, wds_ap_24g, wds_ap_5g, wds_ap_5g_2, enjet
          required: true
          schema:
            type: string
            enum:
              - ap
              - wds_ap_24g
              - wds_ap_5g
              - wds_ap_5g_2
              - enjet
        - name: id
          in: path
          description: ID of SSID to return
          required: true
          schema:
            type: integer
            format: int32
      security:
        - bearerAuth: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WPA'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
  '/wifi/{ssid_mode}/{id}/radius_server':
    post:
      tags:
        - wifi
      description: Set radius_server configuration according to specified SSID
      operationId: post_ssid_radius_server
      parameters:
        - name: ssid_mode
          in: path
          description: ap, wds_ap_24g, wds_ap_5g, wds_ap_5g_2, enjet
          required: true
          schema:
            type: string
            enum:
              - ap
              - wds_ap_24g
              - wds_ap_5g
              - wds_ap_5g_2
              - enjet        
        - name: id
          in: path
          description: ID of SSID to return
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_RadiusServer'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/SuccessCode'
        '400':
          $ref: '#/components/responses/SetValueFailError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
    get:
      tags:
        - wifi
      description: Return radius_server configuration according to specified SSID
      operationId: get_ssid_radius_server
      parameters:
        - name: ssid_mode
          in: path
          description: ap, wds_ap_24g, wds_ap_5g, wds_ap_5g_2, enjet
          required: true
          schema:
            type: string
            enum:
              - ap
              - wds_ap_24g
              - wds_ap_5g
              - wds_ap_5g_2
              - enjet
        - name: id
          in: path
          description: ID of SSID to return
          required: true
          schema:
            type: integer
            format: int32
      security:
        - bearerAuth: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadiusServer'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
  '/wifi/{ssid_mode}/{id}/scheduling':
    post:
      tags:
        - wifi
      description: Set scheduling configuration according to specified SSID
      operationId: post_ssid_scheduling
      parameters:
        - name: ssid_mode
          in: path
          description: ap, wds_ap_24g, wds_ap_5g, wds_ap_5g_2, enjet
          required: true
          schema:
            type: string
            enum:
              - ap
              - wds_ap_24g
              - wds_ap_5g
              - wds_ap_5g_2
              - enjet
        - name: id
          in: path
          description: ID of SSID to return
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_Scheduling'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/SuccessCode'
        '400':
          $ref: '#/components/responses/SetValueFailError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
    get:
      tags:
        - wifi
      description: Return scheduling configuration according to specified SSID
      operationId: get_ssid_scheduling
      parameters:
        - name: ssid_mode
          in: path
          description: ap, wds_ap_24g, wds_ap_5g, wds_ap_5g_2, enjet
          required: true
          schema:
            type: string
            enum:
              - ap
              - wds_ap_24g
              - wds_ap_5g
              - wds_ap_5g_2
              - enjet
        - name: id
          in: path
          description: ID of SSID to return
          required: true
          schema:
            type: integer
            format: int32
      security:
        - bearerAuth: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scheduling'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
  '/wifi/{ssid_mode}/{id}/l2_acl':
    post:
      tags:
        - wifi
      description: Set L2 ACL rules according to specified SSID
      operationId: post_ssid_l2_acl
      parameters:
        - name: ssid_mode
          in: path
          description: ap, wds_ap_24g, wds_ap_5g, wds_ap_5g_2, enjet
          required: true
          schema:
            type: string
            enum:
              - ap
              - wds_ap_24g
              - wds_ap_5g
              - wds_ap_5g_2
              - enjet
        - name: id
          in: path
          description: ID of SSID to return
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_L2Acl'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/SuccessCode'
        '400':
          $ref: '#/components/responses/SetValueFailError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
    get:
      tags:
        - wifi
      description: Get L2 ACL rules according to specified SSID
      operationId: get_ssid_l2_acl
      parameters:
        - name: ssid_mode
          in: path
          description: ap, wds_ap_24g, wds_ap_5g, wds_ap_5g_2, enjet
          required: true
          schema:
            type: string
            enum:
              - ap
              - wds_ap_24g
              - wds_ap_5g
              - wds_ap_5g_2
              - enjet
        - name: id
          in: path
          description: ID of SSID to return
          required: true
          schema:
            type: integer
            format: int32
      security:
        - bearerAuth: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/L2Acl'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
  '/wifi/{ssid_mode}/{id}/traffic_info':
    get:
      tags:
        - wifi
      description: Return coneected wifi client information
      operationId: get_ssid_traffic_info
      parameters:
        - name: ssid_mode
          in: path
          description: ap, wds_ap_24g, wds_ap_5g, wds_ap_5g_2, enjet
          required: true
          schema:
            type: string
            enum:
              - ap
              - wds_ap_24g
              - wds_ap_5g
              - wds_ap_5g_2
              - enjet
        - name: id
          in: path
          description: ID of SSID to return
          required: true
          schema:
            type: integer
            format: int32
      security:
        - bearerAuth: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrafficInfo'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError' 
  '/wifi/{ssid_mode}/{id}/kick':
    post:
      tags:
        - wifi
      description: Kick connect mac to specified SSID
      operationId: post_ssid_kick
      parameters:
        - name: ssid_mode
          in: path
          description: ap, wds_ap_24g, wds_ap_5g, wds_ap_5g_2, enjet
          required: true
          schema:
            type: string
            enum:
              - ap
              - wds_ap_24g
              - wds_ap_5g
              - wds_ap_5g_2
              - enjet
        - name: id
          in: path
          description: ID of SSID to return
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_Kick'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/SuccessCode'
        '400':
          $ref: '#/components/responses/SetValueFailError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
  '/wifi/{ssid_mode}/{id}/l2_isolation':
    post:
      tags:
        - wifi
      description: Set l2 isolation settings to specified SSID
      operationId: post_ssid_l2_isolation
      parameters:
        - name: ssid_mode
          in: path
          description: ap, wds_ap_24g, wds_ap_5g, wds_ap_5g_2, enjet
          required: true
          schema:
            type: string
            enum:
              - ap
              - wds_ap_24g
              - wds_ap_5g
              - wds_ap_5g_2
              - enjet
        - name: id
          in: path
          description: ID of SSID to return
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_L2_isolation'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/SuccessCode'
        '400':
          $ref: '#/components/responses/SetValueFailError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
    get:
      tags:
        - wifi
      description: Return l2 isolation settings  to specified SSID
      operationId: get_ssid_l2_isolation
      parameters:
        - name: ssid_mode
          in: path
          description: ap, wds_ap_24g, wds_ap_5g, wds_ap_5g_2, enjet
          required: true
          schema:
            type: string
            enum:
              - ap
              - wds_ap_24g
              - wds_ap_5g
              - wds_ap_5g_2
              - enjet
        - name: id
          in: path
          description: ID of SSID to return
          required: true
          schema:
            type: integer
            format: int32
      security:
        - bearerAuth: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/L2_isolation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
  '/wifi/{ssid_mode}/{id}/l3_filter':
    post:
      tags:
        - wifi
      description: Set l3 filter to specified SSID
      operationId: post_ssid_l3_filter
      parameters:
        - name: ssid_mode
          in: path
          description: ap, wds_ap_24g, wds_ap_5g, wds_ap_5g_2, enjet
          required: true
          schema:
            type: string
            enum:
              - ap
              - wds_ap_24g
              - wds_ap_5g
              - wds_ap_5g_2
              - enjet
        - name: id
          in: path
          description: ID of SSID to return
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_L3_filter'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/SuccessCode'
        '400':
          $ref: '#/components/responses/SetValueFailError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
    get:
      tags:
        - wifi
      description: Return l3 filter to specified SSID
      operationId: get_ssid_l3_filter
      parameters:
        - name: ssid_mode
          in: path
          description: ap, wds_ap_24g, wds_ap_5g, wds_ap_5g_2, enjet
          required: true
          schema:
            type: string
            enum:
              - ap
              - wds_ap_24g
              - wds_ap_5g
              - wds_ap_5g_2
              - enjet        
        - name: id
          in: path
          description: ID of SSID to return
          required: true
          schema:
            type: integer
            format: int32
      security:
        - bearerAuth: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/L3_filter'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
  '/wifi/{ssid_mode}/{id}/app_detection':
    post:
      tags:
        - wifi
      description: Set app detection to specified SSID
      operationId: post_ssid_app_detection
      parameters:
        - name: ssid_mode
          in: path
          description: ap, wds_ap_24g, wds_ap_5g, wds_ap_5g_2, enjet
          required: true
          schema:
            type: string
            enum:
              - ap
              - wds_ap_24g
              - wds_ap_5g
              - wds_ap_5g_2
              - enjet
        - name: id
          in: path
          description: ID of SSID to return
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_App_detection'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/SuccessCode'
        '400':
          $ref: '#/components/responses/SetValueFailError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
    get:
      tags:
        - wifi
      description: Return app detection to specified SSID
      operationId: get_ssid_app_detection
      parameters:
        - name: ssid_mode
          in: path
          description: ap, wds_ap_24g, wds_ap_5g, wds_ap_5g_2, enjet
          required: true
          schema:
            type: string
            enum:
              - ap
              - wds_ap_24g
              - wds_ap_5g
              - wds_ap_5g_2
              - enjet
        - name: id
          in: path
          description: ID of SSID to return
          required: true
          schema:
            type: integer
            format: int32
      security:
        - bearerAuth: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/App_detection'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
  '/wifi/{ssid_mode}/{id}/hotspot20':
    post:
      tags:
        - wifi
      description: Set hotspot20 to specified SSID
      operationId: post_ssid_hotspot20
      parameters:
        - name: ssid_mode
          in: path
          description: ap, wds_ap_24g, wds_ap_5g, wds_ap_5g_2, enjet
          required: true
          schema:
            type: string
            enum:
              - ap
              - wds_ap_24g
              - wds_ap_5g
              - wds_ap_5g_2
              - enjet
        - name: id
          in: path
          description: ID of SSID to return
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NullData'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/SuccessCode'
        '400':
          $ref: '#/components/responses/SetValueFailError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
  /wifi/scanning_radio:
    post:
      tags:
        - wifi
      description: Post scanning radio information
      operationId: post_scanning_radio
      parameters: []
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_Scanning_radio'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/SuccessCode'
        '400':
          $ref: '#/components/responses/SetValueFailError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
    get:
      tags:
        - wifi
      description: Return scanning radio information
      operationId: get_scanning_radio
      parameters: []
      security:
        - bearerAuth: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scanning_radio'
        '202':
          $ref: '#/components/responses/AcceptedCode'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
  /wifi/wifi_client_info:
    get:
      tags:
        - wifi
      description: Return coneected wifi client information
      operationId: get_wifi_client_info
      parameters: []
      security:
        - bearerAuth: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WiFiClientInfo'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
  /wifi/mesh/throughput:
    post:
      tags:
        - wifi
      description: >-
        Request target node to ask specified mesh node (destination) to run
        throughput.
      operationId: post_mesh_throughput
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                target_mac_addr:
                  type: string
                  format: mac
                dst_mac_addr:
                  type: string
                  format: mac
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/SuccessCode'
        '202':
          $ref: '#/components/responses/AcceptedCode'
        '400':
          $ref: '#/components/responses/SetValueFailError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
    get:
      tags:
        - wifi
      description: Return mesh throughput result from given target mesh node
      operationId: get_mesh_throughput
      parameters:
        - in: query
          name: target_mac_addr
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mesh_Throughput_Result'
        '202':
          $ref: '#/components/responses/AcceptedCode'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
  /wifi/site_survey:
    post:
      tags:
        - wifi
      description: Run wifi site-survey
      operationId: post_site_survey
      parameters: []
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NullData'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/SuccessCode'
        '400':
          $ref: '#/components/responses/SetValueFailError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
    get:
      tags:
        - wifi
      description: Get wifi site-survey result
      operationId: get_site_survey
      parameters: []
      security:
        - bearerAuth: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WifiSiteSurveyResult'
        '202':
          $ref: '#/components/responses/AcceptedCode'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
  /wifi/scan/chanutil:
    get:
      tags:
        - wifi
      description: get channel utilization
      operationId: get_wifi_scan_chanutil
      parameters: []
      security:
        - bearerAuth: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scan_ChanUtil_Result'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
  /wifi/scan/ap_list:
    get:
      tags:
        - wifi
      description: get AP list
      operationId: get_wifi_scan_ap_list
      parameters: []
      security:
        - bearerAuth: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scan_APList_Result'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
  /wifi/scan/sta_list:
    get:
      tags:
        - wifi
      description: get station list
      operationId: get_wifi_scan_sta_list
      parameters: []
      security:
        - bearerAuth: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scan_STAList_Result'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
  
  /mgm/ssh_tunnel:
    post:
      tags:
        - mgm
      description: Set SSH setting
      operationId: post_ssh_setting
      parameters: []
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_SSH'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/SuccessCode'
        '400':
          $ref: '#/components/responses/SetValueFailError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
    get:
      tags:
        - mgm
      description: Get SSH setting
      operationId: get_ssh_setting
      parameters: []
      security:
        - bearerAuth: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SSH'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
  /mgm/fw_upgrade:
    post:
      tags:
        - mgm
      description: Set configuration for firmware upgrade
      operationId: post_fw_upgrade
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FwUpgrade'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/SuccessCode'
        '400':
          $ref: '#/components/responses/SetValueFailError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
  /mgm/reboot:
    post:
      tags:
        - mgm
      description: Reboot the device
      operationId: post_reboot
      parameters: []
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NullData'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/SuccessCode'
        '400':
          $ref: '#/components/responses/SetValueFailError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
  /mgm/reset_to_default:
    post:
      tags:
        - mgm
      description: Reset the device to factory default
      operationId: post_reset_to_default
      parameters: []
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NullData'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/SuccessCode'
        '400':
          $ref: '#/components/responses/SetValueFailError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
  /mgm/reset_with_key:
    post:
      tags:
        - mgm
      description: Reset the device to factory default with key
      operationId: post_reset_with_key
      parameters: []
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_ResetKey'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/SuccessCode'
        '400':
          $ref: '#/components/responses/SetValueFailError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
  /mgm/led_dance:
    post:
      tags:
        - mgm
      description: Set configuration for led dance
      operationId: post_led_dance
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_Led_dance'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/SuccessCode'
        '400':
          $ref: '#/components/responses/SetValueFailError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/UrlNotMatchError'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  responses:
    SuccessCode:
      description: Success case without return value
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Response_No_Data'
    AcceptedCode:
      description: API is processing
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Response_No_Data'
    UnauthorizedError:
      description: Access token is missing or invalid
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Response_No_Data'
    UrlNotMatchError:
      description: API URL not matched
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Response_No_Data'
    SetValueFailError:
      description: API set value error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Response_No_Data'
    GatewayTimeOut:
      description: Server no response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NoRespond'
    UnknownError:
      description: Unknown error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Unknown'
  schemas:
    Response_No_Data:
      type: object
      properties:
        status_code:
          type: integer
        reason_phrase:
          type: string
        error_code:
          type: integer
        error_message:
          type: string
        data:
          type: object
    NoRespond:
      type: object
      properties:
        status_code:
          type: integer
        reason_phrase:
          type: string
        error_code:
          type: integer
          enum:
            - 10
            - 13
        error_message:
          type: string
          enum:
            - API_INTERNET_ERROR
            - API_REMOTE_SERVER_ERROR
        data:
          type: object
    Unknown:
      type: object
      properties:
        status_code:
          type: integer
        reason_phrase:
          type: string
        error_code:
          type: integer
          enum:
            - 100
            - 101
            - 104
        error_message:
          type: string
          enum:
            - API_FILE_MD5SUM_ERROR
            - API_FILE_NOT_EXIST
            - API_FILE_SIZE_NOT_EQUAL
        data:
          type: object          
    Login:
      type: object
      properties:
        username:
          type: string
          minLength: 1
          maxLength: 12
          pattern: '^[A-Za-z0-9_!*@$%^()+=|<>,.?{}~-]$'
        password:
          type: string
          minLength: 1
          maxLength: 12
          pattern: '^[A-Za-z0-9_!*@$%^()+=|<>,.?{}~-]$'
    Login_Token:
      type: object
      properties:
        status_code:
          type: integer
        reason_phrase:
          type: string
        error_code:
          type: integer
        error_message:
          type: string
        data:
          type: object
          properties:
            token:
              type: string
    ChangeAccount:
      type: object
      properties:
        username:
          type: string
          minLength: 1
          maxLength: 12
          pattern: '^[A-Za-z0-9_!*@$%^()+=|<>,.?{}~-]$'
        password:
          type: string
          minLength: 1
          maxLength: 12
          pattern: '^[A-Za-z0-9_!*@$%^()+=|<>,.?{}~-]$'
    Radio_24G:
      type: object
      properties:
        status_code:
          type: integer
        reason_phrase:
          type: string
        error_code:
          type: integer
        error_message:
          type: string
        data:
          $ref: '#/components/schemas/_Radio_24G_Stat'
    _Radio_24G:
      type: object
      properties:
        enable:
          type: boolean
        country:
          $ref: '#/components/schemas/CountryTable'
        green_mode:
          type: boolean
        11ax_disable:
          type: boolean
        channel:
          type: integer
          minimum: 0
          maximum: 14
          description: >
            Specific value:
              * 0 - Auto
        channel_config_enable:
          type: boolean
        channel_config_list:
          type: string
          minimum: 1
          maximum: 14
          description: >
            Example value:
              * 1,6,11
        ht_mode:
          type: string
          enum:
            - HT20
            - HT20_40
            - HT40
        tx_power:
          type: integer
          minimum: 8
          maximum: 28
          enum:
            - 0
          description: >
            Specific value:
              * 0 - Auto
        client_limit:
          type: integer
          minimum: 0
          maximum: 127
          description: >
            Specific value:
              * 0 - Disable
        min_bitrate:
          type: integer
          enum:
            - 1
            - 2
            - 5
            - 6
            - 9
            - 11
            - 12
            - 18
            - 24
        rssi_threshold:
          type: integer
          minimum: -100
          maximum: -60
          description: >
            Specific value:
              * 0 - Disable
        opmode:
          type: string
          enum:
            - ap
            - wds_ap
            - wds_bridge
            - wds_sta
            - sta_ap
            - sta
            - scan
        distance:
          type: integer
          minimum: 0
          maximum: 30
        legacy_hwmode_deny:
          type: boolean
        client_balance:
          type: boolean
        multicast_to_unicast:
          type: boolean
    _Radio_24G_Stat:
      type: object
      properties:
        enable:
          type: boolean
        country:
          $ref: '#/components/schemas/CountryTable'
        green_mode:
          type: boolean
        hw_mode:
          type: string
          enum:
            - 11b
            - 11g
            - 11bg
            - 11n
            - 11ng
        11ax_disable:
          type: boolean
        cur_channel:
          type: integer
          minimum: 0
          maximum: 14
          description: >
            Specific value:
              * 0 - Auto
        cur_ht_mode:
          type: string
          enum:
            - HT20
            - HT20_40
            - HT40
            - N/A
        channel:
          type: integer
          minimum: 0
          maximum: 14
          description: >
            Specific value:
              * 0 - Auto
        channel_config_enable:
          type: boolean
        channel_config_list:
          type: string
          minimum: 1
          maximum: 14
          description: >
            Example value:
              * 1,6,11
        ht_mode:
          type: string
          enum:
            - HT20
            - HT20_40
            - HT40
        tx_power:
          type: integer
          minimum: 8
          maximum: 28
          enum:
            - 0
          description: >
            Specific value:
              * 0 - Auto
        client_limit:
          type: integer
          minimum: 0
          maximum: 127
          description: >
            Specific value:
              * 0 - Disable
        min_bitrate:
          type: integer
          enum:
            - 1
            - 2
            - 5
            - 6
            - 9
            - 11
            - 12
            - 18
            - 24
        rssi_threshold:
          type: integer
          minimum: -100
          maximum: -60
          description: >
            Specific value:
              * 0 - Disable
        opmode:
          type: string
          enum:
            - ap
            - wds_ap
            - wds_bridge
            - wds_sta
            - sta_ap
            - sta
            - scan
        STA_mode_stat:
          type: object
          properties:
            connect_to_ssid:
              type: string
        distance:
          type: integer
          minimum: 0
          maximum: 30
        legacy_hwmode_deny:
          type: boolean
        client_balance:
          type: boolean
        multicast_to_unicast:
          type: boolean
    Radio_5G:
      type: object
      properties:
        status_code:
          type: integer
        reason_phrase:
          type: string
        error_code:
          type: integer
        error_message:
          type: string
        data:
          $ref: '#/components/schemas/_Radio_5G_Stat'
    _Radio_5G:
      type: object
      properties:
        enable:
          type: boolean
        country:
          $ref: '#/components/schemas/CountryTable'
        green_mode:
          type: boolean
        11ax_disable:
          type: boolean
        channel:
          type: integer
          enum:
            - 0
            - 36
            - 40
            - 44
            - 48
            - 52
            - 56
            - 60
            - 64
            - 100
            - 104
            - 108
            - 112
            - 116
            - 120
            - 124
            - 128
            - 132
            - 136
            - 140
            - 144
            - 149
            - 153
            - 157
            - 161
            - 165
          description: >
            Specific value:
             * 0 - Auto
        channel_config_enable:
          type: boolean
        channel_config_list:
          type: string
          enum:
            - 36
            - 40
            - 44
            - 48
            - 52
            - 56
            - 60
            - 64
            - 100
            - 104
            - 108
            - 112
            - 116
            - 120
            - 124
            - 128
            - 132
            - 136
            - 140
            - 144
            - 149
            - 153
            - 157
            - 161
            - 165
          description: >
            Example value:
              * 36,40,44,48
        ht_mode:
          type: string
          enum:
            - HT20
            - HT40
            - HT80
        tx_power:
          type: integer
          minimum: 8
          maximum: 28
          enum:
            - 0
          description: >
            Specific value:
              * 0 - Auto
        client_limit:
          type: integer
          minimum: 0
          maximum: 127
          description: >
            Specific value:
              * 0 - Disable
        min_bitrate:
          type: integer
          enum:
            - 6
            - 9
            - 12
            - 18
            - 24
        rssi_threshold:
          type: integer
          minimum: -100
          maximum: -60
          description: >
            Specific value:
              * 0 - Disable
        opmode:
          type: string
          enum:
            - ap
            - wds_ap
            - wds_bridge
            - wds_sta
            - sta_ap
            - sta
            - scan
        distance:
          type: integer
          minimum: 0
          maximum: 30
        legacy_hwmode_deny:
          type: boolean
        client_balance:
          type: boolean
        multicast_to_unicast:
          type: boolean
        enjet_enable:
          type: boolean
        enjet:
          type: object
          properties:
            AP_role:
              type: object
              properties:
                ap_time_slot:
                  type: integer
                  minimum: 2
                  maximum: 7
                  enum:
                    - 0
                  description: >
                    Specific value:
                      * 0 - Auto
            Station_role:
              type: object
              properties:
                priority:
                  type: string
                  enum:
                    - High
                    - Middle
                    - Low
      required:
        - enjet_enable
    _Radio_5G_Stat:
      type: object
      properties:
        enable:
          type: boolean
        country:
          $ref: '#/components/schemas/CountryTable'
        green_mode:
          type: boolean
        hw_mode:
          type: string
          enum:
            - 11a
            - 11n
            - 11na
            - 11ac
        11ax_disable:
          type: boolean
        cur_channel:
          type: integer
          enum:
            - 0
            - 36
            - 40
            - 44
            - 48
            - 52
            - 56
            - 60
            - 64
            - 100
            - 104
            - 108
            - 112
            - 116
            - 120
            - 124
            - 128
            - 132
            - 136
            - 140
            - 144
            - 149
            - 153
            - 157
            - 161
            - 165
          description: >
            Specific value:
             * 0 - Auto
        channel_config_enable:
          type: boolean
        channel_config_list:
          type: string
          enum:
            - 36
            - 40
            - 44
            - 48
            - 52
            - 56
            - 60
            - 64
            - 100
            - 104
            - 108
            - 112
            - 116
            - 120
            - 124
            - 128
            - 132
            - 136
            - 140
            - 144
            - 149
            - 153
            - 157
            - 161
            - 165
          description: >
            Example value:
              * 36,40,44,48
        cur_ht_mode:
          type: string
          enum:
            - HT20
            - HT40
            - HT80
            - N/A
        channel:
          type: integer
          enum:
            - 0
            - 36
            - 40
            - 44
            - 48
            - 52
            - 56
            - 60
            - 64
            - 100
            - 104
            - 108
            - 112
            - 116
            - 120
            - 124
            - 128
            - 132
            - 136
            - 140
            - 144
            - 149
            - 153
            - 157
            - 161
            - 165
        ht_mode:
          type: string
          enum:
            - HT20
            - HT40
            - HT80
        tx_power:
          type: integer
          minimum: 8
          maximum: 28
          enum:
            - 0
          description: >
            Specific value:
              * 0 - Auto
        client_limit:
          type: integer
          minimum: 0
          maximum: 127
          description: >
            Specific value:
              * 0 - Disable
        min_bitrate:
          type: integer
          enum:
            - 6
            - 9
            - 12
            - 18
            - 24
        rssi_threshold:
          type: integer
          minimum: -100
          maximum: -60
          description: >
            Specific value:
              * 0 - Disable
        opmode:
          type: string
          enum:
            - ap
            - wds_ap
            - wds_bridge
            - wds_sta
            - sta_ap
            - sta
            - scan
        STA_mode_stat:
          type: object
          properties:
            connect_to_ssid:
              type: string
        dfs_backup_channel:
          type: string
          enum:
            - 36
            - 40
            - 44
            - 48
            - 52
            - 56
            - 60
            - 64
            - 100
            - 104
            - 108
            - 112
            - 116
            - 120
            - 124
            - 128
            - 132
            - 136
            - 140
            - 144
            - 149
            - 153
            - 157
            - 161
            - 165
        distance:
          type: integer
          minimum: 0
          maximum: 30
        legacy_hwmode_deny:
          type: boolean
        client_balance:
          type: boolean
        multicast_to_unicast:
          type: boolean
        enjet_enable:
          type: boolean
        enjet:
          type: object
          properties:
            role:
              type: string
              enum:
                - AP_role
                - Station_role
            AP_role:
              type: object
              properties:
                ap_time_slot:
                  type: integer
                  minimum: 2
                  maximum: 7
                  enum:
                    - 0
                  description: >
                    Specific value:
                      * 0 - Auto
            Station_role:
              type: object
              properties:
                priority:
                  type: string
                  enum:
                    - High
                    - Middle
                    - Low
    Wep:
      type: object
      properties:
        auth_type:
          type: string
          enum:
            - open
            - shared
        input_type:
          type: string
          enum:
            - hex
            - ascii
        key_length:
          type: string
          enum:
            - 40/60-bit
            - 104/128-bit
            - 128/152-bit
        default_key:
          type: integer
          minimum: 1
          maximum: 4
        key1:
          type: string
          pattern: '^[A-Za-z0-9''"_!*@$%^()+= |<>,.?\[\]{}~`#&\\/-]$'
        key2:
          type: string
          pattern: '^[A-Za-z0-9''"_!*@$%^()+= |<>,.?\[\]{}~`#&\\/-]$'
        key3:
          type: string
          pattern: '^[A-Za-z0-9''"_!*@$%^()+= |<>,.?\[\]{}~`#&\\/-]$'
        key4:
          type: string
          pattern: '^[A-Za-z0-9''"_!*@$%^()+= |<>,.?\[\]{}~`#&\\/-]$'
    WPA:
      type: object
      properties:
        status_code:
          type: integer
        reason_phrase:
          type: string
        error_code:
          type: integer
        error_message:
          type: string
        data:
          $ref: '#/components/schemas/_WPA'
    _WPA:
      type: object
      properties:
        cipherType:
          type: string
        key_interval:
          type: integer
        passphrase:
          type: string
        multiple_passphrase_enable:
          type: boolean
        multiple_passphrase:
          type: array
          items:
            $ref: '#/components/schemas/_Multi_passphrase'
        radius_mac_auth:
          type: boolean
    Enterprise:
      type: object
      properties:
        eap_method:
          type: string
          enum:
            - ttls
            - peap
        eap_auth:
          type: string
          enum:
            - MSCHAP
            - MSCHAPV2
        auth_identity:
          type: string
          minLength: 1
          maxLength: 64
          pattern: '^[A-Za-z0-9''"_!*@$%^()+= |<>,.?\[\]{}~`#&\\/-]$'
        auth_password:
          type: string
          minLength: 1
          maxLength: 64
          pattern: '^[A-Za-z0-9''"_!*@$%^()+= |<>,.?\[\]{}~`#&\\/-]$'
    Ethernet:
      type: object
      properties:
        status_code:
          type: integer
        reason_phrase:
          type: string
        error_code:
          type: integer
        error_message:
          type: string
        data:
          type: object
          properties:
            lacp_mode:
              type: boolean
            mgm_vlan_enable:
              type: boolean
            mgm_vlan_id:
              type: integer
              minimum: 1
              maximum: 4094
            presence_reporting:
              $ref: '#/components/schemas/_Presence_reporting'
            mode:
              type: string
              enum:
                - Static
                - DHCP
            ipv4:
              $ref: '#/components/schemas/ipv4_info'
            ipv6:
              $ref: '#/components/schemas/ipv6_info'
    _Ethernet:
      type: object
      properties:
        lacp_mode:
          type: boolean
        mgm_vlan_enable:
          type: boolean
        mgm_vlan_id:
          type: integer
          minimum: 1
          maximum: 4094
        mode:
          type: string
          enum:
            - Static
            - DHCP
        ipv4:
          $ref: '#/components/schemas/_ipv4_info'
        ipv6:
          $ref: '#/components/schemas/_ipv6_info'
    ipv4_info:
      type: object
      properties:
        ip:
          type: string
          format: ipv4
        mask:
          type: string
          format: ipv4
        gateway:
          type: string
          format: ipv4
        primary_dns:
          type: string
          format: ipv4
        secondary_dns:
          type: string
          format: ipv4
        cur_ipv4_ip:
          type: string
          format: ipv4
        cur_ipv4_mask:
          type: string
          format: ipv4
        cur_ipv4_gateway:
          type: string
          format: ipv4
        cur_ipv4_dns1:
          type: string
          format: ipv4
        cur_ipv4_dns2:
          type: string
          format: ipv4
    ipv6_info:
      type: object
      properties:
        linklocal:
          type: boolean
        ip:
          type: string
          format: ipv6
        prefix:
          type: integer
          minimum: 2
          maximum: 128
        gateway:
          type: string
          format: ipv6
        primary_dns:
          type: string
          format: ipv6
        secondary_dns:
          type: string
          format: ipv6
        cur_ipv6_addr:
          type: string
          format: ipv6
        cur_ipv6_link:
          type: string
          format: ipv6
        cur_ipv6_gwaddr:
          type: string
          format: ipv6
        cur_ipv6_dns1:
          type: string
          format: ipv6
        cur_ipv6_dns2:
          type: string
          format: ipv6
    _ipv4_info:
      type: object
      properties:
        ip:
          type: string
          format: ipv4
        mask:
          type: string
          format: ipv4
        gateway:
          type: string
          format: ipv4
        primary_dns:
          type: string
          format: ipv4
        secondary_dns:
          type: string
          format: ipv4
    _ipv6_info:
      type: object
      properties:
        linklocal:
          type: boolean
        ip:
          type: string
          format: ipv6
        prefix:
          type: integer
          minimum: 2
          maximum: 128
        gateway:
          type: string
          format: ipv6
        primary_dns:
          type: string
          format: ipv6
        secondary_dns:
          type: string
          format: ipv6
    Device_status:
      type: object
      properties:
        Connectivity:
          type: array
          items:
            $ref: '#/components/schemas/Device_connectivity'
        LocalInfo:
          $ref: '#/components/schemas/Local_Info'
        InternetInfo:
          $ref: '#/components/schemas/Internet_Info'
    Device_connectivity:
      properties:
        protocol:
          type: string
          enum:
            - phylink
            - arpdup
            - icmp
            - http
            - https
            - dns
        status:
          type: integer
          enum:
            - 0
            - 1
            - 100
            - 101
            - 102
            - 103
            - 104
            - 200
            - 201
            - 202
            - 203
            - 204
            - 300
            - 301
            - 302
            - 303
            - 304
            - 400
            - 401
            - 402
            - 403
            - 404
            - 405
            - 406
            - 407
            - 500
            - 501
            - 502
            - 503
            - 504
            - 505
            - 506
            - 507
            - 508
            - 600
            - 601
            - 602
            - 603
          description: >
            Specific value:
              * 0 - LINK_INIT
              * 1 - STATUS_OK
              * 100 - ICMP_CREATE_ERR
              * 101 - ICMP_SEND_ERR
              * 102 - ICMP_RCV_ERR
              * 103 - ICMP_DATA_ERR
              * 104 - ICMP_NO_RESPONSE
              * 200 - ARP_CREATE_ERR
              * 201 - ARP_SEND_ERR
              * 202 - ARP_DATA_ERR
              * 203 - ARP_RCV_ERR
              * 204 - ARP_DUPLICATE
              * 300 - DNS_CREATE_ERR
              * 301 - DNS_SEND_ERR
              * 302 - DNS_RCV_ERR
              * 303 - DNS_DATA_ERR
              * 304 - DNS_NO_RESPONSE
              * 400 - HTTP_DATA_ERR
              * 401 - HTTP_DNS_ERR
              * 402 - HTTP_CREATE_ERR
              * 403 - HTTP_SEND_ERR
              * 404 - HTTP_RCV_ERR
              * 405 - HTTP_CONN_ERR
              * 406 - HTTP_PAGE_ERR
              * 407 - HTTP_NO_RESPONSE
              * 500 - HTTPS_DATA_ERR
              * 501 - HTTPS_DNS_ERR
              * 502 - HTTPS_CREATE_ERR
              * 503 - HTTPS_SEND_ERR
              * 504 - HTTPS_HANDSHAKE_ERR
              * 505 - HTTPS_RCV_ERR
              * 506 - HTTPS_CONN_ERR
              * 507 - HTTPS_PAGE_ERR
              * 508 - HTTPS_NO_RESPONSE
              * 600 - PHYLINK_DATA_ERR
              * 601 - PHYLINK_CREATE_ERR
              * 602 - PHYLINK_DOWN
              * 603 - PHYLINK_UNKNOWN
        msg:
          type: string
    Local_Info:
      properties:
        status:
          type: integer
          enum:
            - -1
            - 1
          description: >
            Specific value:          
              * -1 - INIT
              * 1 - OK
        address:
          type: string
          format: ipv4
        mask:
          type: string
          format: ipv4
        gateway:
          type: string
          format: ipv4
        proto:
          type: string
          enum:
            - phylink
            - arpdup
            - icmp
            - http
            - https
            - dns
        dhcp_addr_status:
          type: string
    Internet_Info:
      properties:
        status:
          type: integer
          enum:
            - -1
            - 1
          description: >
            Specific value:
              * -1 - INIT
              * 1 - OK
        http_proxy:
          type: integer
    Proxy_settings:
      type: object
      properties:
        status_code:
          type: integer
        reason_phrase:
          type: string
        error_code:
          type: integer
        error_message:
          type: string
        data:
          $ref: '#/components/schemas/_Proxy_settings'
    _Proxy_settings:
      type: object
      properties:
        http:
          $ref: '#/components/schemas/_Proxy_set'
        https:
          $ref: '#/components/schemas/_Proxy_set'
        exclude_subnet:
          type: string
    _Proxy_set:
      type: object
      properties:
        enable:
          type: boolean
        ip:
          type: string
          format: ipv4
        port:
          type: integer
          minimum: 1
          maximum: 65535
        auth_en:
          type: boolean
        username:
          type: string
        password:
          type: string
    System_log:
      type: object
      properties:
        status_code:
          type: integer
        reason_phrase:
          type: string
        error_code:
          type: integer
        error_message:
          type: string
        data:
          $ref: '#/components/schemas/_System_log'
    _System_log:
      type: object
      properties:
        syslog_enable:
          type: boolean
        level:
          type: string                  
        remotelog_enable:
          type: boolean
        trafficlog_enable:
          type: boolean
        log_ip:
          type: string
          format: ipv4
        log_port:
          type: integer
          minimum: 1
          maximum: 65535
    Spanning_tree:
      type: object
      properties:
        status_code:
          type: integer
        reason_phrase:
          type: string
        error_code:
          type: integer
        error_message:
          type: string
        data:
          $ref: '#/components/schemas/_Spanning_tree'
    _Spanning_tree:
      type: object
      properties:
        enable:
          type: boolean
        hello_time:
          type: integer
          minimum: 1
          maximum: 10
        max_age:
          type: integer
          minimum: 6
          maximum: 40
        forward_delay:
          type: integer
          minimum: 4
          maximum: 30
        priority:
          type: integer
          minimum: 0
          maximum: 65535
    Ezmcloud_info:
      type: object
      properties:
        status_code:
          type: integer
        reason_phrase:
          type: string
        error_code:
          type: integer
        error_message:
          type: string
        data:
          $ref: '#/components/schemas/_Ezmcloud_info'
    _Ezmcloud_info:
      type: object
      properties:
        last_update_time:
          type: string
        raccoon_connect:
          type: integer
        web_url:
          type: string
        reg_status:
          type: integer
        reg_date:
          type: string
    Mesh:
      type: object
      properties:
        status_code:
          type: integer
        reason_phrase:
          type: string
        error_code:
          type: integer
        error_message:
          type: string
        data:
          $ref: '#/components/schemas/_Mesh'
    _Mesh:
      type: object
      properties:
        enable:
          type: boolean
        wifi_radio:
          type: string
          enum:
            - 2_4G
            - 5G
            - 5G-2
        mesh_id:
          type: string
          minLength: 8
          maxLength: 8
          pattern: '^[0-9]$'
        mesh_pw:
          type: string
          minLength: 8
          maxLength: 64
          description: >
            Specific value:
              * 64 - only hex 64 digits allowed [0-9, a-f, A-F] or 8-63 ASCII characters
        mesh_rssi:
          type: integer
          minimum: -95
          maximum: -75
    BandSteering:
      type: object
      properties:
        status_code:
          type: integer
        reason_phrase:
          type: string
        error_code:
          type: integer
        error_message:
          type: string
        data:
          $ref: '#/components/schemas/_BandSteering'
    _BandSteering:
      type: object
      properties:
        enable:
          type: boolean
        steering_type:
          type: string
          enum:
            - band_balance
            - force_5g
            - prefer_5g
        5g_rssi_threshold:
          type: integer
          minimum: -80
          maximum: -66
        5g_client_percent:
          type: integer
          minimum: 0
          maximum: 100
    ClientDnsServer:
      type: object
      properties:
        status_code:
          type: integer
        reason_phrase:
          type: string
        error_code:
          type: integer
        error_message:
          type: string
        data:
          $ref: '#/components/schemas/_ClientDnsServer'
    _ClientDnsServer:
      type: object
      properties:
        enable:
          type: boolean
        primary_dns:
          type: string
          format: ipv4
        secondary_dns:
          type: string
          format: ipv4
    TrafficShaping:
      type: object
      properties:
        status_code:
          type: integer
        reason_phrase:
          type: string
        error_code:
          type: integer
        error_message:
          type: string
        data:
          $ref: '#/components/schemas/_TrafficShaping'
    _TrafficShaping:
      type: object
      properties:
        enable:
          type: boolean
        download_limit:
          type: integer
          minimum: 1
          maximum: 999
        upload_limit:
          type: integer
          minimum: 1
          maximum: 999
        perclient_download_limit:
          type: boolean
        perclient_upload_limit:
          type: boolean
    WifiSecurity_noTitle:
      type: object
      properties:
        encryption:
          type: string
          enum:
            - Disabled
            - WPA-PSK
            - WPA2-PSK
            - WPA-PSK-Mixed
            - WPA-Enterprise
            - WPA2-Enterprise
            - WPA-Mixed-Enterprise
            - OWE
            - WPA3-SAE
            - WPA3-SAE-Mixed
            - WPA3-Enterprise
            - WPA3-Mixed-Enterprise
        auth_type:
          type: string
          enum:
            - TKIP
            - AES
            - BOTH
        suiteb_192bits:
          type: boolean
          description: >-
            only support WPA3 Enterprise
        key_interval:
          type: integer
          minimum: 30
          maximum: 3600
          enum:
            - 0
          description: >
            Specific value:
              * 0 - Disable
        wpa:
          $ref: '#/components/schemas/_WPA'
        proxyarp:
          type: boolean          
        fast_roaming:
          type: boolean
          description: >-
            enjet mode not support fast_roaming
        radius_server:
          $ref: '#/components/schemas/_RadiusServer'            
        accounting_server:
          $ref: '#/components/schemas/_AccountingServer'
        radius_settings:
          $ref: '#/components/schemas/_Radius_settings'          
    WifiSecurity:
      type: object
      properties:
        status_code:
          type: integer
        reason_phrase:
          type: string
        error_code:
          type: integer
        error_message:
          type: string
        data:
          type: object
          properties:
            encryption:
              type: string
              enum:
                - Disabled
                - WEP
                - WPA-PSK
                - WPA2-PSK
                - WPA-PSK-Mixed
                - WPA-Enterprise
                - WPA2-Enterprise
                - WPA-Mixed-Enterprise
                - OWE
                - WPA3-SAE
                - WPA3-SAE-Mixed
                - WPA3-Enterprise
                - WPA3-Mixed-Enterprise
            auth_type:
              type: string
              enum:
                - TKIP
                - AES
                - BOTH
                - OPEN
                - SHARED
            suiteb_192bits:
              type: boolean
              description: >-
                only support WPA3 Enterprise
            ieee80211w:
              type: integer
              minimum: 0
              maximum: 2
              description: >
                Specific value:
                  * 0 - Disable
                  * 1 - all_clients
                  * 2 - 11w_client_only
                  * Disabled - 0
                  * WPA2-PSK - 0 or 1 or 2
                  * WPA2-Enterprise - 0 or 1 or 2
                  * OWE - 2
                  * WPA3-SAE - 2
                  * WPA3-SAE-Mixed - 1
                  * WPA3-Enterprise - 2
                  * WPA3-Mixed-Enterprise - 1
            key_interval:
              type: integer
              minimum: 30
              maximum: 3600
              enum:
                - 0
              description: >
                Specific value:
                  * 0 - Disable
            wpa:
              $ref: '#/components/schemas/_WPA'
            proxyarp_enable:
              type: boolean
            fast_roaming:
              type: boolean
              description: >-
                enjet mode not support fast_roaming
            radius_server:
              $ref: '#/components/schemas/_RadiusServer'
            accounting_server:
              $ref: '#/components/schemas/_AccountingServer'
            radius_settings:
              $ref: '#/components/schemas/_Radius_settings'              
    _WifiSecurity:
      type: object
      properties:
        encryption:
          type: string
          enum:
            - Disabled
            - WPA2-PSK
            - WPA2-Enterprise
            - OWE
            - WPA3-SAE
            - WPA3-SAE-Mixed
            - WPA3-Enterprise
            - WPA3-Mixed-Enterprise
        auth_type:
          type: string
          enum:
            - AES
        suiteb_192bits:
          type: boolean
          description: >-
            only support WPA3 Enterprise
        ieee80211w:
          type: integer
          minimum: 0
          maximum: 2
          description: >
            Specific value:
              * 0 - Disable
              * 1 - all_clients
              * 2 - 11w_client_only
              * Disabled - 0
              * WPA2-PSK - 0 or 1 or 2
              * WPA2-Enterprise - 0 or 1 or 2
              * OWE - 2
              * WPA3-SAE - 2
              * WPA3-SAE-Mixed - 1
              * WPA3-Enterprise - 2
              * WPA3-Mixed-Enterprise - 1
        key_interval:
          type: integer
          minimum: 30
          maximum: 3600
          enum:
            - 0
          description: >
            Specific value:
              * 0 - Disable
        wpa:
          $ref: '#/components/schemas/_WPA'
        proxyarp_enable:
          type: boolean
        fast_roaming:
          type: boolean
          description: >-
            enjet mode not support fast_roaming
        radius_server:
          $ref: '#/components/schemas/_RadiusServer'
        accounting_server:
          $ref: '#/components/schemas/_AccountingServer'
        radius_settings:
          $ref: '#/components/schemas/_Radius_settings'
      required:
        - encryption
    RadiusServer:
      type: object
      properties:
        status_code:
          type: integer
        reason_phrase:
          type: string
        error_code:
          type: integer
        error_message:
          type: string
        data:
          $ref: '#/components/schemas/_RadiusServer'
    _RadiusServer:
      type: object
      properties:
        type:
          type: string
        auth_type:
          type: string          
        server1Ip:
          type: string
          format: ipv4
        server1Port:
          type: integer
          minimum: 1
          maximum: 65535
        server1Secret:
          type: string
          minLength: 1
          maxLength: 64
          pattern: '^[A-Za-z0-9''"_!*@$%^()+= |<>,.?\[\]{}~`#&\\/-]$'
        server2Ip:
          type: string
          format: ipv4
        server2Port:
          type: integer
          minimum: 1
          maximum: 65535
        server2Secret:
          type: string
          minLength: 1
          maxLength: 64
          pattern: '^[A-Za-z0-9''"_!*@$%^()+= |<>,.?\[\]{}~`#&\\/-]$'
        reauthentication_period:
          type: integer
        suite_b:
          type: boolean
    AccountingServer:
      type: object
      properties:
        status_code:
          type: integer
        reason_phrase:
          type: string
        error_code:
          type: integer
        error_message:
          type: string
        data:
          $ref: '#/components/schemas/_AccountingServer'
    _AccountingServer:
      type: object
      properties:
        enable:
          type: boolean
        interval:
          type: integer
          minimum: 60
          maximum: 600
        server1Ip:
          type: string
          format: ipv4
        server1Port:
          type: integer
          minimum: 1
          maximum: 65535
        server1Secret:
          type: string
          minLength: 1
          maxLength: 64
          pattern: '^[A-Za-z0-9''"_!*@$%^()+= |<>,.?\[\]{}~`#&\\/-]$'
        server2Ip:
          type: string
          format: ipv4
        server2Port:
          type: integer
          minimum: 1
          maximum: 65535
        server2Secret:
          type: string
          minLength: 1
          maxLength: 64
          pattern: '^[A-Za-z0-9''"_!*@$%^()+= |<>,.?\[\]{}~`#&\\/-]$'          
      required:
        - enable
    Captive_Portal:
      type: object
      properties:
        status_code:
          type: integer
        reason_phrase:
          type: string
        error_code:
          type: integer
        error_message:
          type: string
        data:
          $ref: '#/components/schemas/_Captive_Portal'
    _Captive_Portal:
      type: object
      properties:
        enable:
          type: boolean
        whitelist_enable:
          type: boolean
        auth_type:
          type: string
          enum:
            - splash
            - cloud-radius
            - custom-radius
        vendor_id:
          type: string
        gateway_id:
          type: string
        gateway_secret:
          type: string
        internal_splash_url:
          type: string
          format: url          
        external_splash_url:
          type: string
          format: url
        external_uamaaaurl:
          type: string
          format: url          
        session_timeout:
          type: integer
          minimum: 10
          maximum: 30
        idle_timeout:
          type: integer
          minimum: 10
          maximum: 30
        leave_network_timeout:
          type: integer
        redirect_ssl_enable:
          type: boolean
        https_login_enable:
          type: boolean          
        walled_garden:
          type: string
          format: url
    DaySch:
      type: object
      properties:
        available:
          type: boolean
        start:
          type: string
          format: time
        end:
          type: string
          format: time
    WeekSch:
      type: object
      properties:
        su:
          $ref: '#/components/schemas/DaySch'
        mo:
          $ref: '#/components/schemas/DaySch'
        tu:
          $ref: '#/components/schemas/DaySch'
        we:
          $ref: '#/components/schemas/DaySch'
        th:
          $ref: '#/components/schemas/DaySch'
        fr:
          $ref: '#/components/schemas/DaySch'
        sa:
          $ref: '#/components/schemas/DaySch'
    Scheduling:
      type: object
      properties:
        status_code:
          type: integer
        reason_phrase:
          type: string
        error_code:
          type: integer
        error_message:
          type: string
        data:
          $ref: '#/components/schemas/_Scheduling'
    _Scheduling:
      type: object
      properties:
        enable:
          type: boolean
        days:
          $ref: '#/components/schemas/WeekSch'
    SSID:
      type: object
      properties:
        status_code:
          type: integer
        reason_phrase:
          type: string
        error_code:
          type: integer
        error_message:
          type: string
        data:
          type: object
          properties:
            enable:
              type: boolean
            enable_bands:
              type: string
              enum:
                - 2_4G
                - 5G
                - 2_4G|5G
                - 5G|5G-2
                - 2_4G|5G|5G-2
              description: >-
                wds_ap mode not support enable_bands
            ssid_name:
              type: string
              minLength: 1
              maxLength: 32
            hidden_ssid:
              type: boolean
            client_isolation:
              type: boolean
            vlan_isolation:
              type: boolean
            vlan_id:
              type: integer
              minimum: 1
              maximum: 4094
            max_rx_data_rate:
              type: string
            rx_bytes:
              type: string
            rx_packets:
              type: string
            max_tx_data_rate:
              type: string
            tx_bytes:
              type: string
            tx_packets:
              type: string
            cur_tx_power:
              type: string
            client_ip_assignment:
              type: string
              enum:
                - Bridge
                - NAT
            client_dns_server:
              $ref: '#/components/schemas/_ClientDnsServer'
            band_steering:
              $ref: '#/components/schemas/_BandSteering'
            traffic_shaping:
              $ref: '#/components/schemas/_TrafficShaping'
            wireless_security:
              $ref: '#/components/schemas/WifiSecurity_noTitle'
            captive_portal:
              $ref: '#/components/schemas/_Captive_Portal'
            scheduling:
              $ref: '#/components/schemas/_Scheduling'
            l2_acl:
              $ref: '#/components/schemas/_L2Acl'
            l2_isolation:
              $ref: '#/components/schemas/_L2_isolation'
            l3_filter:
              $ref: '#/components/schemas/_L3_filter'
            app_detection:
              $ref: '#/components/schemas/_App_detection'
    _SSID:
      type: object
      properties:
        enable:
          type: boolean
        enable_bands:
          type: string
          enum:
            - 2_4G
            - 5G
            - 2_4G|5G
            - 5G|5G-2
            - 2_4G|5G|5G-2
          description: >-
            wds_ap mode not support enable_bands
        ssid_name:
          type: string
          minLength: 1
          maxLength: 32
        hidden_ssid:
          type: boolean
        client_isolation:
          type: boolean
        vlan_isolation:
          type: boolean
        vlan_id:
          type: integer
          minimum: 1
          maximum: 4094
        client_ip_assignment:
          type: string
          enum:
            - Bridge
            - NAT
        client_dns_server:
          $ref: '#/components/schemas/_ClientDnsServer'
        band_steering:
          $ref: '#/components/schemas/_BandSteering'
        traffic_shaping:
          $ref: '#/components/schemas/_TrafficShaping'
        wireless_security:
          $ref: '#/components/schemas/_WifiSecurity'
        captive_portal:
          $ref: '#/components/schemas/_Captive_Portal'
        scheduling:
          $ref: '#/components/schemas/_Scheduling'
        l2_acl:
          $ref: '#/components/schemas/_L2Acl'
        l2_isolation:
          $ref: '#/components/schemas/_L2_isolation'
        l3_filter:
          $ref: '#/components/schemas/_L3_filter'
        app_detection:
          $ref: '#/components/schemas/_App_detection'
        hotspot20:
          $ref: '#/components/schemas/NullData'
    SSIDs:
      type: object
      properties:
        status_code:
          type: integer
        reason_phrase:
          type: string
        error_code:
          type: integer
        error_message:
          type: string
        data:
          type: object
          properties:
            '1':
              $ref: '#/components/schemas/_SSID'
            '2':
              $ref: '#/components/schemas/_SSID'
            '3':
              $ref: '#/components/schemas/_SSID'
            '4':
              $ref: '#/components/schemas/_SSID'
            '5':
              $ref: '#/components/schemas/_SSID'
            '6':
              $ref: '#/components/schemas/_SSID'
            '7':
              $ref: '#/components/schemas/_SSID'
            '8':
              $ref: '#/components/schemas/_SSID'
    SystemInfo:
      type: object
      properties:
        status_code:
          type: integer
        reason_phrase:
          type: string
        error_code:
          type: integer
        error_message:
          type: string
        data:
          type: object
          properties:
            gateway_ip:
              type: string
            firmware_version:
              type: string
            device_version:
              type: string
            serial_number:
              type: string
            cpu_loading:
              type: string
            mem_capacity:
              type: integer
            mem_usage:
              type: string
            mem_usage_size:
              type: integer
            mem_total_available:
              type: string
            mem_total_available_size:
              type: integer
            mem_buffers:
              type: string
            mem_buffers_size:
              type: integer
            mem_free:
              type: string
            mem_free_size:
              type: integer
            mem_cached:
              type: string
            mem_cached_size:
              type: integer
            uptime:
              type: string
            raw_proc_uptime:
              type: string
            raw_proc_loadavg:
              type: string
            date:
              type: string
            ethr_link_status:
              type: string
            lan_speed:
              type: integer
            ip_address:
              type: string
            mac_address:
              type: string
            mac_5g_address:
              type: string
            sys_cfg:
              $ref: '#/components/schemas/SystemCfg'
            internet_available:
              type: boolean
            station_counts:
              type: object
              properties:
                2_4G:
                  type: object
                  properties:
                    counts:
                      type: integer
                5G:
                  type: object
                  properties:
                    counts:
                      type: integer
                5G-2:
                  type: object
                  properties:
                    counts:
                      type: integer
            power_source:
              type: integer
            created_time:
              type: integer
            modified_time:
              type: integer
    DaylightSaving:
      type: object
      properties:
        enable:
          type: boolean
        start_month:
          type: string
          enum:
            - JAN
            - FEB
            - MAR
            - APR
            - MAY
            - JUN
            - JUL
            - AUG
            - SEP
            - OCT
            - NOV
            - DEC
        start_week:
          type: integer
          minimum: 1
          maximum: 6
        start_day:
          type: string
          enum:
            - SUN
            - MON
            - TUE
            - WED
            - THU
            - FRI
            - SAT
        start_time:
          type: string
          format: time
        end_month:
          type: string
          enum:
            - JAN
            - FEB
            - MAR
            - APR
            - MAY
            - JUN
            - JUL
            - AUG
            - SEP
            - OCT
            - NOV
            - DEC
        end_week:
          type: integer
          minimum: 1
          maximum: 6
        end_day:
          type: string
          enum:
            - SUN
            - MON
            - TUE
            - WED
            - THU
            - FRI
            - SAT
        end_time:
          type: string
          format: time
    _TimeCfg:
      type: object
      properties:
        mode:
          type: string
          enum:
            - Manual
            - Auto
        Manual_set:
          type: object
          properties:
            date:
              type: string
              format: date
            time:
              type: string
              format: time
        Auto_set:
          type: object
          properties:
            ntp_server:
              type: string
              format: ipv4
        time_zone:
          $ref: '#/components/schemas/TimezoneTable'
        time_zone_auto_detect:
          type: boolean
        daylight_saving:
          $ref: '#/components/schemas/DaylightSaving'
    TimeCfg:
      type: object
      properties:
        current_time:
          type: object
          properties:
            date:
              type: string
              format: date
            time:
              type: string
              format: time
        mode:
          type: string
          enum:
            - Manual
            - Auto
        Manual_set:
          type: object
          properties:
            date:
              type: string
              format: date
            time:
              type: string
              format: time
        Auto_set:
          type: object
          properties:
            ntp_server:
              type: string
              format: ipv4
        time_zone:
          $ref: '#/components/schemas/TimezoneTable'
        cur_time_zone:
          $ref: '#/components/schemas/TimezoneTable'
        time_zone_auto_detect:
          type: boolean
        daylight_saving:
          $ref: '#/components/schemas/DaylightSaving'
    _SystemCfg:
      type: object
      properties:
        device_name:
          type: string
          minLength: 1
          maxLength: 32
          pattern: '^[A-Za-z0-9_!*@$%^()+=|<>,.?{}~-]$'
        time:
          $ref: '#/components/schemas/_TimeCfg'
        led_enable:
          type: boolean
        pw_changed:
          type: boolean
        pw_ignore:
          type: boolean
    SystemCfg:
      type: object
      properties:
        device_name:
          type: string
          minLength: 1
          maxLength: 32
          pattern: '^[A-Za-z0-9_!*@$%^()+=|<>,.?{}~-]$'
        model:
          type: string
          minLength: 1
          maxLength: 32
          pattern: '^[A-Za-z0-9_!*@$%^()+=|<>,.?{}~-]$'
        time:
          $ref: '#/components/schemas/TimeCfg'
        led_enable:
          type: boolean
        pw_changed:
          type: boolean
        pw_ignore:
          type: boolean        
    WiFiClientInfo:
      type: object
      properties:
        status_code:
          type: integer
        reason_phrase:
          type: string
        error_code:
          type: integer
        error_message:
          type: string
        data:
          type: object
          properties:
            2_4G:
              type: array
              items:
                $ref: '#/components/schemas/_WiFiClientInfo'
            5G:
              type: array
              items:
                $ref: '#/components/schemas/_WiFiClientInfo'
            5G-2:
              type: array
              items:
                $ref: '#/components/schemas/_WiFiClientInfo'
    _WiFiClientInfo:
      type: object
      properties:
        device_name:
          type: string
        mac_addr:
          type: string
        ip_addr:
          type: string
        os_info:
          type: string
        channel:
          type: integer
        ssid_id:
          type: integer
        ssid_name:
          type: string
        rssi:
          type: integer
        tx_rate:
          type: integer
        rx_rate:
          type: integer
        tx_byte:
          type: integer
        rx_byte:
          type: integer
        capability:
          type: string
          enum:
          - 802.11a
          - 802.11b
          - 802.11g
          - 802.11n
          - 802.11na
          - 802.11ng
          - 802.11ac
          - 802.11ax
        connection_time:
          type: string
        en_product_enable:
          type: boolean
        en_product:
          type: object
          properties:
            product_name:
              type: string
            fw_version:
              type: string
    MeshLearnTable:
      type: object
      properties:
        mac_addr:
          type: string
        learn_rssi:
          type: integer
        link_flags:
          enum:
            - ..
            - B.
            - .R
            - BR
          type: string
    MeshRobust:
      type: object
      properties:
        enable:
          type: boolean
        threshold:
          type: integer
    MeshLink:
      type: object
      properties:
        mac_addr:
          type: string
        rssi:
          type: integer
        tq_val:
          type: integer
        tx_datarate:
          type: integer
        rx_datarate:
          type: integer
    MeshOutgoingGw:
      type: object
      properties:
        gw_mac_addr:
          type: string
        next_hop_mac_addr:
          type: string
    MeshGroupInfo:
      type: object
      properties:
        status_code:
          type: integer
        reason_phrase:
          type: string
        error_code:
          type: integer
        error_message:
          type: string
        data:
          type: array
          items:
            $ref: '#/components/schemas/_MeshInfo'
    _MeshInfo:
      type: object
      properties:
        dev_mac_addr:
          type: string
        mesh_role:
          type: string
          enum:
            - Gateway
            - AP
        mesh_channel:
          type: integer
        mesh_learn_table:
          type: array
          items:
            $ref: '#/components/schemas/MeshLearnTable'
        mesh_robust:
          $ref: '#/components/schemas/MeshRobust'
        mesh_link:
          type: array
          items:
            $ref: '#/components/schemas/MeshLink'
        mesh_outgoing_gw:
          $ref: '#/components/schemas/MeshOutgoingGw'
    L2Acl:
      type: object
      properties:
        status_code:
          type: integer
        reason_phrase:
          type: string
        error_code:
          type: integer
        error_message:
          type: string
        data:
          $ref: '#/components/schemas/_L2Acl'
    _L2Acl:
      type: object
      properties:
        enable:
          type: boolean
        client_mac_list:
          type: array
          items:
            type: string
        policy:
          type: string
          enum:
            - DENY
            - ALLOW
        banned_message_display:
          type: boolean
        banned_message:
          type: string
        banned_message_page:
          type: string
        block_randomized_mac:
          type: boolean
        block_randomized_mac_page:
          type: string
    _Kick:
      type: object
      properties:
        kick_mac:
          type: string
          format: mac
    TrafficInfo:
      type: object
      properties:
        status_code:
          type: integer
        reason_phrase:
          type: string
        error_code:
          type: integer
        error_message:
          type: string
        data:
          type: object
          properties:
            connection_list:
              type: array
              items:
                type: object
                properties:
                  mac_addr:
                    type: string
                  tx_rate:
                    type: string
                  rx_rate:
                    type: string
                  signal_strength:
                    type: string
                  tx_bytes:
                    type: string
                  rx_bytes:
                    type: string
    FwUpgrade:
      type: object
      properties:
        force:
          type: boolean
        version:
          type: string
        url:
          type: string
        checksum:
          type: string
    Ethernet_Traffic_Info:
      type: object
      properties:
        status_code:
          type: integer
        reason_phrase:
          type: string
        error_code:
          type: integer
        error_message:
          type: string
        data:
          type: object
          properties:
            tx_bytes:
              type: string
            rx_bytes:
              type: string
    EthernetClientInfoResult:
      type: object
      properties:
        status_code:
          type: integer
        reason_phrase:
          type: string
        error_code:
          type: integer
        error_message:
          type: string
        data:
            $ref: '#/components/schemas/_Ethernet_Client_Info'
    _Ethernet_Client_Info:
      type: object
      properties:
        client:
          type: array
          items:
            $ref: '#/components/schemas/Ethernet_Client_Info' 
    Ethernet_Client_Info:
      type: object
      properties:
        mac_addr:
          type: string
    Mesh_Throughput_Result:
      type: object
      properties:
        status_code:
          type: integer
        reason_phrase:
          type: string
        error_code:
          type: integer
        error_message:
          type: string
        data:
          type: object
          properties:
            upload:
              type: string
            download:
              type: string
    _ResetKey:
      type: object
      properties:
        key:
          type: string
    WifiSiteSurveyResult:
      type: object
      properties:
        status_code:
          type: integer
        reason_phrase:
          type: string
        error_code:
          type: integer
        error_message:
          type: string
        data:
            $ref: '#/components/schemas/_SiteSurveyItem'
    _SiteSurveyItem:
      type: object
      properties:
        2_4G:
            type: array
            items:
              $ref: '#/components/schemas/SiteSurveyItem'
        5G:
            type: array
            items:
              $ref: '#/components/schemas/SiteSurveyItem'
        5G-2:
            type: array
            items:
              $ref: '#/components/schemas/SiteSurveyItem'
    SiteSurveyItem:
      type: object
      properties:
        dev_mac_addr:
          type: string
        ssid_name:
          type: string
        rssi:
          type: integer
        encryption:
          type: string
    DeviceCapability:
      type: object
      properties:
        status_code:
          type: integer
        reason_phrase:
          type: string
        error_code:
          type: integer
        error_message:
          type: string
        data:            
          type: object
          properties:
            support_opmode:
              type: array
              items:
                type: string
                enum:
                  - ap
                  - wds_ap
                  - wds_bridge
                  - wds_sta
                  - sta_ap
                  - sta
            support_radio:
              type: array
              items:
                type: string
                enum:
                  - 2_4G
                  - 5G
                  - 5G-2
            antenna_num:
              type: object
              properties:
                2_4G:
                  type: integer
                5G:
                  type: integer
            support_mesh:
              type: boolean
            support_enjet:
              type: boolean
            support_wpa3:
              type: boolean
            support_hwmode_ax:
              type: boolean
            support_band_steering:
              type: boolean
            support_captive_portal:
              type: boolean
            support_ezmcloud:
              type: boolean
            support_kdump:
              type: boolean
            outdoor:
              type: boolean
            reg_domain:
              type: string
              enum:
                - FCC
                - ETSI
                - INT
            dfs_certified:
              type: object
              properties:
                fcc:
                  type: integer
                etsi:
                  type: integer
                int:
                  type: integer
            support_gps:
              type: boolean
            ssid_num:
              type: object
              properties:
                ap:
                  type: integer
                enjet:
                  type: integer
                wds_ap:
                  type: integer
            nawds_num:
              type: object
              properties:
                wds_ap:
                  type: integer
                wds_bridge:
                  type: integer
            mac_filter_num:
              type: integer
            mgm_radio:
              type: string
            tx_power_min:
              type: integer
            tx_power_max:
              type: integer
            iface_info:
              type: array
              items:
                $ref: '#/components/schemas/IfaceInfo'
    IfaceInfo:
      type: object
      properties:
        ifname:
          type: string
        mac:
          type: string
    MeshGroupTreeTopology:
      type: object
      properties:
        status_code:
          type: integer
        reason_phrase:
          type: string
        error_code:
          type: integer
        error_message:
          type: string
        data:
          type: array
          items:
            $ref: '#/components/schemas/MeshTopologyNodeItem'
    MeshTopologyNodeItem:
      type: object
      properties:
        dev_mac_addr:
          type: string
        mesh_role:
          type: string
          enum:
            - Gateway
            - AP
        gw_mac_addr:
          type: string
        next_hop_mac_addr:
          type: string
        next_hop_rssi:
          type: integer
        next_hop_tq_val:
          type: integer
        next_hop_tq:
          type: integer
    MeshGroupNodeInfo:
      type: object
      properties:
        status_code:
          type: integer
        reason_phrase:
          type: string
        error_code:
          type: integer
        error_message:
          type: string
        data:
          type: object
          properties:
            mesh_role:
              type: string
              enum:
                - Gateway
                - AP
            mesh_learn_table:
              type: array
              items:
                $ref: '#/components/schemas/MeshLearnTable'
            mesh_robust:
              $ref: '#/components/schemas/MeshRobust'
            mesh_link:
              type: array
              items:
                $ref: '#/components/schemas/MeshLink'
            mesh_outgoing_gw:
              $ref: '#/components/schemas/MeshOutgoingGw'
    ApiVersion:
      type: object
      properties:
        status_code:
          type: integer
        reason_phrase:
          type: string
        error_code:
          type: integer
        error_message:
          type: string
        data:      
          type: object
          properties:
            server:
              $ref: '#/components/schemas/Version'
            module:
              $ref: '#/components/schemas/Version'
            library:
              type: object
              properties:
                libapi:
                  $ref: '#/components/schemas/Version'
                libsnjson:
                  $ref: '#/components/schemas/Version'
    Version:
      type: object
      properties:
        major:
          type: integer
        minor:
          type: integer
        release:
          type: integer
        patch:
          type: string
    _Channel_list:
      type: object
      properties:
        country:
          $ref: '#/components/schemas/CountryTable'
        green_mode:
          type: boolean
    Channel_list:
      type: object
      properties:
        status_code:
          type: integer
        reason_phrase:
          type: string
        error_code:
          type: integer
        error_message:
          type: string
        data:
          type: object
          properties:
            2_4G:
              type: array
              items:
                $ref: '#/components/schemas/_Channelinfo_24g'
            5G:
              type: array
              items:
                $ref: '#/components/schemas/_Channelinfo_5g'
            5G-2:
              type: array
              items:
                $ref: '#/components/schemas/_Channelinfo_5g'
    _Channelinfo_24g:
      type: object
      properties:
        ht_20:
          type: array
          items:
            type: integer
        ht_20_40:
          type: array
          items:
            type: integer
        ht_40:
          type: array
          items:
            type: integer
    _Channelinfo_5g:
      type: object
      properties:
        ht_20:
          type: array
          items:
            type: integer
        ht_40:
          type: array
          items:
            type: integer
        ht_80:
          type: array
          items:
            type: integer
    NullData:
      example: {}
    CountryTable:
      type: string
      enum:
        - Albania
        - Algeria
        - Argentina
        - Australia
        - Austria
        - Bahrain
        - Belgium
        - Brazil
        - Brunei
        - Bulgaria
        - Canada
        - Chile
        - China
        - Colombia
        - Costa Rica
        - Croatia
        - Czech Republic
        - Denmark
        - Dominican Republic
        - Ecuador
        - Egypt
        - Estonia
        - Finland
        - France
        - Germany
        - Greece
        - Guatemala
        - Honduras
        - Hong Kong
        - Hungary
        - Iceland
        - India
        - Indonesia
        - Iran
        - Ireland
        - Israel
        - Italy
        - Japan
        - Jordan
        - Kazakhstan
        - Kenya
        - Kuwait
        - Latvia
        - Lebanon
        - Lithuania
        - Luxembourg
        - Macau
        - Malaysia
        - Mexico
        - Monaco
        - Morocco
        - Myanmar
        - Nepal
        - Netherlands
        - New Zealand
        - North Macedonia
        - Norway
        - Oman
        - Pakistan
        - Panama
        - Peru
        - Philippines
        - Poland
        - Portugal
        - Puerto Rico
        - Qatar
        - Romania
        - Russia
        - Saudi Arabia
        - Singapore
        - Slovakia
        - Slovenia
        - South Africa
        - South Korea
        - Spain
        - Sri Lanka
        - Sweden
        - Switzerland
        - Taiwan
        - Thailand
        - Tunisia
        - Turkey
        - United Arab Emirates
        - Ukraine
        - United Kingdom
        - USA
        - Uruguay
        - Uzbekistan
        - Venezuela
        - Vietnam
    TimezoneTable:
      type: string
      enum:
        - 'UTC-12:00 Kwajalein'
        - 'UTC-11:00 Midway Island, Samoa'
        - 'UTC-10:00 Hawaii'
        - 'UTC-09:00 Alaska'
        - 'UTC-08:00 Pacific Time'
        - 'UTC-07:00 Arizona'
        - 'UTC-07:00 Mountain Time'
        - 'UTC-06:00 Mexico'
        - 'UTC-06:00 Central Time'
        - 'UTC-05:00 Colombia, Panama'
        - 'UTC-05:00 Eastern Time'
        - 'UTC-04:00 Bolivia, Venezuela'
        - 'UTC-04:00 Atlantic Time'
        - 'UTC-04:00 Brazil West'
        - 'UTC-03:30 Newfoundland'
        - 'UTC-03:00 Greenland'
        - 'UTC-03:00 Brazil East'
        - 'UTC-03:00 Guyana'
        - 'UTC-02:00 Mid-Atlantic'
        - 'UTC-01:00 Azores'
        - 'UTC+00:00 Gambia, Liberia, Morocco'
        - 'UTC+00:00 England'
        - 'UTC+01:00 Tunisia'
        - 'UTC+01:00 France, Germany, Italy'
        - 'UTC+02:00 South Africa'
        - 'UTC+02:00 Greece, Ukraine, Romania, Turkey'
        - 'UTC+03:00 Iraq, Jordan, Kuwait'
        - 'UTC+03:00 Finland'
        - 'UTC+04:00 Armenia'
        - 'UTC+05:00 Pakistan, Russia'
        - 'UTC+05:30 Bombay, Calcutta, Madras, New Delhi'
        - 'UTC+06:00 Bangladesh, Russia'
        - 'UTC+07:00 Thailand, Russia'
        - 'UTC+08:00 China, Hong Kong, Western Australia, Singapore, Taiwan, Russia'
        - 'UTC+09:00 Japan, Korea'
        - 'UTC+09:30 South Australia'
        - 'UTC+10:00 Guam, Russia'
        - 'UTC+10:00 Australia'
        - 'UTC+11:00 Solomon Islands'
        - 'UTC+12:00 Fiji'
        - 'UTC+12:00 New Zealand'
    Scan_ChanUtil_Result:
      type: object
      properties:
        status_code:
          type: integer
        reason_phrase:
          type: string
        error_code:
          type: integer
        error_message:
          type: string
        data:
          type: object
          properties:
            chanutil:
              type: array
              items:
                type: object
                properties:
                  chan:
                    type: integer
                  value:
                    type: integer
    Scan_APList_Result:
      type: object
      properties:
        status_code:
          type: integer
        reason_phrase:
          type: string
        error_code:
          type: integer
        error_message:
          type: string
        data:
          type: object
          properties:
            ap_list:
              type: array
              items:
                type: object
                properties:
                  bssid:
                    type: string
                  chan:
                    type: integer
                  privacy_type:
                    type: string
                  cipher_type:
                    type: string
                  auth_type:
                    type: string
                  power:
                    type: integer
                  chwidth:
                    type: string
                  mode:
                    type: string
                  ssid:
                    type: string
    Scan_STAList_Result:
      type: object
      properties:
        status_code:
          type: integer
        reason_phrase:
          type: string
        error_code:
          type: integer
        error_message:
          type: string
        data:
          type: object
          properties:
            sta_list:
              type: array
              items:
                type: object
                properties:
                  sta_mac:
                    type: string
                  power:
                    type: string
                  ass_bssid:
                    type: string
    Lxc_backup_method:
      type: object
      properties:
        status_code:
          type: integer
        reason_phrase:
          type: string
        error_code:
          type: integer
        error_message:
          type: string
        data:
          $ref: '#/components/schemas/_Lxc_backup_method'
    _Lxc_backup_method:
      type: object
      properties:
        manualbackup:
          type: boolean
        backuptime:
          type: string
    Lxc_backup_info:
      type: object
      properties:
        status_code:
          type: integer
        reason_phrase:
          type: string
        error_code:
          type: integer
        error_message:
          type: string
        data:
          type: object
          properties:
            date:
              type: string
    L2_isolation:
      type: object
      properties:
        status_code:
          type: integer
        reason_phrase:
          type: string
        error_code:
          type: integer
        error_message:
          type: string
        data:
          $ref: '#/components/schemas/_L2_isolation'
    _L2_isolation:
      type: object
      properties:
        enable:
          type: boolean
        exception:
          type: boolean
        client_mac_list:
          type: array
          items:
            type: string
    L3_filter:
      type: object
      properties:
        status_code:
          type: integer
        reason_phrase:
          type: string
        error_code:
          type: integer
        error_message:
          type: string
        data:
          $ref: '#/components/schemas/_L3_filter'
    _L3_filter:
      type: object
      properties:
        enable:
          type: boolean
        rules:
          type: array
          items:
            $ref: '#/components/schemas/_L3_filter_info'
    _L3_filter_info:
      type: object
      properties:
        id:
          type: integer
        policy:
          type: string
        protocol:
          type: string
        dest:
          type: string
        port:
          type: integer
    App_detection:
      type: object
      properties:
        status_code:
          type: integer
        reason_phrase:
          type: string
        error_code:
          type: integer
        error_message:
          type: string
        data:
          $ref: '#/components/schemas/_App_detection'
    _App_detection:
      type: object
      properties:
        enable:
          type: boolean
        aid:
          type: array
          items:
            type: integer
    Scanning_radio:
      type: object
      properties:
        status_code:
          type: integer
        reason_phrase:
          type: string
        error_code:
          type: integer
        error_message:
          type: string
        data:
          $ref: '#/components/schemas/_Scanning_radio'
    _Scanning_radio:
      type: object
      properties:
        enable:
          type: boolean
        scan_chan:
          type: string
          enum:
            - 2_4G
            - 5G
        duration:
          type: integer
        chan_util_enable:
          type: boolean
        statistic_enable:
          type: boolean
    Presence_reporting:
      type: object
      properties:
        status_code:
          type: integer
        reason_phrase:
          type: string
        error_code:
          type: integer
        error_message:
          type: string
        data:
          $ref: '#/components/schemas/_Presence_reporting'
    _Presence_reporting:
      type: object
      properties:
        enable:
          type: boolean
        server_url:
          type: string
        key:
          type: string
        rate:
          type: integer
    Snmp:
      type: object
      properties:
        status_code:
          type: integer
        reason_phrase:
          type: string
        error_code:
          type: integer
        error_message:
          type: string
        data:
          $ref: '#/components/schemas/_Snmp'
    _Snmp:
      type: object
      properties:
        enable:
          type: boolean
        community_name:
          type: string
        snmpv3:
          $ref: '#/components/schemas/_Snmpv3'
    _Snmpv3:
      type: object
      properties:
        enable:
          type: boolean
        username:
          type: string
        authorized_protocol:
          type: string
        authorized_key:
          type: string
        private_protocol:
          type: string
        private_key:
          type: string
        engine_id:
          type: string
    Wallmount_lan_ports:
      type: object
      properties:
        status_code:
          type: integer
        reason_phrase:
          type: string
        error_code:
          type: integer
        error_message:
          type: string
        data:
          $ref: '#/components/schemas/_Wallmount_lan_ports'
    _Wallmount_lan_ports:
      type: object
      properties:
        enable:
          type: boolean
        port:
          type: integer
        profile_id:
          type: string
        vlan_mode:
          type: string
        vlan_id:
          type: integer
        profile_mode_vlan:
          type: boolean
        client_ip_assignment:
          type: string
        security:
          $ref: '#/components/schemas/_Security'
        l2_isolation:
          $ref: '#/components/schemas/_L2_isolation'
        client_custom_dns_server:
          $ref: '#/components/schemas/_ClientDnsServer'
        captive_portal:
          $ref: '#/components/schemas/_Captive_Portal'
        l2_acl:
          $ref: '#/components/schemas/_L2Acl'
        l3_filter:
          $ref: '#/components/schemas/_L3_filter'
    Radius_settings:
      type: object
      properties:
        status_code:
          type: integer
        reason_phrase:
          type: string
        error_code:
          type: integer
        error_message:
          type: string
        data:
          $ref: '#/components/schemas/_Radius_settings'
    _Radius_settings:
      type: object
      properties:
        nasId_enable:
          type: boolean
        nasId:
          type: string
          minLength: 3
          maxLength: 32
          pattern: '^[A-Za-z0-9_!*@$%^()+=|<>,.?{}~-]$'
        nasIp_enable:
          type: boolean
        nasIp:
          type: string
          format: ipv4
        nasPort_enable:
          type: boolean
        nasPort:
          type: integer
          minimum: 1
          maximum: 65535
    Security:
      type: object
      properties:
        status_code:
          type: integer
        reason_phrase:
          type: string
        error_code:
          type: integer
        error_message:
          type: string
        data:
          $ref: '#/components/schemas/_Security'
    _Security:
      type: object
      properties:
        auth_type:
          type: string
        radius_server:
          $ref: '#/components/schemas/_RadiusServer'
        accounting_server:
          $ref: '#/components/schemas/_AccountingServer'
        radius_settings:
          $ref: '#/components/schemas/_Radius_settings'
    _Led_dance:
      type: object
      properties:
        timeout:
          type: integer
    SSH:
      type: object
      properties:
        status_code:
          type: integer
        reason_phrase:
          type: string
        error_code:
          type: integer
        error_message:
          type: string
        data:
          $ref: '#/components/schemas/_SSH'
    _SSH:
      type: object
      properties:
        ip:
          type: string
        port:
          type: integer
    _Multi_passphrase:
      type: object
      properties:
        vlan_id:
          type: integer
        mac_addr:
          type: string
        passphrase:
          type: string
        expiration_date:
          type: string
    Airtimefairness:
      type: object
      properties:
        status_code:
          type: integer
        reason_phrase:
          type: string
        error_code:
          type: integer
        error_message:
          type: string
        data:
          $ref: '#/components/schemas/_Airtimefairness'
    _Airtimefairness:
      type: object
      properties:
        enable:
          type: boolean
