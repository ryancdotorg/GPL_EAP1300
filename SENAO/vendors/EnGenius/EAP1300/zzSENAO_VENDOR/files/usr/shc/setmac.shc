#!/bin/sh

. /lib/functions.sh
. /lib/functions/service.sh
#
# BootEnv have ethaddr(LAN) only.
# LAN
# 2.4G = LAN + 1
# 5G = LAN + 2
#


wifi0_mac_file="/tmp/wifi0_mac.txt"
wifi1_mac_file="/tmp/wifi1_mac.txt"
lan_mac_file="/tmp/lan_mac.txt"
error_msg="/tmp/invalid_mac.txt"

# char() - converts decimal value to its ASCII character
# A-Z = 65-90
char() {
	[ ${1} -lt 91 ] || return 1
	printf \\$(printf '%03o' $1)
}

# decimal() - converts ASCII character to its decimal value
decimal() {
	LC_CTYPE=C printf '%d' "'$1"
}

set_iface_mac() {
       
	local lan_mac=$(setconfig -g 6)
        local mac1=$(echo $lan_mac | cut -c 1-2)
        local mac2=$(echo $lan_mac | cut -c 4-5)
        local mac3=$(echo $lan_mac | cut -c 7-8)
        local mac4=$(echo $lan_mac | cut -c 10-11)
        local mac5=$(echo $lan_mac | cut -c 13-14)
        local mac6=$(echo $lan_mac | cut -c 16-17)
        lan_mac=$(echo $mac1):$(echo $mac2):$(echo $mac3):$(echo $mac4):$(echo $mac5):$(echo $mac6)
        local ifs=$(eval "/usr/sbin/foreach network interface")
        for vif in $ifs; do
                if [ "$vif" = "guest" ] || [ "$vif" = "loopback" ]; then
                        continue;
                elif [ "$vif" = "lan" ]; then
                        uci set network.${vif}.macaddr=$lan_mac
                elif [ "$vif" -eq "$vif" ]; then
                        uci set network.${vif}.macaddr=$lan_mac
                fi
        done
	uci commit
}

boot() {
	local lan_mac=$(setconfig -g 6)
        # 124578013467
        local mac1=$(echo $lan_mac | cut -c 1-2)
        local mac2=$(echo $lan_mac | cut -c 4-5)
        local mac3=$(echo $lan_mac | cut -c 7-8)
        local mac4=$(echo $lan_mac | cut -c 10-11)
        local mac5=$(echo $lan_mac | cut -c 13-14)
        local mac6=$(echo $lan_mac | cut -c 16-17)
        # 013467
        local post_mac="${mac4}${mac5}${mac6}"
        # Hex -> Dec
        local tmp=$(printf %6d 0x$post_mac)
        local tmp_wifi0=$((($tmp + 1) & 0xffffff))
        local tmp_wifi1=$((($tmp + 2) & 0xffffff))
        # Dec -> Hex
        local wifi0=$(printf %06X $tmp_wifi0)
        local wifi1=$(printf %06X $tmp_wifi1)
        # combine
        local front_mac=$(echo $mac1):$(echo $mac2):$(echo $mac3):
        local wifi0_mac="${front_mac}$(echo $wifi0 | cut -c -2):$(echo $wifi0 | cut -c 3-4):$(echo $wifi0 | cut -c 5-)"
        local wifi1_mac="${front_mac}$(echo $wifi1 | cut -c -2):$(echo $wifi1 | cut -c 3-4):$(echo $wifi1 | cut -c 5-)"
        lan_mac=$(echo $mac1):$(echo $mac2):$(echo $mac3):$(echo $mac4):$(echo $mac5):$(echo $mac6)

        echo "$lan_mac" > $lan_mac_file
        echo "$wifi0_mac" > $wifi0_mac_file
        echo "$wifi1_mac" > $wifi1_mac_file

        sleep 1

        [ -e /etc/config/network ] && {
                config_load network
                set_iface_mac 
        } 
}

case "$1" in
	boot) boot;;
esac
