<%#
LuCI - Lua Configuration Interface
Copyright 2010 Jo-Philipp Wich <xm@subsignal.org>

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

	http://www.apache.org/licenses/LICENSE-2.0

$Id: bandwidth.htm 9014 2012-08-14 13:08:18Z jow $

-%>

<%-
	local ntm = require "luci.model.network".init()
	local uci = require "luci.model.uci".cursor()

	local dev
	local devices = { }
	for _, dev in luci.util.vspairs(luci.sys.net.up_devices()) do
		if dev ~= "lo" and not ntm:ignore_interface(dev) then
			devices[#devices+1] = dev
		end
	end

	local curdev = luci.dispatcher.context.requestpath
	      curdev = curdev[#curdev] ~= "bandwidth" and curdev[#curdev] or devices[1]
	local opmode_24g = uci:get("wireless","wifi0","opmode")
	local opmode_5g = uci:get("wireless","wifi1","opmode")
	local opmode_5g_2 = uci:get("wireless","wifi2","opmode")
	local ssid_table = {}
	local index
-%>

<%+header%>

<script type="text/javascript">//<![CDATA[
	var bwxhr = new XHR();
	var opmode_path;
	var G, G_5g;
	var not_apmode;
	var curdev = "";
	var TIME = 0;
	var RXB  = 1;
	var RXP  = 2;
	var TXB  = 3;
	var TXP  = 4;

	var width  = 760;
	var height = 300;
	var step   = 5;

	var data_wanted = Math.floor(width / step);
	var data_fill   = 0;
	var data_stamp  = 0;
	var iface_24g;
	var data_rx = [ ];
	var data_tx = [ ];
	var line_rx;
	var line_tx;
	var label_25;
	var label_50;
	var label_75;
	var label_rx_cur;
	var label_rx_avg;
	var label_rx_peak;
	var label_tx_cur;
	var label_tx_avg;
	var label_tx_peak;
	var label_scale;

	var iface_5g;
	var data_rx_5g = [ ];
	var data_tx_5g = [ ];
	var line_rx_5g;
	var line_tx_5g;
	var label_25_5g;
	var label_50_5g;
	var label_75_5g;
	var label_rx_cur_5g;
	var label_rx_avg_5g;
	var label_rx_peak_5g;
	var label_tx_cur_5g;
	var label_tx_avg_5g;
	var label_tx_peak_5g;
	var data_stamp_5g  = 0;
	var label_scale_5g;

	var data_rx_5g_2 = [ ];
	var data_tx_5g_2 = [ ];
	var line_rx_5g_2;
	var line_tx_5g_2;
	var label_25_5g_2;
	var label_50_5g_2;
	var label_75_5g_2;
	var label_rx_cur_5g_2;
	var label_rx_avg_5g_2;
	var label_rx_peak_5g_2;
	var label_tx_cur_5g_2;
	var label_tx_avg_5g_2;
	var label_tx_peak_5g_2;
	var label_scale_5g_2;
	var iface_5g_2;
	var data_stamp_5g_2  = 0;

	var data_rx_lan = [ ];
	var data_tx_lan = [ ];
	var line_rx_lan;
	var line_tx_lan;
	var label_25_lan;
	var label_50_lan;
	var label_75_lan;
	var label_rx_cur_lan;
	var label_rx_avg_lan;
	var label_rx_peak_lan;
	var label_tx_cur_lan;
	var label_tx_avg_lan;
	var label_tx_peak_lan;
	var label_scale_lan;
	var iface_lan;
	var data_stamp_lan  = 0;
	var iface_24g_disabled, iface_5g_disabled, iface_5g_2_disabled;
	function check_iface(interface)
	{
		if(interface == "ath0" || interface == "ath1" || interface == "ath4")
		{
			iface_24g_disabled = "<%=uci:get('wireless','wifi0_ssid_1','disabled')%>";
			iface_5g_disabled = "<%=uci:get('wireless','wifi1_ssid_1','disabled')%>";
			iface_5g_2_disabled = "<%=uci:get('wireless','wifi2_ssid_1','disabled')%>";
		}
		else if(interface =="ath01" || interface == "ath11" || interface == "ath41")
		{
			iface_24g_disabled = "<%=uci:get('wireless','wifi0_ssid_2','disabled')%>";
			iface_5g_disabled = "<%=uci:get('wireless','wifi1_ssid_2','disabled')%>";
			iface_5g_2_disabled = "<%=uci:get('wireless','wifi2_ssid_2','disabled')%>";
		}
		else if(interface =="ath02" || interface == "ath12" || interface == "ath42")
		{
			iface_24g_disabled = "<%=uci:get('wireless','wifi0_ssid_3','disabled')%>";
			iface_5g_disabled = "<%=uci:get('wireless','wifi1_ssid_3','disabled')%>";
			iface_5g_2_disabled = "<%=uci:get('wireless','wifi2_ssid_3','disabled')%>";
		}
		else if(interface =="ath03" || interface == "ath13" || interface == "ath43")
		{
			iface_24g_disabled = "<%=uci:get('wireless','wifi0_ssid_4','disabled')%>";
			iface_5g_disabled = "<%=uci:get('wireless','wifi1_ssid_4','disabled')%>";
			iface_5g_2_disabled = "<%=uci:get('wireless','wifi2_ssid_4','disabled')%>";
		}
		else if(interface =="ath04" || interface == "ath14" || interface == "ath44")
		{
			iface_24g_disabled = "<%=uci:get('wireless','wifi0_ssid_5','disabled')%>";
			iface_5g_disabled = "<%=uci:get('wireless','wifi1_ssid_5','disabled')%>";
			iface_5g_2_disabled = "<%=uci:get('wireless','wifi2_ssid_5','disabled')%>";
		}
		else if(interface =="ath05" || interface == "ath15" || interface == "ath45")
		{
			iface_24g_disabled = "<%=uci:get('wireless','wifi0_ssid_6','disabled')%>";
			iface_5g_disabled = "<%=uci:get('wireless','wifi1_ssid_6','disabled')%>";
			iface_5g_2_disabled = "<%=uci:get('wireless','wifi2_ssid_6','disabled')%>";
		}		
		else if(interface =="ath06" || interface == "ath16" || interface == "ath46")
		{
			iface_24g_disabled = "<%=uci:get('wireless','wifi0_ssid_7','disabled')%>";
			iface_5g_disabled = "<%=uci:get('wireless','wifi1_ssid_7','disabled')%>";
			iface_5g_2_disabled = "<%=uci:get('wireless','wifi2_ssid_7','disabled')%>";
		}
		else if(interface =="ath07" || interface == "ath17" || interface == "ath47")
		{
			iface_24g_disabled = "<%=uci:get('wireless','wifi0_ssid_8','disabled')%>";
			iface_5g_disabled = "<%=uci:get('wireless','wifi1_ssid_8','disabled')%>";
			iface_5g_2_disabled = "<%=uci:get('wireless','wifi2_ssid_8','disabled')%>";
		}
		else if(interface =="enjet1")
		{
			iface_5g_disabled = "<%=uci:get('wireless','wifi1_enjet','disabled')%>";
		}
	}
	function iface_url(interface)
	{
		if(interface == "ath0" || interface == "ath1" || interface == "ath4")
		{
			iface_24g = "<%=build_url('admin/status/realtime/bandwidth_status', 'ath0')%>";
			iface_5g = "<%=build_url('admin/status/realtime/bandwidth_status', 'ath1')%>";
			iface_5g_2 = "<%=build_url('admin/status/realtime/bandwidth_status', 'ath4')%>";
		}
		else if(interface =="ath01" || interface == "ath11" || interface == "ath41")
		{
			iface_24g = "<%=build_url('admin/status/realtime/bandwidth_status', 'ath01')%>";
			iface_5g = "<%=build_url('admin/status/realtime/bandwidth_status', 'ath11')%>";
			iface_5g_2 = "<%=build_url('admin/status/realtime/bandwidth_status', 'ath41')%>";
		}
		else if(interface =="ath02" || interface == "ath12" || interface == "ath42")
		{
			iface_24g = "<%=build_url('admin/status/realtime/bandwidth_status', 'ath02')%>";
			iface_5g = "<%=build_url('admin/status/realtime/bandwidth_status', 'ath12')%>";
			iface_5g_2 = "<%=build_url('admin/status/realtime/bandwidth_status', 'ath42')%>";
		}
		else if(interface =="ath03" || interface == "ath13" || interface == "ath43")
		{
			iface_24g = "<%=build_url('admin/status/realtime/bandwidth_status', 'ath03')%>";
			iface_5g = "<%=build_url('admin/status/realtime/bandwidth_status', 'ath13')%>";
			iface_5g_2 = "<%=build_url('admin/status/realtime/bandwidth_status', 'ath43')%>";
		}
		else if(interface =="ath04" || interface == "ath14" || interface == "ath44")
		{
			iface_24g = "<%=build_url('admin/status/realtime/bandwidth_status', 'ath04')%>";
			iface_5g = "<%=build_url('admin/status/realtime/bandwidth_status', 'ath14')%>";
			iface_5g_2 = "<%=build_url('admin/status/realtime/bandwidth_status', 'ath44')%>";
		}
		else if(interface =="ath05" || interface == "ath15" || interface == "ath45")
		{
			iface_24g = "<%=build_url('admin/status/realtime/bandwidth_status', 'ath05')%>";
			iface_5g = "<%=build_url('admin/status/realtime/bandwidth_status', 'ath15')%>";
			iface_5g_2 = "<%=build_url('admin/status/realtime/bandwidth_status', 'ath45')%>";
		}
		else if(interface =="ath06" || interface == "ath16" || interface == "ath46")
		{
			iface_24g = "<%=build_url('admin/status/realtime/bandwidth_status', 'ath06')%>";
			iface_5g = "<%=build_url('admin/status/realtime/bandwidth_status', 'ath16')%>";
			iface_5g_2 = "<%=build_url('admin/status/realtime/bandwidth_status', 'ath46')%>";
		}
		else if(interface =="ath07" || interface == "ath17" || interface == "ath47")
		{
			iface_24g = "<%=build_url('admin/status/realtime/bandwidth_status', 'ath07')%>";
			iface_5g = "<%=build_url('admin/status/realtime/bandwidth_status', 'ath17')%>";
			iface_5g_2 = "<%=build_url('admin/status/realtime/bandwidth_status', 'ath47')%>";
		}
		else if(interface =="enjet1")
		{
			iface_5g = "<%=build_url('admin/status/realtime/bandwidth_status', 'enjet1')%>";
		}
	}

	function graph_default(radio)
	{
		var svg = eval(document.getElementById('bwsvg'+radio+''));

		if(svg)
		{
			try
			{
				G=svg.getSVGDocument
						?svg.getSVGDocument():svg.contentDocument;
			}
			catch (e)
			{
				G=document.embeds['bwsvg'].getSVGDocument();
			}
		}
		if (G)
		{
			/* find sizes */
			width       = svg.offsetWidth  - 2;
			height      = svg.offsetHeight - 2;
			data_wanted = Math.ceil(width / step);

			/* prefill datasets */
			for (var i = 0; i < data_wanted; i++)
			{
				eval("data_rx"+radio+"[i]= 0");
				eval("data_tx"+radio+"[i]= 0");
			}

			/* find svg elements */
			eval("line_rx"+radio+" = G.getElementById('rx')");
			eval("line_tx"+radio+" = G.getElementById('tx')");
			eval("label_25"+radio+" = G.getElementById(\"label_25"+radio+"\")");
			eval("label_50"+radio+" = G.getElementById(\"label_50"+radio+"\")");
			eval("label_75"+radio+" = G.getElementById(\"label_75"+radio+"\")");
			eval("label_rx_cur"+radio+" = document.getElementById(\"rx_bw_cur"+radio+"\")");
			eval("label_rx_avg"+radio+" = document.getElementById(\"rx_bw_avg"+radio+"\")");
			eval("label_rx_peak"+radio+" = document.getElementById(\"rx_bw_peak"+radio+"\")");
			eval("label_tx_cur"+radio+" = document.getElementById(\"tx_bw_cur"+radio+"\")");
			eval("label_tx_avg"+radio+" = document.getElementById(\"tx_bw_avg"+radio+"\")");
			eval("label_tx_peak"+radio+" = document.getElementById(\"tx_bw_peak"+radio+"\")");
			eval("label_scale"+radio+" = document.getElementById(\"scale"+radio+"\")");

			/* plot horizontal time interval lines */
			for (var i = width % (step * 60); i < width; i += step * 60)
			{
				var line = G.createElementNS('http://www.w3.org/2000/svg', 'line');
					line.setAttribute('x1', i);
					line.setAttribute('y1', 0);
					line.setAttribute('x2', i);
					line.setAttribute('y2', '100%');
					line.setAttribute('style', 'stroke:black;stroke-width:0.1');

				var text = G.createElementNS('http://www.w3.org/2000/svg', 'text');
					text.setAttribute('x', i + 5);
					text.setAttribute('y', 15);
					text.setAttribute('style', 'fill:#999999; font-size:9pt');
					text.appendChild(G.createTextNode(Math.round((width - i) / step / 60) + 'm'));

			}

			eval("label_scale"+radio+".innerHTML = String.format('<%:(%d minute window, %d second interval)%>', data_wanted / 60, 3)");
		}
	}
	function drawGraph(radio)
	{
		if (!G)
		{
			XHR.get('<%=build_url("admin/status/realtime/bandwidth_status", curdev)%>', null,
				function(x, data)
				{
					eval("label_rx_cur"+radio+" = document.getElementById(\"rx_bw_cur"+radio+"\")");
					eval("label_rx_avg"+radio+" = document.getElementById(\"rx_bw_avg"+radio+"\")");
					eval("label_rx_peak"+radio+" = document.getElementById(\"rx_bw_peak"+radio+"\")");
					eval("label_tx_cur"+radio+" = document.getElementById(\"tx_bw_cur"+radio+"\")");
					eval("label_tx_avg"+radio+" = document.getElementById(\"tx_bw_avg"+radio+"\")");
					eval("label_tx_peak"+radio+" = document.getElementById(\"tx_bw_peak"+radio+"\")");
					
					var data_max   = 0;

					var data_rx_avg = 0;
					var data_tx_avg = 0;

					var data_rx_peak = 0;
					var data_tx_peak = 0;

					if((data != null) && (data.length != null))
					{
						for (var i = eval("data_stamp"+radio+"") ? 0 : 1; i < data.length; i++)
						{
							/* skip overlapping entries */
							if (data[i][TIME] <= eval("data_stamp"+radio+""))
								continue;

							/* normalize difference against time interval */
							if (i > 0)
							{
								var time_delta = data[i][TIME] - data[i-1][TIME];
								if (time_delta)
								{
									eval("data_rx"+radio+".push((data[i][RXB] - data[i-1][RXB]) / time_delta)");
									eval("data_tx"+radio+".push((data[i][TXB] - data[i-1][TXB]) / time_delta)");
								}
							}
						}

						/* cut off outdated entries */
						eval("data_rx"+radio+" = data_rx"+radio+".slice(data_rx"+radio+".length - data_wanted, data_rx"+radio+".length)");
						eval("data_tx"+radio+" = data_tx"+radio+".slice(data_tx"+radio+".length - data_wanted, data_tx"+radio+".length)");

						/* find peak */
						for (var i = 0; i < eval("data_rx"+radio+".length"); i++)
						{
							eval("data_max = Math.max(data_max, data_rx"+radio+"[i])");
							eval("data_max = Math.max(data_max, data_tx"+radio+"[i])");

							eval("data_rx_peak = Math.max(data_rx_peak, data_rx"+radio+"[i])");
							eval("data_tx_peak = Math.max(data_tx_peak, data_tx"+radio+"[i])");

							if (i > 0)
							{
								eval("data_rx_avg = (data_rx_avg + data_rx"+radio+"[i]) / 2");
								eval("data_tx_avg = (data_tx_avg + data_tx"+radio+"[i]) / 2");
							}
							else
							{
								eval("data_rx_avg = data_rx"+radio+"[i]");
								eval("data_tx_avg = data_tx"+radio+"[i]");
							}
						}
						/* remember current timestamp, calculate horizontal scale */
						eval("label_rx_cur"+radio+".innerHTML = bandwidth_label(data_rx"+radio+"[data_rx"+radio+".length-1], true)");
						eval("label_tx_cur"+radio+".innerHTML = bandwidth_label(data_tx"+radio+"[data_tx"+radio+".length-1], true)");
						eval("label_rx_avg"+radio+".innerHTML = bandwidth_label(data_rx_avg, true)");
						eval("label_tx_avg"+radio+".innerHTML = bandwidth_label(data_tx_avg, true)");
						eval("label_rx_peak"+radio+".innerHTML = bandwidth_label(data_rx_peak, true)");
						eval("label_tx_peak"+radio+".innerHTML = bandwidth_label(data_tx_peak, true)");
					}
				}
			);
			
			window.setTimeout(arguments.callee, 1000);
		}
		else
		{
			/* render datasets, start update interval */

			if(not_apmode == 1)
			{
				curdev = "<%=build_url('admin/status/realtime/bandwidth_status', curdev)%>";
			}
			else
			{
				iface_url("<%=curdev%>");
				if(radio == "_5g")
				{
					curdev = iface_5g;
				}
				else if(radio == "_5g_2")
				{
					curdev = iface_5g_2;
				}
				else
				{
					curdev = iface_24g;
				}
			}

			XHR.get( curdev, null,
				function(x, data)
				{
					if (!data)
					{
						eval("label_rx_cur"+radio+".innerHTML = bandwidth_label(0, true)");
						eval("label_tx_cur"+radio+".innerHTML = bandwidth_label(0, true)");
						eval("label_rx_avg"+radio+".innerHTML = bandwidth_label(0, true)");
						eval("label_tx_avg"+radio+".innerHTML = bandwidth_label(0, true)");
						eval("label_rx_peak"+radio+".innerHTML = bandwidth_label(0, true)");
						eval("label_tx_peak"+radio+".innerHTML = bandwidth_label(0, true)");
						
						eval("line_rx"+radio+".setAttribute('style', 'display:none;')");
						eval("line_tx"+radio+".setAttribute('style', 'display:none;')");
						return;
					}

					var data_max   = 0;
					var data_scale = 0;

					var data_rx_avg = 0;
					var data_tx_avg = 0;

					var data_rx_peak = 0;
					var data_tx_peak = 0;

					for (var i = eval("data_stamp"+radio+"") ? 0 : 1; i < data.length; i++)
					{
						/* skip overlapping entries */
						if (data[i][TIME] <= eval("data_stamp"+radio+""))
							continue;

						/* normalize difference against time interval */
						if (i > 0)
						{
							var time_delta = data[i][TIME] - data[i-1][TIME];
							if (time_delta)
							{
								eval("data_rx"+radio+".push((data[i][RXB] - data[i-1][RXB]) / time_delta)");
								eval("data_tx"+radio+".push((data[i][TXB] - data[i-1][TXB]) / time_delta)");
							}
						}
					}

					/* cut off outdated entries */
					eval("data_rx"+radio+" = data_rx"+radio+".slice(data_rx"+radio+".length - data_wanted, data_rx"+radio+".length)");
					eval("data_tx"+radio+" = data_tx"+radio+".slice(data_tx"+radio+".length - data_wanted, data_tx"+radio+".length)");

					/* find peak */
					for (var i = 0; i < eval("data_rx"+radio+".length"); i++)
					{
						eval("data_max = Math.max(data_max, data_rx"+radio+"[i])");
						eval("data_max = Math.max(data_max, data_tx"+radio+"[i])");

						eval("data_rx_peak = Math.max(data_rx_peak, data_rx"+radio+"[i])");
						eval("data_tx_peak = Math.max(data_tx_peak, data_tx"+radio+"[i])");

						if (i > 0)
						{
							eval("data_rx_avg = (data_rx_avg + data_rx"+radio+"[i]) / 2");
							eval("data_tx_avg = (data_tx_avg + data_tx"+radio+"[i]) / 2");
						}
						else
						{
							eval("data_rx_avg = data_rx"+radio+"[i]");
							eval("data_tx_avg = data_tx"+radio+"[i]");
						}
					}

					/* remember current timestamp, calculate horizontal scale */
					eval("data_stamp"+radio+"=data[data.length-1][TIME]");
					if(data_max!=0){
						data_scale = height / (data_max * 1.1);
					}else{
						data_scale = 0;
					}

					eval("data_rx"+radio+".reverse()");
					eval("data_tx"+radio+".reverse()");

					/* plot data */
					var pt_rx = '0,' + height;
					var pt_tx = '0,' + height;

					var y_rx = 0;
					var y_tx = 0;

					for (var i = 0; i < eval("data_rx"+radio+".length"); i++)
					{
						var x = i * step;

						y_rx = height - Math.floor(eval("data_rx"+radio+"[i] * data_scale"));
						y_tx = height - Math.floor(eval("data_tx"+radio+"[i] * data_scale"));

						pt_rx += ' ' + x + ',' + y_rx;
						pt_tx += ' ' + x + ',' + y_tx;
					}

					pt_rx += ' ' + width + ',' + y_rx + ' ' + width + ',' + height;
					pt_tx += ' ' + width + ',' + y_tx + ' ' + width + ',' + height;
			
					eval("line_rx"+radio+".setAttribute('points', pt_rx)");
					eval("line_rx"+radio+".setAttribute('style', 'fill:none;stroke:blue;stroke-width:1;')");
					eval("line_tx"+radio+".setAttribute('points', pt_tx)");
					eval("line_tx"+radio+".setAttribute('style', 'fill:none;stroke:green;stroke-width:1;')");

					eval("data_rx"+radio+".reverse()");
					eval("data_tx"+radio+".reverse()");

					var v_top = bandwidth_label(1.1 * 0.25 * data_max, true, "none");
					eval($("#bwsvg"+radio+"").css("width",  (v_top != 0)? (v_top >= 100)?"93%":"95%" :"97%"));
					
					eval($("#label_25"+radio+"").html(bandwidth_label(1.1 * 0.25 * data_max, true, "none")));
					eval($("#label_50"+radio+"").html(bandwidth_label(1.1 * 0.50 * data_max, true, "none")));
					eval($("#label_75"+radio+"").html(bandwidth_label(1.1 * 0.75 * data_max, true, "none")));

					eval("label_rx_cur"+radio+".innerHTML = bandwidth_label(data_rx"+radio+"[data_rx"+radio+".length-1], true)");
					eval("label_tx_cur"+radio+".innerHTML = bandwidth_label(data_tx"+radio+"[data_tx"+radio+".length-1], true)");
					eval("label_rx_avg"+radio+".innerHTML = bandwidth_label(data_rx_avg, true)");
					eval("label_tx_avg"+radio+".innerHTML = bandwidth_label(data_tx_avg, true)");
					eval("label_rx_peak"+radio+".innerHTML = bandwidth_label(data_rx_peak, true)");
					eval("label_tx_peak"+radio+".innerHTML = bandwidth_label(data_tx_peak, true)");	
				}
			);
		}
	}
	function bandwidth_label(bytes, br, showParamters)
	{
		showParamters = showParamters || true;
		var uby = '<%:KB/s%>';
		var kby = (bytes / 1024);

		if (kby >= 1024)
		{
			uby = '<%:MB/s%>';
			kby = kby / 1024;
		}

		var ubi = '<%:kbit/s%>';
		var kbi = (bytes * 8 / 1024);

		if (kbi >= 1024)
		{
			ubi = '<%:Mbit/s%>';
			kbi = kbi / 1024;
		}

		$('#bandwidth').html(uby);
		return String.format("%f %s",
			kby.toFixed(2), (showParamters != "none")?uby:""
		);
	}

	/* wait for SVG */
	//function abc(){
	window.setTimeout(
		function() {
			var wifix, mesh, radio_24g, radio_5g, radio_5g_2, lan;

			lan = "<%=curdev%>".match("eth");
			if (lan == "eth") // lan
			{
				not_apmode = 1;
				document.getElementById('graph_lan').style.display = "";
				graph_default("_lan");
				lan = window.setInterval("drawGraph(\"_lan\")",3000);
			}
			else
			{
				wifix = "<%=curdev%>".substring(0,4);
				iface_24g_disabled = 1;
				iface_5g_disabled = 1;
				iface_5g_2_disabled = 1;
				check_iface("<%=curdev%>");
				switch(opmode_path)
				{
					case '0': // ap ap ap
						not_apmode = 0;
	<% if WLAN24G=="1" then --[[ #### WLAN24G feature ### --]] %>
						if(iface_24g_disabled == 0)
						{
							document.getElementById('graph_24g').style.display = "";
							graph_default("");
							radio_24g = window.setInterval("drawGraph(\"\")",3000);
						}
	<%end%>
	<% if WLAN5G=="1" then --[[ #### WLAN5G feature ### --]] %>
						if(iface_5g_disabled == 0)
						{
							document.getElementById('graph_5g').style.display = "";
							graph_default("_5g");
							radio_5g = window.setInterval("drawGraph(\"_5g\")",3000);
						}
	<%end%>
	<% if WLAN5G_2=="1" then --[[ #### WLAN5G_2 feature ### --]] %>
						if(iface_5g_2_disabled == 0)
						{
							document.getElementById('graph_5g_2').style.display = "";
							graph_default("_5g_2");
							radio_5g_2 = window.setInterval("drawGraph(\"_5g_2\")",3000);
						}
	<%end%>
						break;
	<% if WLAN5G_2=="1" then --[[ #### WLAN5G_2 feature ### --]] %>
					case '1': // ap ap x
						if(wifix != "ath0" && wifix != "ath1")
						{
							not_apmode = 1;
							document.getElementById('graph_5g_2').style.display = "";
							graph_default("_5g_2");
							radio_5g_2 = window.setInterval("drawGraph(\"_5g_2\")",3000);
						}
						else
						{
							not_apmode = 0;
							if(iface_24g_disabled == 0)
							{
								document.getElementById('graph_24g').style.display = "";
								graph_default("");
								radio_24g = window.setInterval("drawGraph(\"\")",3000);
							}
							if(iface_5g_disabled == 0)
							{
								document.getElementById('graph_5g').style.display = "";
								graph_default("_5g");
								radio_5g = window.setInterval("drawGraph(\"_5g\")",3000);
							}
						}
						break;
					case '2': // ap x ap
						if(wifix != "ath0" && wifix != "ath4")
						{
							not_apmode = 1;
							document.getElementById('graph_5g').style.display = "";
							graph_default("_5g");
							radio_5g = window.setInterval("drawGraph(\"_5g\")",3000);
						}
						else
						{
							not_apmode = 0;
							if(iface_24g_disabled == 0)
							{
								document.getElementById('graph_24g').style.display = "";
								graph_default("");
								radio_24g = window.setInterval("drawGraph(\"\")",3000);
							}
							if(iface_5g_2_disabled == 0)
							{
								document.getElementById('graph_5g_2').style.display = "";
								graph_default("_5g_2");
								radio_5g_2 = window.setInterval("drawGraph(\"_5g_2\")",3000);
							}
						}
						break;
					case '3': // x ap ap
						if(wifix != "ath1" && wifix != "ath4")
						{
							not_apmode = 1;
							document.getElementById('graph_24g').style.display = "";
							graph_default("");
							radio_24g = window.setInterval("drawGraph(\"\")",3000);
						}
						else
						{
							not_apmode = 0;
							if(iface_5g_disabled == 0)
							{
								document.getElementById('graph_5g').style.display = "";
								graph_default("_5g");
								radio_5g = window.setInterval("drawGraph(\"_5g\")",3000);
							}
							if(iface_5g_2_disabled == 0)
							{
								document.getElementById('graph_5g_2').style.display = "";
								graph_default("_5g_2");
								radio_5g_2 = window.setInterval("drawGraph(\"_5g_2\")",3000);
							}
						}
						break;
	<%end%>
					case '4':
						if(wifix != "ath0" && wifix != "ath1" && wifix != "ath4" && wifix != "enje")
						{
							not_apmode = 1;
						}
						else
						{
							not_apmode = 0;
						}
						if(wifix == "ath0" || wifix == "ath2")
						{
							document.getElementById('graph_24g').style.display = "";
							graph_default("");
							radio_24g = window.setInterval("drawGraph(\"\")",3000);
						}
						else if (wifix == "ath1" || wifix == "ath5" || wifix == "enje")
						{
							document.getElementById('graph_5g').style.display = "";
							graph_default("_5g");
							radio_5g = window.setInterval("drawGraph(\"_5g\")",3000);
						}
						else if (wifix == "ath4" || wifix == "ath6")
						{
							document.getElementById('graph_5g_2').style.display = "";
							graph_default("_5g_2");
							radio_5g_2 = window.setInterval("drawGraph(\"_5g_2\")",3000);
						}
						break;
				}
			}
		}, 1000
	);
//}
//abc();
//]]></script>
<script>
$(document).ready(function(){
                check_iface("<%=curdev%>");
                var check_tab_lan="<%=curdev%>".match("eth");

                if(check_tab_lan != "eth"){
                        $('#graph_lan').css('display','none');
                }else{
                        <% if WLAN24G=="1" then %>
                        $('#graph_24g').css('display','none');
                        <% end %>
                        <% if WLAN5G=="1" then %>
                        $('#graph_5g').css('display','none');
                        <% end %>
                        <% if WLAN5G_2=="1" then %>
                        $('#graph_5g_2').css('display','none');
                        <% end %>
                }
                <% if WLAN24G=="1" then %>
                if(iface_24g_disabled=="1"){
                        $('#graph_24g').css('display','none');
                }
                <% end %>
                <% if WLAN5G=="1" then %>
                if(iface_5g_disabled=="1"){
                        $('#graph_5g').css('display','none');
                }
                <% end %>
                <% if WLAN5G_2=="1" then %>
                if(iface_5g_2_disabled=="1"){
                        $('#graph_5g_2').css('display','none');
                }
                <% end %>
        })
</script>
<div id="Realtime_Traffic_info" class="popbox">
<%
local SupportRadio=""
if WLAN24G == "1" then
	SupportRadio = "2.4G"
end
if WLAN5G == "1" then
	if SupportRadio=="" then  SupportRadio="5G" else SupportRadio=""..SupportRadio.." and 5G" end
	if WLAN5G_2 == "1" then
		SupportRadio = ""..SupportRadio.."-1 and 5G-2"
	end
end
%>
    <p><%=SupportRadio%><%: and Ethernet port inbound and outbound traffic by current, average and peak time.%></p>
</div>
<h2><a id="content" name="content"><%:Realtime Traffic%> (<span id="bandwidth">KB/s</span>)</a><img class="popper" data-popbox="Realtime_Traffic_info" src="<%=media%>/pictures/icon_info_blue.png"></h2>

<ul class="cbi-tabmenu">
	<%
	function qreplace(s)
		local v=s
if uci:get('functionlist','functionlist','SUPPORT_DUAL_LAN_PORT') == '1' then -----#### SUPPORT_DUAL_LAN_PORT START ###
	if uci:get('functionlist','functionlist','SUPPORT_DUAL_LAN_PORT_INVERSE') == '1' then
		if s == "eth0" then
			v = translate(uci:get("functionlist","vendorlist","GUI_ETH1_NAME") or "LAN2")
		end
		if s == "eth1" then
			v = translate(uci:get("functionlist","vendorlist","GUI_ETH0_NAME") or "LAN1")
		end
	else
		if s == "eth0" then
			v = translate(uci:get("functionlist","vendorlist","GUI_ETH0_NAME") or "LAN1")
		end
		if s == "eth1" then
			v = translate(uci:get("functionlist","vendorlist","GUI_ETH1_NAME") or "LAN2")
		end
	end		
else -----#### SUPPORT_DUAL_LAN_PORT ELSE ###
		if s == "eth0" or s == "eth1" then
			v = translate("LAN")
		end
end -----#### SUPPORT_DUAL_LAN_PORT END ###

		if ntm:get_wifinet(s) then
			v = ntm:get_wifinet(s)["iwdata"].ssid
			if s == "ath35" then
				v = translate("MESH_5G")
			end
			if s == "ath32" then
				v = translate("MESH_24G")
			end
		end
		if s == "enjet1" then
			v =  translate(uci:get("wireless","wifi1_enjet","ssid"))
		end
		return luci.util.repSpec(v)
	end
	%>
	<% for _, dev in ipairs(devices) do
		if  dev ~= "br-lan" and not string.find(dev, "br-") and not string.find(dev, "eth0.") and not string.find(dev, "eth1.") and (string.find(dev, "ath") or string.find(dev, "eth") or string.find(dev, "enjet")) and ( uci:get('functionlist','functionlist','SUPPORT_IPCAM') ~= "1" or dev ~= "eth1" ) then
			if ntm:get_wifinet(pcdata(dev)) and filterRadio and ntm:get_wifinet(pcdata(dev))["iwdata"].device==filterRadio  then
			else
				local show="1"
if uci:get('functionlist','functionlist','SUPPORT_REPEATER_MODULE') == '1' then -----#### SUPPORT_REPEATER_MODULE START ###
				local opmode_24G = uci:get("wireless","wifi0","opmode")
				local opmode_5G  = uci:get("wireless","wifi1","opmode")
				local if_24G = {"ath0","ath01","ath02","ath03","ath04","ath05","ath06","ath7"}
				local if_5G = {"ath1","ath11","ath12","ath13","ath14","ath15","ath16","ath17"}

				for i=1,#if_24G do
					if if_24G[i] == dev and opmode_24G == "sta_ap" then
						show = "0"
					end
				end

				for i=1,#if_5G do
					if if_5G[i] == dev and opmode_5G == "sta_ap" then
						show = "0"
					end
				end
end -----#### SUPPORT_REPEATER_MODULE END ###
				if dev ~= "ath32" and dev ~= "ath35" and dev ~= "ath29" and dev ~= "ath59" and dev ~= "ath49" and show == "1" then

					if WLAN24G == "1" and WLAN5G == "1" and WLAN5G_2 == "1" then
						if opmode_24g == "ap" and opmode_5g == "ap" and opmode_5g_2 == "ap" then
							index = 0
							if string.match(dev, "eth0") then
								index = 10;
							elseif string.match(dev, "eth1") then
								index = 11;
							elseif string.len(dev) == 4 then
								index = 0
							else
								a = string.match(dev,"ath(%d+)")
								index = string.sub(a,-1)
							end

							if ssid_table[index] ~= true then
		%>

				<li class="cbi-tab<%= dev == curdev and "" or "-disabled" %>"><a href="<%=pcdata(dev)%>"><script>
				opmode_path = "0"; //ap ap ap
				document.write(repSpecHTML("<%=qreplace(pcdata(dev))%>"));</script></a></li>
		<%
								ssid_table[index] = true
							end
						elseif opmode_24g == "ap" and opmode_5g == "ap" and opmode_5g_2 ~= "ap" then
							index = 0
							if string.match(dev, "eth0") then
								index = 10;
							elseif string.match(dev, "eth1") then
								index = 11;
							elseif string.match(dev, "ath0") == nil and string.match(dev, "ath1") == nil 
							then
								index = string.match(dev,"ath(%d+)")
							elseif string.len(dev) == 4 then
								index = 0
							else
								a = string.match(dev,"ath(%d+)")
								index = string.sub(a,-1)
							end

							if ssid_table[index] ~= true then
		%>

				<li class="cbi-tab<%= dev == curdev and "" or "-disabled" %>"><a href="<%=pcdata(dev)%>"><script>
				opmode_path = "1"; //ap ap x
				document.write(repSpecHTML("<%=qreplace(pcdata(dev))%>"));</script></a></li>
		<%	
								ssid_table[index] = true
							end
						elseif opmode_24g == "ap" and opmode_5g ~= "ap" and opmode_5g_2 == "ap" then
							if string.match(dev, "eth0") then
								index = 10;
							elseif string.match(dev, "eth1") then
								index = 11;
							elseif string.match(dev, "ath0") == nil and string.match(dev, "ath4") == nil 
							then
								index = string.match(dev,"ath(%d+)")
							elseif string.len(dev) == 4 then
								index = 0
							else
								a = string.match(dev,"ath(%d+)")
								index = string.sub(a,-1)
							end

							if ssid_table[index] ~= true then
		%>

				<li class="cbi-tab<%= dev == curdev and "" or "-disabled" %>"><a href="<%=pcdata(dev)%>"><script>	
				opmode_path = "2"; //ap x ap
				document.write(repSpecHTML("<%=qreplace(pcdata(dev))%>"));</script></a></li>
		<%
								ssid_table[index] = true
							end
						elseif opmode_24g ~= "ap" and opmode_5g == "ap" and opmode_5g_2 == "ap" then
							if string.match(dev, "eth0") then
								index = 10;
							elseif string.match(dev, "eth1") then
								index = 11;
							elseif string.match(dev, "ath1") == nil and string.match(dev, "ath4") == nil 
							then
								index = string.match(dev,"ath(%d+)")
							elseif string.len(dev) == 4 then
								index = 0
							else
								a = string.match(dev,"ath(%d+)")
								index = string.sub(a,-1)
							end

							if ssid_table[index] ~= true then
		%>
				<li class="cbi-tab<%= dev == curdev and "" or "-disabled" %>"><a href="<%=pcdata(dev)%>"><script>
				opmode_path = "3"; //x ap ap
				document.write(repSpecHTML("<%=qreplace(pcdata(dev))%>"));</script></a></li>
		<%
								ssid_table[index] = true
							end
						else
		%>
				<li class="cbi-tab<%= dev == curdev and "" or "-disabled" %>"><a href="<%=pcdata(dev)%>"><script>
				opmode_path = "4"; //else
				document.write(repSpecHTML("<%=qreplace(pcdata(dev))%>"));</script></a></li>
		<%
						end
					elseif WLAN24G == "1" and WLAN5G == "1" then
						if opmode_24g == "ap" and opmode_5g == "ap" then
							index = 0
							if string.match(dev, "eth0") then
								index = 10;
							elseif string.match(dev, "eth1") then
								index = 11;
							elseif string.len(dev) == 4 then
								index=0
							else
								a = string.match(dev,"ath(%d+)")
								index = string.sub(a,-1)
							end

							if ssid_table[index] ~= true then
		%>
				<li class="cbi-tab<%= dev == curdev and "" or "-disabled" %>"><a href="<%=pcdata(dev)%>"><script>
				opmode_path = "0";
				document.write(repSpecHTML("<%=qreplace(pcdata(dev))%>"));</script></a></li>
		<%
								ssid_table[index]=true
							end
						else
		%>
				<li class="cbi-tab<%= dev == curdev and "" or "-disabled" %>"><a href="<%=pcdata(dev)%>"><script>
				opmode_path = "4";
				document.write(repSpecHTML("<%=qreplace(pcdata(dev))%>"));</script></a></li>
		<%
						end
					elseif WLAN24G == "1" or WLAN5G == "1" then
		%> 
				<li class="cbi-tab<%= dev == curdev and "" or "-disabled" %>"><a href="<%=pcdata(dev)%>"><script>
				opmode_path = "4"; //only 2.4G
				document.write(repSpecHTML("<%=qreplace(pcdata(dev))%>"));</script></a></li>
		<%
					end
				end
			end
		end
	end %>
</ul>
<% if WLAN24G=="1" then --[[ #### WLAN24G feature ### --]] %>
<div id ="graph_24g">
<script>
	if($.support.leadingWhitespace)
	{
		document.write('<div><table><tr style="font-size: 16px;"><td><%:2.4G:%></td></tr></table></div>');
		document.write('<div class="realtime_chart"><div id="label_25" class="label_75"></div><div id="label_50" class="label_50"></div><div id="label_75" class="label_25"></div><embed id="bwsvg" style="width:97%; height:300px; border:1px solid #000000; background-color:#FFFFFF" src="<%=resource%>/bandwidth.svg" /> </div>');
	}
</script>
<div style="text-align:right"><small id="scale">-</small></div>
<br />

<table style="width:100%; table-layout:fixed" cellspacing="5">

	<tr>
		<td style="text-align:right; vertical-align:top"><strong style="border-bottom:2px solid blue"><%:Inbound:%></strong></td>
		<td id="rx_bw_cur">(0 <%:KB/s%>)</td>

		<td style="text-align:right; vertical-align:top"><strong><%:Average:%></strong></td>
		<td id="rx_bw_avg">(0 <%:KB/s%>)</td>

		<td style="text-align:right; vertical-align:top"><strong><%:Peak:%></strong></td>
		<td id="rx_bw_peak">(0 <%:KB/s%>)</td>
	</tr>
	<tr>
		<td style="text-align:right; vertical-align:top"><strong style="border-bottom:2px solid green"><%:Outbound:%></strong></td>
		<td id="tx_bw_cur">(0 <%:KB/s%>)</td>

		<td style="text-align:right; vertical-align:top"><strong><%:Average:%></strong></td>
		<td id="tx_bw_avg">(0 <%:KB/s%>)</td>

		<td style="text-align:right; vertical-align:top"><strong><%:Peak:%></strong></td>
		<td id="tx_bw_peak">(0 <%:KB/s%>)</td>
	</tr>
</table>
</div>
<%end%>
<% if WLAN5G=="1" then --[[ #### WLAN5G feature ### --]] %>
<div id ="graph_5g">
<script>
	if($.support.leadingWhitespace)
	{
		document.write('<div><table><tr style="font-size: 16px;"><td><%:5G:%></td></tr></table></div>');
		document.write('<div class="realtime_chart"><div id="label_25_5g" class="label_75"></div><div id="label_50_5g" class="label_50"></div><div id="label_75_5g" class="label_25"></div><embed id="bwsvg_5g" style="width:97%; height:300px; border:1px solid #000000; background-color:#FFFFFF" src="<%=resource%>/bandwidth.svg" /> </div>');
	}
</script>
<div style="text-align:right"><small id="scale_5g">-</small></div>
<br />
<table style="width:100%; table-layout:fixed" cellspacing="5">
	<tr>
		<td style="text-align:right; vertical-align:top"><strong style="border-bottom:2px solid blue"><%:Inbound:%></strong></td>
		<td id="rx_bw_cur_5g">(0 <%:KB/s%>)</td>

		<td style="text-align:right; vertical-align:top"><strong><%:Average:%></strong></td>
		<td id="rx_bw_avg_5g">(0 <%:KB/s%>)</td>

		<td style="text-align:right; vertical-align:top"><strong><%:Peak:%></strong></td>
		<td id="rx_bw_peak_5g">(0 <%:KB/s%>)</td>
	</tr>
	<tr>
		<td style="text-align:right; vertical-align:top"><strong style="border-bottom:2px solid green"><%:Outbound:%></strong></td>
		<td id="tx_bw_cur_5g">(0 <%:KB/s%>)</td>

		<td style="text-align:right; vertical-align:top"><strong><%:Average:%></strong></td>
		<td id="tx_bw_avg_5g">(0 <%:KB/s%>)</td>

		<td style="text-align:right; vertical-align:top"><strong><%:Peak:%></strong></td>
		<td id="tx_bw_peak_5g">(0 <%:KB/s%>)</td>
	</tr>
</table>
</div>
<%end%>
<% if WLAN5G_2=="1" then --[[ #### WLAN5G_2 feature ### --]] %>
<div id ="graph_5g_2">
<script>
	if($.support.leadingWhitespace)
	{
		document.write('<div><table><tr style="font-size: 16px;"><td><%:5G_2:%></td></tr></table></div>');
		document.write('<div class="realtime_chart"><div id="label_25_5g_2" class="label_75"></div><div id="label_50_5g_2" class="label_50"></div><div id="label_75_5g_2" class="label_25"></div><embed id="bwsvg_5g_2" style="width:97%; height:300px; border:1px solid #000000; background-color:#FFFFFF" src="<%=resource%>/bandwidth.svg" /> </div>');
	}
</script>
<div style="text-align:right"><small id="scale_5g_2">-</small></div>
<br />
<table style="width:100%; table-layout:fixed" cellspacing="5">
	<tr>
		<td style="text-align:right; vertical-align:top"><strong style="border-bottom:2px solid blue"><%:Inbound:%></strong></td>
		<td id="rx_bw_cur_5g_2">(0 <%:KB/s%>)</td>

		<td style="text-align:right; vertical-align:top"><strong><%:Average:%></strong></td>
		<td id="rx_bw_avg_5g_2">(0 <%:KB/s%>)</td>

		<td style="text-align:right; vertical-align:top"><strong><%:Peak:%></strong></td>
		<td id="rx_bw_peak_5g_2">(0 <%:KB/s%>)</td>
	</tr>
	<tr>
		<td style="text-align:right; vertical-align:top"><strong style="border-bottom:2px solid green"><%:Outbound:%></strong></td>
		<td id="tx_bw_cur_5g_2">(0 <%:KB/s%>)</td>

		<td style="text-align:right; vertical-align:top"><strong><%:Average:%></strong></td>
		<td id="tx_bw_avg_5g_2">(0 <%:KB/s%>)</td>

		<td style="text-align:right; vertical-align:top"><strong><%:Peak:%></strong></td>
		<td id="tx_bw_peak_5g_2">(0 <%:KB/s%>)</td>
	</tr>
</table>
</div>
<%end%>
<div id ="graph_lan">
<script>
	if($.support.leadingWhitespace)
	{
		document.write('<div class="realtime_chart"><div id="label_25_lan" class="label_75"></div><div id="label_50_lan" class="label_50"></div><div id="label_75_lan" class="label_25"></div><embed id="bwsvg_lan" style="width:97%; height:300px; border:1px solid #000000; background-color:#FFFFFF" src="<%=resource%>/bandwidth.svg" /> </div>');
	}
</script>
<div style="text-align:right"><small id="scale_lan">-</small></div>
<br />
<table style="width:100%; table-layout:fixed" cellspacing="5">
	<tr>
		<td style="text-align:right; vertical-align:top"><strong style="border-bottom:2px solid blue"><%:Inbound:%></strong></td>
		<td id="rx_bw_cur_lan">(0 <%:KB/s%>)</td>

		<td style="text-align:right; vertical-align:top"><strong><%:Average:%></strong></td>
		<td id="rx_bw_avg_lan">(0 <%:KB/s%>)</td>

		<td style="text-align:right; vertical-align:top"><strong><%:Peak:%></strong></td>
		<td id="rx_bw_peak_lan">(0 <%:KB/s%>)</td>
	</tr>
	<tr>
		<td style="text-align:right; vertical-align:top"><strong style="border-bottom:2px solid green"><%:Outbound:%></strong></td>
		<td id="tx_bw_cur_lan">(0 <%:KB/s%>)</td>

		<td style="text-align:right; vertical-align:top"><strong><%:Average:%></strong></td>
		<td id="tx_bw_avg_lan">(0 <%:KB/s%>)</td>

		<td style="text-align:right; vertical-align:top"><strong><%:Peak:%></strong></td>
		<td id="tx_bw_peak_lan">(0 <%:KB/s%>)</td>
	</tr>
</table>
</div>
<%+footer%>
