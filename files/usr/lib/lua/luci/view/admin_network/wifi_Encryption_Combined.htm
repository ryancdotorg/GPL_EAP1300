<html>
<%+functionlist%>
<%
    local cbi = require "luci.cbi"
    local tpl = require "luci.template"
    local ntm = require "luci.model.network"
    local uci = require "luci.model.uci".cursor()
    ntm.init(uci)
    local netId = luci.http.formvalue("netId")  or netid
    local countryId = luci.http.formvalue("countryId") or ""
    local networkName = (ntm:get_wifinet(netId)):name()
    local opmode = luci.http.formvalue("tmpOpmode") or ""
    local from_wifi_join = from_wifi_join or ""
    local from_wifi_join_cb_wdssta = from_wifi_join_cb_wdssta or ""
	-- SUPPORT_COMBINED_SSID_SETTING
	local radio = luci.util.trim(string.sub(netId,5,5))
	local wifi0_opmode = luci.http.formvalue("wifi0_select_opmode") or ""
	local wifi1_opmode = luci.http.formvalue("wifi1_select_opmode") or ""
	local wifi2_opmode = luci.http.formvalue("wifi2_select_opmode") or ""
	local displayMode = luci.http.formvalue("displayMode") or "ori" -- ap, wds_ap, sta_ap, ori
	local checkbox2G = luci.http.formvalue("checkbox2G") or ""
	local checkbox5G = luci.http.formvalue("checkbox5G") or ""
	local checkbox52G = luci.http.formvalue("checkbox52G") or ""
	local guestEn = luci.http.formvalue("guestEn") or ""
    
	local device = luci.http.formvalue("device") or ""
	local MAX_WLAN_MAC_FILTER_NUMBER = uci:get('functionlist','vendorlist','MAX_WLAN_MAC_FILTER_NUMBER') or 32
    local support_l2_whitelist = ""
    wifinet = ntm:get_wifinet(netId)
    sectionName = wifinet.sid
    if ( sectionName:match("_ssid_") or "" ) == "_ssid_" then
        support_l2_whitelist = "1"
    end
    local l2_isolation_config=io.open("/etc/config/l2_isolation","r")
    if l2_isolation_config ~= nil then
        io.close(l2_isolation_config)
    else
        support_l2_whitelist = "0"
    end
    local sntcd_unit = uci:get('sntcd','sntcd','rate_unit') or "Mbps"
%>
<head>
<meta charset="utf-8">
<link rel="stylesheet" href="<%=media%>/cascade.css">
<script src="/luci-static/web_ECB_FANCY/jquery-1.10.1.min.js"></script>
<script src="/luci-static/web_ECB_FANCY/common.js"></script>
<script type="text/javascript" src="/luci-static/resources/cbi.js"></script>
<% if uci:get('functionlist','functionlist','SUPPORT_AP_RP_SETUP_WIZARD') == "1" and uci:get("system","firmware","first_login") == "1" then %>
<%+header%>
<%else%>
<script>
function ajax_setCsrf(){
    var url , container ,data;
    url = '<%=luci.dispatcher.build_url("admin/system/ajax_setCsrf")%>';
    $.ajax({
        async: false,
        type : "GET",
        url:url,
        data:data,
        dataType:"json",
        error:function(){
        },
        success:function(result){
        }
    });
}
</script>
<% end %>
<STYLE type="text/css">
* {
    margin: 0;
    padding: 0;
}
form {
    font-family: helvetica,arial,verdana,sans-serif;
}
table {
    border-collapse: collapse;
    text-align: center;
}
input {
    font-family: sans-serif;
    font-size: 16px;
    color : black;
}
input[type="button"] {
    margin-left: 1px;
    margin-right: 9px;
    padding-left: 10px;
    padding-right: 10px;
}
input[type="submit"] {
    margin-left: 1px;
    margin-right: 9px;
    padding-left: 10px;
    padding-right: 10px;
}
input[type="file"] {
    background-color: #F0F0F0;
    margin-left: 1px;
    margin-right: 9px;
    padding-right: 10px;
}
input[type="checkbox"] {
    margin-left: 3px;
    margin-right: 9px;
}
input[type="radio"] {
    margin-right: 3px;
}
.radio_en {
    margin-left: 3px;
    margin-right: 3px;
}
.radio_en_label {
    margin-right: 9px;
}
input[type="text"] {
    border: 1px solid #D0D0D0;
    margin-left: 2px;
    margin-right: 6px;
    padding: 2px;
}

input[type="text"][readonly="readonly"] {
    border: 0 none #D0D0D0;
    font-size: 16px;
    margin-right: 6px;
}
input[type="password"] {
    border: 1px solid #D0D0D0;
    margin-left: 2px;
    margin-right: 6px;
    padding: 2px;
}
textarea {
    margin: 2px;
    padding: 2px;
}
select {
    border: 1px solid #D0D0D0;
    font-size: 16px;
    margin: 2px 6px 2px 2px;
     color : black;
}
a {
    outline: medium none;
}
li {
    color: #000000;
    font-size: 16px;
    line-height: 24px;
}
.msg_type_mark {
    color: red;
    font-size: 16px;
    font-weight: bold;
    margin-right: 9px;
}
.outer-bg {
    background-color: #F5F5F5;
}
.inner-bg {
    background-color: #FFFFFF;
}
.banner .ban_logo {
    width: 1202px;
}
.banner .ban_info {
    width: 1202px;
}
.banner .banner_shadow {
    width: 1202px;
}
.ban_logo {
    background: url("pictures/banner_logo.png") repeat scroll 0 0 transparent;
    height: 71px;
}
.ban_info {
    background-color: #1B489C;
    border-bottom-left-radius: 12px;
    border-bottom-right-radius: 12px;
    border-collapse: separate;
    border-spacing: 0;
    height: 41px;
}
.model {
    background-color: #1B489C;
    border-radius: 12px 12px 12px 12px;
    color: #FFFFFF;
    font-size: 20px;
    text-align: center;
    width: 181px;
}
.padding {
    background-color: #1B489C;
    width: 30px;
}
.description {
    background-color: #1B489C;
    color: #FFFFFF;
    font-weight: bold;
    text-align: left;
    width: 750px;
}
.buttons {
    background-color: #F1F1F1;
    border-bottom: 1px solid #1B489C;
    border-left: 1px none #1B489C;
    border-right: 1px solid #1B489C;
    border-style: none solid solid none;
    color: #000000;
    font-weight: bold;
    padding: 10px;
    width: 12%;
}
.buttons:nth-child(4) {
    border-top-left-radius: 10px;
}
.buttons:last-child {
    border-top-right-radius: 10px;
}
.buttons:nth-child(4) {
    border-bottom-left-radius: 10px;
}
.buttons:last-child {
    border-bottom-right-radius: 10px;
}
.buttons:nth-child(4) {
    border-left-style: solid;
}
.buttons img {
    cursor: pointer;
}
.buttons:hover {
    background-color: #9FDCFF;
    cursor: pointer;
}
.banner_shadow {
    background: url("pictures/banner_shadow.png") no-repeat scroll 0 0 transparent;
    height: 20px;
}
.function .menu {
    width: 1202px;
}
.function {
    background-color: white;
    border-color: #1B489C;
    border-left: 1px solid #1B489C;
    border-radius: 12px 12px 12px 12px;
    border-right: 1px solid #1B489C;
    border-style: solid;
    border-top: 1px solid #1B489C;
    width: 1202px;
}
.menu_blank {
    height: 34px;
    width: 195px;
}
.menu_bg {
    height: 486px;
    text-align: left;
    vertical-align: top;
}
.menu_major {
    background-color: #1B489C;
    font-size: 16px;
    font-weight: 600;
    height: auto;
    padding-bottom: 6px;
    padding-left: 15px;
    padding-top: 6px;
}
.menu_major_on {
    color: #FFFFFF;
}
.menu_major_off {
    color: #FFFFFF;
}
.menu_minor {
    border-bottom: 1px solid #9FDCFF;
    font-size: 16px;
    padding-left: 45px;
}
.menu_minor:hover {
    background-color: #9FDCFF;
    cursor: pointer;
}
.datahighlight {
    background-color: #9FDCFF;
    cursor: pointer;
}
.menu_minor_on {
    background-color: #9FDCFF;
    color: #000000;
    height: auto;
    padding-bottom: 4px;
    padding-top: 4px;
}
.menu_minor_off {
    background-color: #FFFFFF;
    color: #000000;
    height: auto;
    padding-bottom: 4px;
    padding-top: 4px;
}
.ctx-container {
    border-left: 1px solid #1B489C;
    text-align: left;
    vertical-align: top;
}
.ctx-iframe {
    height: 540px;
    overflow: auto;
    width: 100%;
}
.ctx-merge-iframe {
    height: 350px;
    overflow: auto;
    width: 100%;
}
.ctx-head-padding {
    height: 20px;
    width: 100%;
}
.ctx-head {
    height: 12px;
}
.ctx-body {
    padding-left: 40px;
    padding-right: 38px;
}
.ctx-blank {
    height: 45px;
}
.ctx-foot {
    height: 20px;
}
.bottommargin {
    margin-bottom: 20px;
}
.ecm-tbl {
    width: 100%;
}
.ecm-tbl div {
    display: inline;
}
.ecm-tbl th {
    font-size: 18px;
    font-weight: normal;
    height: 40px;
    padding-left: 10px;
    text-align: left;
}
.ecm-tbl .onepx {
    border-right: 1px solid #FFFFFF;
}
.ecm-tbl .tbl-name {
    padding-left: 10px;
    text-align: left;
    padding-top:0px;
    padding-bottom:0px;
    vertical-align : middle;
}
.ecm-tbl .tbl-value {
    padding-left: 10px;
    text-align: left;
    padding-top:0px;
    padding-bottom:0px;
    vertical-align : middle;
}
.ecm-tbl .tbl-grey {
    background-color: #EEEEEE;
    padding-left: 6px;
    vertical-align : middle;
}
.ecm-tbl .tbl-grey-15px {
    background-color: #EEEEEE;
    padding-left: 6px;
}
.ecm-tbl .tbl-middle {
    padding-left: 6px;
}
.ecm-tbl .margin-indent {
    margin-left: 1em;
}
.ecm-tbl .margin-indent:before {
    content: "- ";
}
.ecm-tbl .margin-indent1_4 {
    margin-left: 1.4em;
}
.ecm-tbl .margin-indent1_6 {
    margin-left: 1.6em;
}
.ecm-tbl .margin-indent3 {
    margin-left: 2.5em;
}
.ecm-tbl .margin-indent3:before {
    content: "- ";
}
.ecm-tbl .float-align {
    float: right;
}
.tbl-blank {
    border-top: 1px solid #1B489C;
    height: 0px;
}
.tbl-name {
    border-bottom: 1px solid #EEEEEE;
    color: #000000;
    font-size: 16px;
    height: 27px;
}
.tbl-value {
    border-bottom: 1px solid #EEEEEE;
    color: #000000;
    font-size: 16px;
    height: 27px;
}
.tbl-grey {
    border-bottom: 1px solid #EEEEEE;
    color: #000000;
    font-size: 16px;
    height: 27px;
}
.tbl-grey-15px {
    border-bottom: 1px solid #EEEEEE;
    color: #000000;
    font-size: 15px;
    height: 27px;
    line-height: 19px;
}
.tbl-middle {
    border-bottom: 1px solid #EEEEEE;
    color: #000000;
    font-size: 16px;
    height: 27px;
}
.tbl-alighTop {
    border-bottom: 1px solid #EEEEEE;
    padding-left: 8px;
    text-align: left;
    vertical-align: top;
}
.striped {
    background-color: #F0F0F0;
}
.caution_padding {
    padding-left: 10px;
}
.button1 {
    background: url("./images/overlay.png") repeat-x scroll left center #00AFF0;
    border: 1px solid #63CEF6;
    border-radius: 4px 4px 4px 4px;
    box-shadow: 0 0 0 rgba(22, 142, 199, 0.5) inset;
    color: #FFFFFF;
    cursor: pointer;
    font: 16px tahoma,arial,sans-serif;
    height: 30px;
    margin: 10px 20px 20px 0;
    min-width: 100px;
    padding: 3px 8px 6px;
    width: 100px;
}
.buttonPM {
    background: url("./images/overlay.png") repeat-x scroll left center #00AFF0;
    border: 1px solid #63CEF6;
    border-radius: 4px 4px 4px 4px;
    box-shadow: 0 0 0 rgba(22, 142, 199, 0.5) inset;
    color: #FFFFFF;
    cursor: pointer;
    font: 16px tahoma,arial,sans-serif;
    height: 30px;
    min-width: 100px;
    padding: 3px 8px 6px;
    width: 100px;
}
.button1:hover {
    background: url("./images/but_mouseover.png") repeat-x scroll center top #00AFF0;
    border: 1px solid #3E97CE;
    color: #FFFFFF;
}
.button1:active {
    background: url("./images/but_mouseover2.png") repeat-x scroll center top #00AFF0;
    border: 1px solid #3E97CE;
    color: #FFFFFF;
    position: relative;
    top: 0;
}
.button2 {
    background: url("./images/overlay.png") repeat-x scroll left center #00AFF0;
    border: 1px solid #63CEF6;
    border-radius: 4px 4px 4px 4px;
    box-shadow: 0 0 0 rgba(22, 142, 199, 0.5) inset;
    color: #FFFFFF;
    cursor: pointer;
    font: 16px tahoma,arial,sans-serif;
    height: 30px;
    margin: 10px 20px 20px 0;
    min-width: 100px;
    padding: 3px 8px 6px;
    width: 200px;
}
.desc_style {
    font-size: 12px;
    text-align: center;
    vertical-align: middle;
}
.div1 {
    display: inline;
}
.quater_Smaller {
    font-size: 80%;
}
.popbox {
    background: none repeat scroll 0 0 #EEEFEB;
    box-shadow: 0 0 5px 0 #A4A4A4;
    color: #000000;
    display: none;
    margin: 0;
    padding: 10px;
    position: absolute;
    width: 400px;
    z-index: 99999;
}
.input-disabled{
    background-color:black;
    border:1px solid #ABADB3;
    padding:2px 1px;
}

.tc_unit_select {
    display: inline-block;
    width: 70px;
    height: 30px;
    padding: 4px;
    font-size: 16px;
    line-height: 18px;
    color: black;
    border: 1px solid #ccc;
    -webkit-border-radius: 3px;
    -moz-border-radius: 3px;
    border-radius: 3px;

}

 select:disabled {
    background-color : #CDCDCD;
    color : gray;
}

 input:disabled {
    background-color : #CDCDCD;
    color : gray;
}

</STYLE>

<script type="text/javascript">
var is_form_submit = "0";
var titleSetting, titleSec, titleBasicSetting;
var netId = '<%=netId%>'

<%
if uci:get('functionlist','functionlist','SUPPORT_WLAN5G_2') == '1' then --[[ #### WLAN5G_2 feature ### --]]
    WLAN5G_2="1"
end --[[ #### WLAN5G_2 feature ### --]]
%>

<% if uci:get('functionlist','functionlist','SUPPORT_COMBINED_SSID_SETTING') == "1" then %>

//deal with AP mode title -------------------------------------------------------------------------
var ap_radio_str = "";
<% if wifi0_opmode == "ap" then %>
	ap_radio_str += " 2.4GHz";
<% end %>

<% if wifi1_opmode == "ap" then %>
	if(ap_radio_str != ""){
		ap_radio_str += "/5GHz";
	}else{
		ap_radio_str += " 5GHz";
	}
<% end %>

<% if uci:get('functionlist','functionlist','SUPPORT_WLAN5G_2') == '1' then %>
	<% if wifi2_opmode == "ap" then %>
	if(ap_radio_str != ""){	
		ap_radio_str += "/5GHz-2";
	}else{
		ap_radio_str += " 5GHz-2";
	}
	<% end %>
<% end %>
//deal with AP mode title -------------------------------------------------------------------------

//deal with WDS_AP mode title -------------------------------------------------------------------------
var wds_ap_radio_str = "";
<% if wifi0_opmode == "wds_ap" and radio == "0" then %>
    wds_ap_radio_str += " 2.4GHz";
<% end %>

<% if wifi1_opmode == "wds_ap" and radio == "1" then %>
   wds_ap_radio_str += " 5GHz";
<% end %>

<% if uci:get('functionlist','functionlist','SUPPORT_WLAN5G_2') == '1' then %>
    <% if wifi2_opmode == "wds_ap" and radio == "2" then %>
        wds_ap_radio_str += " 5GHz-2";
    <% end %>
<% end %>
//deal with WDS_AP mode title -------------------------------------------------------------------------
<% if displayMode == "ap" then %>
  titleBasicSetting = "<%:Wireless Setting%> - <%:Access Point%> "+ap_radio_str;
<% end %>
<% if displayMode == "wds_ap" then %>
  titleBasicSetting = "<%:Wireless Setting%> - WDS <%:Access Point%> "+wds_ap_radio_str;
<% end %>
<% end %>

<% if uci:get('functionlist','functionlist','SUPPORT_COMBINED_SSID_SETTING') == "1" then %>
<% if uci:get('functionlist','functionlist','SUPPORT_AP_RP_SETUP_WIZARD') == "1" then %>
    titleSetting = "<%:Wireless Settings%>";
<% else %>
    titleSetting = "<%:Wireless Security%>";
<% end %>
    titleSec = "<%:Wireless Security%>";
<% else %>
switch(netId.split('.')[0]){
    case 'wifi0':
        titleSetting = "<%:Wireless Setting - 2.4GHz%>";
        titleSec = "<%:Wireless Security - 2.4GHz%>";
        break;
    case 'wifi1':
<% if WLAN5G_2=="1" then --[[ #### WLAN5G_2 feature ### --]] %>
        titleSetting = "<%:Wireless Setting - 5GHz - 1%>";
        titleSec = "<%:Wireless Security - 5GHz - 1%>";
<% else %>
        titleSetting = "<%:Wireless Setting - 5GHz%>";
        titleSec = "<%:Wireless Security - 5GHz%>";
<% end --[[ #### WLAN5G_2 feature end ### --]] %>
        break;
    case 'wifi2':
        titleSetting = "<%:Wireless Setting - 5GHz - 2%>";
        titleSec = "<%:Wireless Security - 5GHz - 2%>";
        break;
}

<% end %>

var checkRule= (function(){
    var checkResult = true,
    isReg = function(type,data){
        var reg;
        switch(type){
            case "port":
                        reg = /^([0-9]{1,4}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])$/;
                        break;
            case "host":
                        reg = /^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$/;
                        break;
            case "range1-64":
                        reg = /\b([1-9]|[1-5][0-9]|6[0-4])\b/;
                        break;
            case "range1-999":
                        reg = /\b[1-9][0-9]{0,2}\b/;
                        break;
            case "range1-999999":
                        reg = /\b[1-9][0-9]{0,5}\b/;
                        break;
            case "range30-3600":
                        reg = /\b([0]|[3-9][0-9]|[1-9][0-9]{2}|[12][0-9]{3}|3[0-5][0-9]{2}|3600)\b/;
                        break;
            case "range60-600":
                        reg = /\b([6-9][0-9]|[1-5][0-9]{2}|600)\b/;
                        break;
            case "wepkey":
                        reg = /^([0-9a-fA-F]{10})$|^(.{5})$|^([0-9a-fA-F]{26})$|^(.{13})$|^([0-9a-fA-F]{32})$|^(.{16})$/;
                    break;
            case "wpakey":
                        reg = /^([0-9a-fA-F]{64})$|^(.{8,63})$/ ;
                    break;
            case "secret":
                        reg = /^([\S\s]{1,64})$/ ;
                    break
        }
        return reg.test(data);
    },
    statrtCheck = function(){

    if(wpsCheck()&&wep_key_check()&&bssid_check()<% if support_l2_whitelist == "1" then %>&&l2_whitelist_check()<% end %>&&text_check()&&vlanidCheck()<% if uci:get('functionlist','functionlist','SUPPORT_BANDSTEER_SELECT_LIST') == '1' then %>&&bandsteerCheck()<% end %>){
        is_form_submit = "1";
        $('form').submit();

    }
        return false;

    },
    vlanidCheck = function(){
        //VALN ID rule start ******************************
    <%
    local ManagementVLANID_MIN_VALUE = tonumber(uci:get("functionlist", "vendorlist", "ManagementVLANID_MIN_VALUE") or 1)
    local ManagementVLANID_MAX_VALUE = tonumber(uci:get("functionlist", "vendorlist", "ManagementVLANID_MAX_VALUE") or 4094)
    %>
    
        var has_isolation='0',has_isolation_for_lacp="0";
        var invalid_id='0',invalid_M_id='0';
        var str='<%:%s%s value is out of range %s%>';
        var min_vlan_id  = parseInt("<%=ManagementVLANID_MIN_VALUE%>",10);
        var max_vlan_id  = parseInt("<%=ManagementVLANID_MAX_VALUE%>",10);
        var vlanId_bad_format = false; 
        <% if uci:get('functionlist','functionlist','SUPPORT_ETHERNET_BONDING') == '1' then %>    
            get_lacp_mut_status();
        <% end %>
        
        $('input:text:enabled[name$="ManagementVLANID"]').each(function(){
            var n = parseInt($(this).val(), 10);
            if(!isNumber($(this).val()) || !isBetween(n, min_vlan_id, max_vlan_id)){
                $(this).focus();
                invalid_M_id = '1';
                vlanId_bad_format = true;
                return false;
            }
        });

        if(invalid_M_id == '1'){
            alert(String.format(str, "<%=translate('Management VLAN ID')%>", ":", "<%=string.format("[%s - %s]",ManagementVLANID_MIN_VALUE,ManagementVLANID_MAX_VALUE) %>"));
            vlanId_bad_format = true;
            return false;
        }
        
        var check_duplicate_vlan_id = '0';
        
    $(':text:visible:enabled[name$="vlan_id"]').each(function(){
            var test_vlan_id = $(this).val();
            var times = 0;

            var n = parseInt($(this).val(), 10);
            if(!isNumber($(this).val()) || !isBetween(n, min_vlan_id, max_vlan_id)){
                $(this).focus();
                invalid_id = '1';
                vlanId_bad_format = true;
                return false;    
            }

            $(':text:visible:enabled[name$="vlan_id"]').each(function(){
                if($(this).val()==test_vlan_id){
                    times++;
                }
            });
            if(times > 1){
                check_duplicate_vlan_id = '1';
            }
        });

    if(invalid_id == '1'){
            alert(String.format(str, "<%:VLAN ID%>", ":",  "<%=string.format("[%s - %s]",ManagementVLANID_MIN_VALUE,ManagementVLANID_MAX_VALUE) %>"));
            vlanId_bad_format = true;
            return false;
        }
    
    if(vlanId_bad_format){
        return false;   
    }

    return true;
    //VALN ID rule end ******************************
    },
    bandsteerCheck = function(){
    //Bandsteering rule start ******************************
    var str='<%:%s%s value is out of range %s%>';
    var bad_format = false ;
    $(':text:visible:enabled[name$="bandsteerrssi"]').each(function(){
            var n = parseInt($(this).val(), 10);
            <% if WLAN5G_2 == '1' then --[[ #### WLAN5G_2 START ### --]] %>
            if(!isBetween(n, -80, -66)){
                bad_format = true;
                alert(String.format(str, "<%:RSSI%>", ":", "[-80 - -66]"));
                return false;
            }
            <% else %>
            if(!isBetween(n, -80, -60)){
                bad_format = true;
                alert(String.format(str, "<%:RSSI%>", ":", "[-80 - -60]"));
                return false;
            }
            <% end %>
        });

        $(':text:visible:enabled[name$="bandsteerpersent"]').each(function(){
            var n = parseInt($(this).val(), 10);
            if(!isNumber($(this).val()) || !isBetween(n, 0, 100)){
                bad_format = true;
                alert(String.format(str, "<%:Percent of clients%>", ":", "[0 - 100]"));
                return false;
            }
        });

      if(bad_format){
       return false ;
        }

    return true;
    //Bandsteering rule end ******************************
    },
    wpsCheck = function(){
        <%
        netName_ap = {}
        netName_wds_ap={}
        local flag = "0"
        local k = 1
if uci:get('functionlist','functionlist','SUPPORT_AP_MODE_ONLY') == '1' then -----#### SUPPORT_AP_MODE_ONLY START ###
            for i, dev in ipairs(ntm:get_wifidevs()) do
                if dev:get("opmode") ~= "mon" then
                    netName_ap[i] = ntm:get_wifinet_index(dev:name(),"ap",tonumber(1)):name()
                end
            end
else
        while (flag == "0") do
            for i, dev in ipairs(ntm:get_wifidevs()) do
                if dev:get("opmode") ~= "mon" then
                    netName_ap[i] = ntm:get_wifinet_index(dev:name(),"ap",tonumber(1)):name()
                    local wds_ap = ntm:get_wifinet_index(dev:name(),"wds_ap",tonumber(k)):name()
                    local nawds = uci:get("wireless",wds_ap,"nawds")
                    if(nawds == "0") then
                        for j, p in ipairs(ntm:get_wifidevs()) do
                            if p:get("opmode") ~= "mon" then
                                netName_wds_ap[j] = ntm:get_wifinet_index(p:name(),"wds_ap",tonumber(k)):name()
                            end
                        end
                        flag = "1"
                    end
                    k = k+1
                end
            end
        end
end-----####  SUPPORT_AP_MODE_ONLY END ####
        local wnet = ntm:get_wifinet(netId)
        local flag2 = "1"
        for i=1,2 do
            if wnet.sid == netName_ap[i] then
                if uci:get("wireless",netName_ap[i],"wps_pbc") == "1" then
        %>
                    if ($("select[name$='encryption']").val() != "none" && $("select[name$='encryption']").val() != "psk2"){
                            alert("<%:WPS only support Disable security or WPA pre-shared key with WPA2-PSK(AES) encryption%>");
                            return false;
                        }
                    if($("select[name$='encryption']").val() == "psk2"){
                        if($("select[name$='cipher']").val() != "ccmp"){
                            alert("<%:WPS only support Disable security or WPA pre-shared key with WPA2-PSK(AES) encryption%>");
                            return false;
                        }
                    }
                <%end%>
        <%
            elseif wnet.sid == netName_wds_ap[i] then
                if uci:get("wireless",netName_wds_ap[i],"wps_pbc") == "1" then
        %>
                    // console.log($("select[name$='encryption']").val());
                    if ($("select[name$='encryption']").val() != "none" && $("select[name$='encryption']").val() != "psk2"){
                            alert("<%:WPS only support Disable security or WPA pre-shared key with WPA2-PSK(AES) encryption%>");
                            return false;
                        }
                    if($("select[name$='encryption']").val() == "psk2"){
                        if($("select[name$='cipher']").val() != "ccmp"){
                            alert("<%:WPS only support Disable security or WPA pre-shared key with WPA2-PSK(AES) encryption%>");
                            return false;
                        }
                    }
                <%end%>
        <%
            end

        end

        %>
        return true;
    },
    text_check = function(){
        $(':text:enabled:visible').each(function(){
            if (!$(this).attr('name').match(".key"))
                $(this).val($(this).val().trim());
        });
        var str='<%:%s%s value is out of range %s%>', str2='<%:Key%d: only hex digits allowed [0-9,a-f,A-F]%>';
        if($('input:enabled[name$="auth_port"]').length>0){
            if($('input:enabled[name$="auth_port"]').val()<=0 || isReg("port",$('input:enabled[name$="auth_port"]').val())==false || !isNumber($('input:enabled[name$="auth_port"]').val())){
                alert(String.format(str, "<%:Radius Port%>", ":", "[1 - 65535]"));
                return false;
            }
        }
        if($('input:enabled[name$="nasid"]').length>0){
            var nasid_length = $('input:enabled[name$="nasid"]').val().length||0;
            if(nasid_length<3||nasid_length>32){
                alert("<%:NAS-ID: length must between 3 and 32!%>");
                return false;
            }
            else{
                if(isFullwidth($('input:enabled[name$="nasid"]').val()) || isChinese($('input:enabled[name$="nasid"]').val()) || !isPattern2($('input:enabled[name$="nasid"]').val())){
                    alert("<%=translatef('NAS-ID: %s (Space) are invalid characters.','# ` \\\' \\\" : ; \\\\ / [ ] &')%>");
                    return false;
                }
            }
        }
        if($('input:enabled[name$="nasport"]').length>0){
            if(isReg("port",$('input:enabled[name$="nasport"]').val())==false || !isNumber($('input:enabled[name$="nasport"]').val())){
                alert(String.format(str, "<%:NAS-PORT%>", ":", "[0 - 65535]"));
                return false;
            }
        }
        if($('input:enabled[name$="nasip"]').length>0){
            if(!isIpaddr($('input:enabled[name$="nasip"]').val())){
			alert("<%:Invalid value of NAS-IP Address%>");
                return false;
	    }
	    if(isMulticast($('input:enabled[name$="nasip"]').val())){
			alert("<%:The NAS-IP cannot be a multicast ip address.%>");
		return false;
	    }
	    if(isLinklocal($('input:enabled[name$="nasip"]').val())){
			alert("<%:The NAS-IP cannot be a linklocal ip address.%>");
		return false;
	    }
	    if(isLoopback($('input:enabled[name$="nasip"]').val())){
			alert("<%:The NAS-IP address cannot be a loopback ip address.%>");
		return false;
	    }
        }
        if($('input:enabled[name$="acct_port"]').length>0){
            if($('input:enabled[name$="acct_port"]').val()<=0 || isReg("port",$('input:enabled[name$="acct_port"]').val())==false || !isNumber($('input:enabled[name$="acct_port"]').val())){
                alert(String.format(str, "<%:Radius Accounting Port%>", ":", "[1 - 65535]"));
                return false;
            }
        }
        if($('input:enabled[name$="auth_server"]').length>0){
            if(isMulticast($('input:enabled[name$="auth_server"]').val())){
                alert("<%:Invalid radius server ip address. Please enter again.%>");
                return false;
            }
            if(isLinklocal($('input:enabled[name$="auth_server"]').val())){
                alert("<%:Invalid radius server ip address. Please enter again.%>");
                return false;
            }
            if(isLoopback($('input:enabled[name$="auth_server"]').val())){
                alert("<%:Invalid radius server ip address. Please enter again.%>");
                return false;
            }

            if(!isValidIpaddr($('input:enabled[name$="auth_server"]').val())){
                alert("<%:Invalid radius server ip address. Please enter again.%>");
                return false;
            }
        }
        if($('input:enabled[name$="acct_server"]').length>0){
            if(isMulticast($('input:enabled[name$="acct_server"]').val())){
                 alert("<%:Invalid radius accounting server ip address. Please enter again.%>");
                return false;
            }
            if(isLinklocal($('input:enabled[name$="acct_server"]').val())){
                 alert("<%:Invalid radius accounting server ip address. Please enter again.%>");
                return false;
            }
            if(isLoopback($('input:enabled[name$="acct_server"]').val())){
                 alert("<%:Invalid radius accounting server ip address. Please enter again.%>");
                return false;
            }
            if(!isValidIpaddr($('input:enabled[name$="acct_server"]').val())){
                 alert("<%:Invalid radius accounting server ip address. Please enter again.%>");
                return false;
            }
        }

        if($('input:enabled[name$=".key"]').length>0){
            //I use SUPPORT_ATKK_FW_VERSION define to determine the ATKK products
            if(isReg("wpakey",$('input:enabled[name$=".key"]').val())==false || ( functionlist.SUPPORT_ATKK_FW_VERSION == 1 && !isPattern1($('input:enabled[name$=".key"]').val()))){
                alert("<%:passphrase: only hex 64 digits allowed [0-9, a-f, A-F] or 8-63 ASCII characters!%>");
                return false;
            }
        }

<% if ( uci:get('functionlist','functionlist','SUPPORT_AP_RP_SETUP_WIZARD') == "1" or uci:get('functionlist','functionlist','SUPPORT_RP_SSID_SETTING') == "1" ) and
      ( displayMode == "sta_ap" or from_wifi_join == "1" ) then %>
        if($('#erp_enable').prop("checked") && $('input:enabled[name$="rp_enc_val"]').val()=="psk2+ccmp" && $('input:enabled[name$="repeater_key"]').length>0){
            //I use SUPPORT_ATKK_FW_VERSION define to determine the ATKK products
            if(isReg("wpakey",$('input:enabled[name$="repeater_key"]').val())==false || ( functionlist.SUPPORT_ATKK_FW_VERSION == 1 && !isPattern1($('input:enabled[name$="repeater_key"]').val()))){
                alert("<%:passphrase: only hex 64 digits allowed [0-9, a-f, A-F] or 8-63 ASCII characters!%>");
                return false;
            }
        }
<% end %>

        for(var i=1;i<=4;i=i+1){
            var this_wepkey = $('input:enabled[name$=".key'+i+'"]');
            if(this_wepkey.length>0 && this_wepkey.val()!=""){
                if(isReg("wepkey",this_wepkey.val())==false){
                    alert(String.format(str2, i));
                    return false;
                }
            }
        }

        if($('input:enabled[name$="wpa_group_rekey"]').length>0){
            if($('input:enabled[name$="wpa_group_rekey"]').val()<0 || isReg("range30-3600",$('input:enabled[name$="wpa_group_rekey"]').val())==false || !isNumber($('input:enabled[name$="wpa_group_rekey"]').val())){
                alert(String.format(str, "<%:Group Key Update Interval%>", ":", "[30 - 3600]"));
                return false;
            }
        }

        if($('input:enabled[name$="acct_interval"]').length>0){
            if($('input:enabled[name$="acct_interval"]').val()<0 || isReg("range60-600",$('input:enabled[name$="acct_interval"]').val())==false || !isNumber($('input:enabled[name$="acct_interval"]').val())){
                alert(String.format(str, "<%:Interim Accounting Interval%>", ":", "[60 - 600]"));
                return false;
            }
        }

        if($('input:enabled[name$="auth_secret"]').length>0){
            if(isReg("secret",$('input:enabled[name$="auth_secret"]').val())==false){
                alert("<%:Radius secret: length must between 1 and 64!%>");
                return false;
            }
        }

        if($('input:enabled[name$="acct_secret"]').length>0){
            if(isReg("secret",$('input:enabled[name$="acct_secret"]').val())==false){
                alert("<%:Radius accounting secret: length must between 1 and 64!%>");
                return false;
            }
        }
        <% if sntcd_unit == "Kbps" then %>
        if($('input:enabled[name$="tc_downlimit"]').length>0){
            if ( $('select[name$="tc_down_unit"]').val() == "Mbps" )
            {
                if($('input:enabled[name$="tc_downlimit"]').val()<=0 || isReg("range1-999",$('input:enabled[name$="tc_downlimit"]').val())==false || !isNumber($('input:enabled[name$="tc_downlimit"]').val())){
                    alert(String.format(str, "<%:Download Limit%>", ":", "[1 - 999]"));
                    return false;
                }
            }
            else
            {
                if($('input:enabled[name$="tc_downlimit"]').val()<=0 || isReg("range1-999999",$('input:enabled[name$="tc_downlimit"]').val())==false || !isNumber($('input:enabled[name$="tc_downlimit"]').val())){
                    alert(String.format(str, "<%:Download Limit%>", ":", "[1 - 999999]"));
                    return false;
                }
            }
        }

        if($('input:enabled[name$="tc_uplimit"]').length>0){
            if ( $('select[name$="tc_up_unit"]').val() == "Mbps" )
            {
                if($('input:enabled[name$="tc_uplimit"]').val()<=0 || isReg("range1-999",$('input:enabled[name$="tc_uplimit"]').val())==false || !isNumber($('input:enabled[name$="tc_uplimit"]').val())){
                    alert(String.format(str, "<%:Upload Limit%>", ":", "[1 - 999]"));
                    return false;
                }
            }
            else
            {
                if($('input:enabled[name$="tc_uplimit"]').val()<=0 || isReg("range1-999999",$('input:enabled[name$="tc_uplimit"]').val())==false || !isNumber($('input:enabled[name$="tc_uplimit"]').val())){
                    alert(String.format(str, "<%:Upload Limit%>", ":", "[1 - 999999]"));
                    return false;
                }
            }
        }
        <% else %>
        if($('input:enabled[name$="tc_downlimit"]').length>0){
            if($('input:enabled[name$="tc_downlimit"]').val()<=0 || isReg("range1-999",$('input:enabled[name$="tc_downlimit"]').val())==false || !isNumber($('input:enabled[name$="tc_downlimit"]').val())){
                alert(String.format(str, "<%:Download Limit%>", ":", "[1 - 999]"));
                return false;
            }
        }

        if($('input:enabled[name$="tc_uplimit"]').length>0){
            if($('input:enabled[name$="tc_uplimit"]').val()<=0 || isReg("range1-999",$('input:enabled[name$="tc_uplimit"]').val())==false || !isNumber($('input:enabled[name$="tc_uplimit"]').val())){
                alert(String.format(str, "<%:Upload Limit%>", ":", "[1 - 999]"));
                return false;
            }
        }
        <% end %>
        return true;
    },
    wep_key_check = function(){
        if($('select[name$="encryption"]').val()=="wep"){
            var input_type =  $('select[name$="input_type"]').val();
            var key_length =  $('select[name$="key_length"]').val();
            var key_id =  $('select[name$="key_id"]').val();
            var key_value =  $('input[name$=\"key'+key_id+'\"]').val().replace(/^([s][:])/,"");

            if(key_value.length != (input_type=="hex"?key_length:key_length/2)){
                alert("<%:Please fill the key match the selected input type and key length!%>");
                return false;
            }
        }
        return true;
    },
    <% if support_l2_whitelist == "1" then %>
    l2_whitelist_check = function()
    {
        var ret = true, i, j;
        if($('input:visible:enabled[name^="l2_whitelist"]').length>0)
        {
            // var reg  = /^([0-9A-F]{2}[:-]){5}([0-9A-F]{2})$/ ;
            var reg = /^([0-9A-F][0,2,4,6,8,A,C,E][:])([0-9A-F]{2}[:]){4}([0-9A-F]{2})$/;
            var mac_str = "";
            $('input:visible:enabled[name^="l2_whitelist"]').each(function()
            {
                var mac_str = "";
                mac_str = $(this).val();
                if((mac_str!="" && reg.test(mac_str.toUpperCase())==false) || mac_str=="00:00:00:00:00:00" )
                {
                    alert("<%:Wrong MAC address!%>"+"   "+mac_str);
                    ret =  false;
                    return false;
                }
                $(this).val(mac_str.toUpperCase());
            });
            for(i=1; i<4; i=i+1)
            {
                if ($('input[name$="l2_whitelist_'+i+'"]').val() != "")
                {
                    for (j=i+1; j<4; j=j+1)
                    {
                        if ($('input[name$="l2_whitelist_'+j+'"]').val() != "")
                        {
                            //alert("i="+i+", j="+j);
                            if ($('input[name$="l2_whitelist_'+i+'"]').val() == $('input[name$="l2_whitelist_'+j+'"]').val())
                            {
                                var str1='<%:Duplicate MAC address in %s list.%>', str2='<%:Whitelist%>';
                                alert(String.format(str1, str2));
                                ret =  false;
                                return false;
                            }
                        }
                    }
                }
            }
        }
        return ret;
    },
    <% end %>
    bssid_check = function(){
     if($('input[name$="bssid"]').length>0){
        //var reg  = /^([0-9A-F]{2}[:-]){5}([0-9A-F]{2})$/ ;
        var reg = /^([0-9A-F][0,2,4,6,8,A,C,E][:-])([0-9A-F]{2}[:-]){4}([0-9A-F]{2})$/;
        var bssid_str = "";
            $('#bssid_span').children().each(function(){
                 bssid_str += bssid_str==""?$(this).val():":"+$(this).val();
            });

            if(bssid_str!=""&&reg.test(bssid_str.toUpperCase())==false){
                alert("<%:Wrong MAC address!%>"+"   "+bssid_str);
                return false;
            }

        }
           return true;

    },
    acl_check = function(){
    if($('select[name$="macfilter"]').length>0){
        // var reg  = /^([0-9A-F]{2}[:-]){5}([0-9A-F]{2})$/ ;
        var reg = /^([0-9A-F][0,2,4,6,8,A,C,E][:-])([0-9A-F]{2}[:-]){4}([0-9A-F]{2})$/;
        var aclid_str = "";
            $('#acl_span').children(':text').each(function(){
                 aclid_str += aclid_str==""?$(this).val():":"+$(this).val();
            });
            if((aclid_str!="" && reg.test(aclid_str.toUpperCase())==false) || aclid_str=="00:00:00:00:00:00" ){
                alert("<%:Wrong MAC address!%>"+"   "+aclid_str);
                return false;
            }

        }
           return aclid_str.toUpperCase();

    };

    return{
        check : statrtCheck,
        acl_check : acl_check
    };


}());
var bssid = (function(){
    var init = function(){
    /*handle bssid copyto*/
    if($('input[name$="bssid"]').length>0){
        $('#bssid_span').show().insertBefore($('input[name$="bssid"]'));
        $('#bssid_span').children().each(function(){
             $(this).css('width',"60px");
        });
         $('input[name$="bssid"]').hide();
        var bssid_value = $('input[name$="bssid"]').val()||"";
        if(bssid_value!=""){

        var bssid_array = bssid_value.split(":");
            for(var i = 0 ;i<bssid_array.length;i=i+1){
                $('input[name$="bssid'+i+'"]').val(bssid_array[i]);
            }
        }

        $('input[name$="preferbssid_enable"]').click(function(){
            var flag = this.checked?false:true;
                $('input[name$="bssid"]').attr("disabled",flag);
                 $('#bssid_span').children().each(function(){
                 $(this).attr("disabled",flag);
                });
        });

        $('input[name$="preferbssid_enable"]').each(function(){
            $(this).closest("tr").hide();
            // $(this).insertBefore($('input[name$="bssid"]'));
            $(this).insertBefore($('#bssid_span'));
            $(this).triggerHandler("click");
         });
     }
 },
 save = function(){
    if($('input[name$="bssid"]').length>0){
        var bssid_str = "";
            $('#bssid_span').children().each(function(){
                 bssid_str += bssid_str==""?$(this).val():":"+$(this).val();
            });
        $('input[name$="bssid"]').val(bssid_str.toUpperCase());
    }
 };



        return{
        init : init,
        save : save
    };
}());

var acl_table = (function(){
    var maclist={},this_macfilter,max_size = <%=MAX_WLAN_MAC_FILTER_NUMBER%>,

    init = function(){
<% if uci:get('functionlist','functionlist','SUPPORT_WLAN24G')~='1' and uci:get('functionlist','functionlist','SUPPORT_WLAN5G')=='1' then %>
    $('select[name$="macfilter"]').val("<%=uci:get('wireless',string.gsub(networkName,"wifi0","wifi1"),'macfilter') or ""%>")
    var allow_str = '<%=uci:get("wireless",string.gsub(networkName,"wifi0","wifi1"),"allowmaclist")%>';
    var deny_str = '<%=uci:get("wireless",string.gsub(networkName,"wifi0","wifi1"),"denymaclist")%>';
<% else %>
    var allow_str = '<%=uci:get("wireless",networkName,"allowmaclist")%>';
    var deny_str = '<%=uci:get("wireless",networkName,"denymaclist")%>';
<% end %>

    maclist.dut_mac = [];
<%
    local dut_mac = luci.util.split(luci.util.exec("ifconfig | grep HWaddr | awk '{print $1}'"))
    for n = 1 ,#dut_mac do
%>
    maclist.dut_mac.push('<%=ntm:get_mac(dut_mac[n])%>');
<%
    end
%>
    maclist.allow = (allow_str.length == 0)?[]:allow_str.split(" ");
    maclist.deny = (deny_str.length == 0)?[]:deny_str.split(" ");

       if($('select[name$="macfilter"]').length>0){
         this_macfilter = $('select[name$="macfilter"]');
           $tmp = '<tr class="title-option" keep="keep"><td width="30%"></td><td width="70%" id ="acl_id_field"></td></tr>' +
		           '<tr class="title-option" keep="keep"><td width="30%">No.</td><td width="70%"><%:MAC Address%></td></tr>';
           $('#tbl_macfilter').append($tmp);
            $('#acl_span').show().appendTo($('#acl_id_field'));

            $('#acl_span').children().each(function(){
                 $(this).css('width',"60px");
            });



            $('select[name$="macfilter"]').change(function(){
                var flag = $(this).val()== ""?true:false;
                     $('#acl_span').children().each(function(){
                     $(this).attr("disabled",flag);
                    });

            });

            $('#acl_btn').click(function(){
                var result = checkRule.acl_check();
                if(result != false){
                    add(this_macfilter.val(),result);
                   this_macfilter.triggerHandler('change');
                   this_macfilter.triggerHandler('change');
                }

            });
       }

    },
    isFull = function(list_name){
        return maclist[list_name].length >= max_size ;
    },
    inArray = function(list_name,element){
      return  jQuery.inArray( element, maclist[list_name])>-1?true:false;
    },
    lanCheck = function(element){
      return  jQuery.inArray( element, maclist.dut_mac)>-1?true:false;
    },
    add = function(list_name,element){
        var str='<%:Duplicate MAC address in %s list.%>', str2='<%:Table is full! The %s table allow %d sets of MAC Address at most.%>';
        var list_str;
        list_str = (list_name=="allow")?"<%:allow%>":"<%:deny%>";
        if(inArray(list_name,element)){
            alert(String.format(str, list_str));
        }else if(lanCheck(element)){
            alert("<%:Duplicate LAN MAC address%>");
        }else if(isFull(list_name)){
            alert(String.format(str2, list_str, max_size));
        }
        else{
            maclist[list_name].push(element);
        }

    },
    del = function(list_name,index){

        maclist[list_name].splice(index,1);
        this_macfilter.triggerHandler('change');
        this_macfilter.triggerHandler('change');
    },
    drawTable = function(list_name){

        $table = $('#tbl_macfilter');

        for(var i in maclist[list_name]){
            var j;
            var $tr = $(document.createElement('tr'));
	        $tr.addClass("title-option");
            $tr.appendTo($table);

            var $num = $(document.createElement('td'));
            var $mac = $(document.createElement('td'));
            var $mac_text = $("<span />", {
             text: maclist[list_name][i]+"  "
            });
            var $button = $('<button/>', {
              type: 'button',
            'class': 'cbi-button',
              id: list_name+"_"+i,
              text: '<%:Delete%>'
            });
                $num.text(parseInt(i)+1);
                j=parseInt(i)+1;
                $num.appendTo($tr);
                $num.attr("myid",wifiRadio+"_aclmac_no"+j);
                $mac.appendTo($tr);
                $mac.append($mac_text);
                $mac_text.appendTo($mac);
                $mac_text.attr("myid",wifiRadio+"_aclmac_list"+j);
                $button.appendTo($mac);

             $('#'+list_name+"_"+i).bind('click',function(){
                var tmp = $(this).attr("id").split("_");
                    del(tmp[0],tmp[1]);
             });

        }

    },
    save = function(){
        if($('select[name$="macfilter"]').length>0){
            var networkName = '<%=networkName%>';


            var allow_str = (maclist["allow"].length==0)?"":maclist["allow"].join(" ");
            var deny_str = (maclist["deny"].length==0)?"":maclist["deny"].join(" ");
            switch(this_macfilter.val()){
                case "allow":
                        $('input[name$="allowmaclist"]').val(allow_str);
                        $("form").append('<input type="hidden"  name="cbid.wireless.'+networkName+'.denymaclist" value="'+deny_str+'">');
                        break;
                case "deny":
                        $('input[name$="denymaclist"]').val(deny_str);
                        $("form").append('<input type="hidden"  name="cbid.wireless.'+networkName+'.allowmaclist" value="'+allow_str+'">');
                        break;
            }
        }
    };

    return {
        init :init,
        add: add,
        del:del,
        drawTable : drawTable,
        save : save
    };

}());

	$(function() {

    var max = 230;
    var tbl_id ;
       $('#cbi_set div').each(function(){
         var type = this.type ? this.type : this.nodeName.toLowerCase();
         var className = $(this).attr("class")||"";

            if(className.indexOf("cbi-value")>-1){
                var id = $(this).attr("id")||"";
                var title = $(this).find("label").first().text()||"";
                var label = $(this).find("label").attr("for")||"";
                 $(this).find("label").each(function(){
                    if($(this).attr("for").indexOf("enabled1")==-1 && $(this).attr("for").indexOf("fastroamingEnable1")==-1){
                        $(this).css({
                            'color': '#fff',
                            'font-size': '1px',
                            'height': '1px',
                            'float':'left',
                            'display':'block',
                            'margin-right':'1px',
                            'width':"1px"
                        });
                    }
                 });
             //   $(this).find("label").remove();
                $(this).find("div").removeClass("cbi-value-field");
                if(id!=""&&title!=""){
                    var tail_id = id.split(/-/g)[3]||"";
                    $tmp = '<tr id="'+tail_id+'_row" class="title-option"><td width="30%" myid='+idchangeArray_for[label]+'>'+title+'</td><td width="70%"><div id ="'+id+'_field"></div></td></tr>';

                    if(tail_id.indexOf("ssid")>-1){
                        tbl_id = "tbl_ssid";
                    }else if(tail_id.indexOf("disabled")>-1){
                        tbl_id = "tbl_wireless_setting";
                    }else if(tail_id.indexOf("bandsteer_en")>-1){
                    	tbl_id = "tbl_bandsteering";
                    }else if(tail_id.indexOf("encryption")>-1){
                        tbl_id = "tbl_security";
                    }else if(tail_id.indexOf("maclist")>-1){
                        tbl_id = "tbl_macfilter";
                    }else if(tail_id.indexOf("adv_search")>-1){
                        tbl_id = "tbl_fastroaming";
                    }else if(tail_id.indexOf("macfilter")>-1){
                        tbl_id = "tbl_macfilter";
                    }else if(tail_id.indexOf("tc_")>-1){
                        tbl_id = "tbl_tc";
                    }else if(tail_id.indexOf("roaming")>-1){
                        tbl_id = "tbl_fastroaming";
                    }else if(tail_id.indexOf("acct_")>-1){
                        if (functionlist.SUPPORT_ALL_ENCRYPTION_HAS_RADIUS_ACCOUNTING  == 1){
                            tbl_id = "tbl_radius_acctounting";
                        }
                    }else{
                        tbl_id = "tbl_security";
                    }
                    $('#'+tbl_id).append($tmp);
                    $('#'+id+'_field').replaceWith($('#'+id));
                    if(functionlist.SUPPORT_Protected_Management_Frames==1){
                        if(tail_id.indexOf("ieee80211w")>-1){
                            $( "#"+tail_id+"_row" ).insertAfter("#cipher_row");
                        }
                    }
                   //deal with wireless setting table
                   if(tail_id.indexOf("hidden")>-1){
                   	$( "#"+tail_id+"_row" ).insertAfter("#disabled_row");
                   }
                   if(tail_id.indexOf("isolate")>-1){
                   	$( "#"+tail_id+"_row" ).insertAfter("#hidden_row");
                   }
                   if(tail_id.indexOf("isolation")>-1){
                   	$( "#"+tail_id+"_row" ).insertAfter("#isolate_row");
                   }
                   if(tail_id.indexOf("l2_isolatior")>-1){
                   	$( "#"+tail_id+"_row" ).insertAfter("#isolation_row");
                   }
                }

            }

        });

    $('table').each(function(){
        if($(this).find('tr').length <2){
            $(this).hide();
        }
<% if uci:get('functionlist','functionlist','SUPPORT_AP_RP_SETUP_WIZARD') == "1" then %>
        $("tr[id='isolation_row']").hide();
<% end %>
    });

<%if ( displayMode == "sta_ap" or displayMode == "sta" or displayMode == "wds_sta" ) then%>
    $('form').change(function(){
<%if displayMode == "sta_ap" then%>
        $('select[name$="encryption"] option[value="wpa"]').remove();
        $('select[name$="encryption"] option[value="wpa2"]').remove();
<% end %>
<%if uci:get("wireless",networkName,"encryption") == 'none' or uci:get("wireless",networkName,"encryption") == 'psk2+ccmp' then%>
    $('select[name$="encryption"] option[value="wpa"]').remove();
    $('select[name$="encryption"] option[value="wep"]').remove();
    $('select[name$="encryption"] option[value="psk"]').remove();
    $('select[name$="cipher"] option[value="tkip"]').remove();
<% end %>
    });
<% end %>
<%if from_wifi_join == "1" then%>
    $('form').change(function(){
        $('select[name$="encryption"] option[value="wpa"]').remove();
        $('select[name$="encryption"] option[value="wpa2"]').remove();
    });
<% end %>
<% if uci:get('functionlist','vendorlist','WEB_GUI_VER') ~= nil and uci:get('functionlist','vendorlist','WEB_GUI_VER') > "1" then %>
	<% if displayMode == "ap" and guestEn == "1" then %>
	var firstFlag=0;
	$('form').change(function(){
		<% if uci:get("wireless",networkName,"encryption") == 'wpa2+ccmp' then %>
		while(firstFlag==0){
			$('select[name$="encryption"]').val("none");
				firstFlag++;
		}
		if($('select[name$="encryption"]').val()=="none"){
			$('#cipher_row, #wpa_group_rekey_row, #auth_server_row, #auth_port_row, #auth_secret_row').hide();
		}
	<% end %>
	$('select[name$="encryption"] option[value="wpa2"]').remove();
    $('select[name$="encryption"] option[value="wpa3-mixed"]').remove();
    $('select[name$="encryption"] option[value="wpa3"]').remove();
	});
	<% end %>
<% end %>

    $('select[name$="encryption"]').change(function(){
        var  fastroaming_available = ((functionlist.SUPPORT_FAST_ROAMING_ONLY_ENTERPRISE  == 1)?($(this).val()=="wpa-mixed"||$(this).val()=="wpa2"):($(this).val()=="wpa2"||$(this).val()=="wpa-mixed"||$(this).val()=="psk2"||$(this).val()=="psk-mixed"));

<% if uci:get('functionlist','functionlist','SUPPORT_FAST_ROAMING_SETTING') == '1' then %>
        if($('#tbl_fastroaming').find('tr').length >1&&fastroaming_available){
            if($('#tbl_fastroaming').find('tr').length >1&&($('select[name$="cipher"]').val()=="ccmp"||$('select[name$="cipher"]').val()=="tkip+ccmp")){
                        $('#tbl_fastroaming').show();
			<% if guestEn == "1" and displayMode=="ap" then %>
				$('#tbl_fastroaming').find("*").attr("disabled",true);
				$('input[type="radio"][name$="fastroamingEnable"][value="0"]').prop("checked",true);
			<% else %>
				$('#tbl_fastroaming').find("*").attr("disabled",false);
			<% end %>
            }
            else{
                $('input[type="radio"][name$="fastroamingEnable"][value="0"]').prop("checked",true);
                $('#tbl_fastroaming').hide();
                //$('#tbl_fastroaming').find("*").attr("disabled",true);
            }
            <% option = networkName:match("wifi1_enjet") or "" %>
            <% if option == "wifi1_enjet" then %>
                $('#tbl_fastroaming').hide();
            <% end %>
        }
        else{
            $('input[type="radio"][name$="fastroamingEnable"][value="0"]').prop("checked",true);
            $('#tbl_fastroaming').hide();
            //$('#tbl_fastroaming').find("*").attr("disabled",true);
        }
<% end %>

    $('select[name$="cipher"]').unbind("change",cipherChange);
    $('select[name$="cipher"]').bind("change",cipherChange);
    });

    var cipherChange = function(){
        $('select[name$="encryption"]').trigger("change");
    }

    bssid.init();
    acl_table.init();

    var isEmpty=false;
    $('input[name^="aclid"]').each(function(){
        $(this).keyup(function(e){
            var thisAclid=$(this);
            //console.log(e.keyCode);
            //console.log($(this).val().length);
            if ($(this).val().length==2)
            {
                if(((e.keyCode>=96)&&(e.keyCode<=105))||((e.keyCode>=65)&&(e.keyCode<=70))) // 0~9 A~F
                    $(this).next().focus();
            }
            if ($(this).val().length==0 && isEmpty)
            {
                if(e.keyCode == 8) // backspace
                    $(this).prev().focus();
            }
            if ($(this).val().length>0)
                isEmpty=false;
            else
                isEmpty=true;
        });
        $(this).click(function(){
           if ($(this).val().length>0)
                isEmpty=false;
            else
                isEmpty=true;
        });
        $(this).focus(function(){
           if ($(this).val().length>0)
                isEmpty=false;
            else
                isEmpty=true;
        });
    });
    var acct_enabled_handler =function(){
    $(':text[name$="acct_server"] ,:text[name$="acct_port"] ,input[name$="acct_secret"] ,:text[name$="acct_interval"]').attr("disabled",$(this).val()==0?true:false);
    $('input:checked[name$="acct_enabled"]').triggerHandler("click");
    };


    var changelayout = function() {
        var max = 230;
        var eventTrigger = $(this).attr("name").indexOf("macfilter")>-1?true:false;
        // if($(this).attr("name").indexOf("input_type")>-1||$(this).attr("name").indexOf("key_length")>-1){
        //     $(this).change(wep_maxlength_func);
        // }
        $(this).closest("tr").nextAll("tr").each(function(){
            if($(this).find("td:empty").length>0||eventTrigger){
              if($(this).attr("keep")!="keep"){
                 $(this).remove();
              }

            }

        });

        /*refresh element*/
        $('#cbi_set div').each(function(){
        var type = this.type ? this.type : this.nodeName.toLowerCase();
        var className = $(this).attr("class")||"";
            if(className.indexOf("cbi-value")>-1){
                var id = $(this).attr("id")||"";
                var tail_id = id.split(/-/g)[3]||"";

                    if(tail_id.indexOf("ssid")>-1){
                        tbl_id = "tbl_ssid";
                    }else if(tail_id.indexOf("disabled")>-1){        
                        tbl_id = "tbl_wireless_setting";
                    }else if(tail_id.indexOf("bandsteer_en")>-1){
                        tbl_id = "tbl_bandsteering";
                    }else if(tail_id.indexOf("encryption")>-1){
                        tbl_id = "tbl_security";
                    }else if(tail_id.indexOf("maclist")>-1){
                        tbl_id = "tbl_macfilter";
                    }else if(tail_id.indexOf("adv_search")>-1){
                        tbl_id = "tbl_fastroaming";
                    }else if(tail_id.indexOf("macfilter")>-1){
                        tbl_id = "tbl_macfilter";
                    }else if(tail_id.indexOf("tc_")>-1){
                        tbl_id = "tbl_tc";
                    }else if(tail_id.indexOf("roaming")>-1){
                        tbl_id = "tbl_fastroaming";
                    }else if(tail_id.indexOf("acct_")>-1){
                        if (functionlist.SUPPORT_ALL_ENCRYPTION_HAS_RADIUS_ACCOUNTING  == 1){
                            tbl_id = "tbl_radius_acctounting";
                        }
                    }else{
                        tbl_id = "tbl_security";
                    }

                var title = $(this).find("label").first().text()||"";
                var label = $(this).find("label").attr("for")||""
                 $(this).find("label").each(function(){
                    if($(this).attr("for")){
                    if($(this).attr("for").indexOf("adv_search1")==-1 && $(this).attr("for").indexOf("enabled1")==-1){
                        $(this).css({
                            'color': '#fff',
                            'font-size': '1px',
                            'height': '1px',
                            'float':'left',
                            'display':'block',
                            'margin-right':'1px',
                            'width':"1px"
                        });
                    }
                    }
                 });
                $(this).find("div").removeClass("cbi-value-field");

                $(this).find('select').change(changelayout);
                // $(this).find('select').each(function(){$(this).unbind('change',changelayout);$(this).bind('change',changelayout);});

                if(id!=""&&title!=""){
                    $tmp = '<tr id="'+tail_id+'_row" class="title-option"><td width="30%" myid='+idchangeArray_for[label]+'>'+title+'</td><td width="70%"><div id ="'+id+'_field"></div></td></tr>';
                    $('#'+tbl_id).append($tmp);
                    $('#'+id+'_field').replaceWith($('#'+id));
                    if(functionlist.SUPPORT_Protected_Management_Frames==1){
                        if(tail_id.indexOf("ieee80211w")>-1){
                            $( "#"+tail_id+"_row" ).insertAfter("#cipher_row");
                        }
                    }
                }

                if(tbl_id == "tbl_macfilter"){
                    $('#'+id).closest("tr").hide();
                    if(id.indexOf("allowmaclist")>-1){
                        acl_table.drawTable("allow");
                    }
                     if(id.indexOf("denymaclist")>-1){
                        acl_table.drawTable("deny");
                    }
                }

            }
        });

    };

    var wep_maxlength_func = function(){
        var type = $('select[name$="input_type"]').val();
        var length = parseInt($('select[name$="key_length"]').val());
         length = (type == "hex")? length : length/2;

        for(var i=1;i<=4;i=i+1){
            $('input:enabled[name$=".key'+i+'"]').attr('maxlength',length);
        }

    };

    $('select[name$="encryption"]').change(function(){
        if((functionlist.SUPPORT_ALL_ENCRYPTION_HAS_RADIUS_ACCOUNTING  == 1) ||$(this).val()=="wpa"||$(this).val()=="wpa2"||$(this).val()=="wpa-mixed"){
             $('input[name$="acct_enabled"]').change(acct_enabled_handler);
             $('input[name$="acct_enabled"]').triggerHandler("change");
        }
        $('div .cbi-value').each(function()
        {
            $(this).css("margin-bottom", "0");
        });
        $('.cbi-value-title').each(function()
        {
            $(this).css("line-height", "0");
        });

        if($(this).val()=="wep"){
            $('select[name$="key_length"]').change(wep_maxlength_func);
            $('select[name$="input_type"]').change(wep_maxlength_func);
            $('select[name$="key_length"]').triggerHandler("change");
            $('select[name$="input_type"]').triggerHandler("change");
        }
    });
     $( 'select[name$="encryption"], select[name$="macfilter"]').change(changelayout);
     $( 'input:radio[name$="wifi0.fastroamingEnable"],input:radio[name$="wifi1.fastroamingEnable"] ' ).click(changelayout);

        $("form").submit(function() {
	    <% if uci:get('functionlist','functionlist','SUPPORT_COMBINED_SSID_SETTING') == '1' then %>
            $('#displayMode').val("<%=luci.util.trim(displayMode)%>");       
          <% if displayMode == "ap" then %>  
            <% if wifi0_opmode == "ap" then %>
            if($('input[name^="cbid.wireless.wifi0_ssid_"][name$="disabled"]').is(":checked")){
		         $('#wifi0Disabled_tmp').val("0");
		     }else{
		         $('#wifi0Disabled_tmp').val("1");
		     }
            <% else %>
            	$('#wifi0Disabled_tmp').val("");
            <% end %>
            
             <% if uci:get('functionlist','functionlist','SUPPORT_WLAN5G') == '1' then %>
		        <% if wifi1_opmode == "ap" then %>	     
		           if($('input[name^="cbid.wireless.wifi1_ssid_"][name$="disabled"]').is(":checked")){
		               $('#wifi1Disabled_tmp').val("0");
		           }else if($('input[name^="cbid.wireless.wifi1_enjet"][name$="disabled"]').is(":checked")){
                       $('#wifi1Disabled_tmp').val("0");
                   }else{
		               $('#wifi1Disabled_tmp').val("1");
		           }
		        <% else %>
			      $('#wifi1Disabled_tmp').val("");
		        <% end %>       
            <% end %>

            <% if uci:get('functionlist','functionlist','SUPPORT_WLAN5G_2') == '1' then %>
		      <% if wifi2_opmode == "ap" then %>     
		           if($('input[name^="cbid.wireless.wifi2_ssid_"][name$="disabled"]').is(":checked")){
		               $('#wifi2Disabled_tmp').val("0");
		           }else{
		               $('#wifi2Disabled_tmp').val("1");
		           }
		      <% else %>
			      $('#wifi2Disabled_tmp').val("");
		      <% end %>       
            <% end %>
	    <% end %>	
	<% end %>
            $('input:text[name$="maclist"]').each(function(){
                $(this).attr("name",$(this).attr("id"));
            });


            $('input').each(function(){
                var type = $(this).attr("type");
                if(type=="checkbox" && !this.checked && !$(this).attr("disabled")){

                    $(this).prev("input:hidden").attr("name",$(this).attr("name"));
                    $(this).prev("input:hidden").val($(this).val()=='0'?'1':'0');

                }

            });

            var encr = $('select[name$="encryption"]').val();
            var cipher = $('select[name$="cipher"]').val();
            var encr_name = $('select[name$="encryption"]').attr("name");

            if(encr=="wep"){
                var wep_str = $('select[name$="encryption"]').val()+"-"+$('select[name$="auth_type"]').val();
                $('select[name$="auth_type"]').attr("disabled",true);
                $('select[name$="input_type"]').attr("disabled",true);
                $('select[name$="key_length"]').attr("disabled",true);


                for(var i=1;i<=4;i=i+1){

                   var key_value =  $('input[name$=\"key'+i+'\"]').val().replace(/^([s][:])/,"");

                   if(key_value.length == 5 || key_value.length == 13 || key_value.length == 16){
                    key_value = "s:"+key_value;
                   }
                   $('input[name$=\"key'+i+'\"]').val(key_value);
                }

                $(".encryremove").remove();
                $("form").append('<input type="hidden" class="encryremove" name="'+encr_name+'" value="'+wep_str+'">');
                $('select[name$="encryption"]').attr("disabled",true);

            }

            if(encr!="undefined"&&encr!=""&&(cipher=="tkip"||cipher=="ccmp"||cipher=="tkip+ccmp")){
                    encr = encr+"+"+cipher;
                $(".encryremove").remove();
                $("form").append('<input type="hidden" class="encryremove" name="'+encr_name+'" value="'+encr+'">');
                $('select[name$="cipher"]').attr("disabled",true);
                $('select[name$="encryption"]').attr("disabled",true);
            }
            else if (encr!="undefined"&&encr!=""&&(encr!="wep")){
                $(".encryremove").remove();
                $("form").append('<input type="hidden" class="encryremove" name="'+encr_name+'" value="'+encr+'">');
                $('select[name$="encryption"]').attr("disabled",true);
            }

            bssid.save();
            acl_table.save();
		
		var vlan_id = $('input:text[name$="vlan_id"]').val();
		$('#vlan_id').val(vlan_id);

		<% if displayMode == "ap" and uci:get('functionlist','functionlist','SUPPORT_BANDSTEER_SELECT_LIST') == '1' then %> 
		if($("select[name$='bandsteer']").val()!="0"){
			$("input[name$='<%=networkName%>.bandsteerrssi']").val(parseInt($("input[name$='<%=networkName%>.bandsteerrssi']").val(),10)+95);
		}
		$(':input:visible:enabled[name$="bandsteer_en"]').val(($('input[name$="bandsteer_en"][value=1]').is(":checked"))?$('select[name$="bandsteer"]').val():"0");
		<% end %>		
        });
		$(':radio ,:checkbox').each(function()
		{
			$(this).css({
				'width':"24px",
				"border":"0"
			});
		});
		$(':button').each(function()
		{
			if($(this)[0].id != "encryption_submit")
			{
				$(this).css({
					'height':'30px',
					'width':"100px"
				});
			}
		});
        $('select[name$="encryption"]').triggerHandler("change");
         $('select[name$="macfilter"]').triggerHandler("change");
         $('select[name$="macfilter"]').triggerHandler("change");
        $('input[name$="tc_enabled"]').click(function(){
            $('input[name$="limit"]').attr("disabled",$(this).val()==0?true:false);
            $('input[name$="upperuser"]').attr("disabled",$(this).val()==0?true:false);
            $('input[name$="downperuser"]').attr("disabled",$(this).val()==0?true:false);
            <% if sntcd_unit == "Kbps" then %>
                $('select[name$="tc_down_unit"]').attr("disabled",$(this).val()==0?true:false);
                $('select[name$="tc_up_unit"]').attr("disabled",$(this).val()==0?true:false);
            <% end %>
        });

        $('input[name$="acct_enabled"]').click(function(){
        	$('input[name$="acct_server"]').attr("disabled",$(this).val()==0?true:false);
        	$('input[name$="acct_port"]').attr("disabled",$(this).val()==0?true:false);
        	$('input[name$="acct_secret"]').attr("disabled",$(this).val()==0?true:false);
        	$('input[name$="acct_interval"]').attr("disabled",$(this).val()==0?true:false);
        });

        $('input:checked[name$="acct_enabled"]').triggerHandler("click");
        $('input:checked[name$="tc_enabled"]').triggerHandler("click");
if(functionlist.SUPPORT_ALL_ENCRYPTION_HAS_RADIUS_ACCOUNTING  == 1){
        $('input[name$="nasid_enable_gui"]').click(function(){
            $('input[name$="nasid_enable"]').val(this.checked?"1":"0");
            $('input[name$="nasid"]').attr("disabled",!this.checked?true:false);
        }).triggerHandler('click');
         $('input[name$="nasport_enable_gui"]').click(function(){
            $('input[name$="nasport_enable"]').val(this.checked?"1":"0");
            $('input[name$="nasport"]').attr("disabled",!this.checked?true:false);
        }).triggerHandler('click');
}
if(functionlist.SUPPORT_NAS_IP_ADDR  == 1){
	$('input[name$="nasip_enable_gui"]').click(function(){
        $('input[name$="nasip_enable"]').val(this.checked?"1":"0");
        $('input[name$="nasip"]').attr("disabled",!this.checked?true:false);
    }).triggerHandler('click');
}
    });

    function getEncryptionText(){
        var encr_value = $('select[name$="encryption"]').val();
        if(encr_value=="wep"){
            var auth_type = $('select[name$="auth_type"]').val();
            return "wep-"+auth_type;
        }
        else if(encr_value == "none"){
            return "none";
        }
        else{
             return $(':hidden[name$="encryption"]').val();
        }

    };

    
	<% if uci:get('functionlist','functionlist','SUPPORT_ETHERNET_BONDING') == '1' then %>
		var mut_status={}
		function get_lacp_mut_status(){
        	$.ajax({
            		url: "<%=luci.dispatcher.build_url('admin/status/get_lacp_mut_status')%>",
            		data:"get_info=lacp",
            	success: function(re) {
                	mut_status = re;
            	}
        	});
       		}
	<% end %>
    
    function get2GRadioEnable(){
    	var radio2G = $('#wifi0Disabled_tmp').val();
    	return radio2G;
    }

    function get5GRadioEnable(){
    	var radio5G = $('#wifi1Disabled_tmp').val();
    	return radio5G;
    }

    function get52GRadioEnable(){
    	var radio52G = $('#wifi2Disabled_tmp').val();
    	return radio52G;
    }

    function getVlanID(){
    	var vlan_id = $('#vlan_id').val();
    	return vlan_id;
    }

    function getVlanIDEnable(){
        var isolation = $('#vlan_isolation_enable').val();

        return isolation;
    }

    function getDisplayMode(){
    	var disMod = $('#displayMode').val();
    	return disMod;
    }
    
    function get_mgmtPassphrase(){
        var mgmtPassphrase = $('input:enabled[name$="_mgmt.key"]').val();
        return mgmtPassphrase;
    }
    
    function submitClose()
    {
        if(is_form_submit=="1"){
            <% if uci:get('functionlist','functionlist','SUPPORT_AP_RP_SETUP_WIZARD') == "1" and uci:get("system","firmware","first_login") == "1" then %>
                ajax_setCsrf();
                location.href='<%=luci.dispatcher.build_url("admin", "uci", "saveapply")%>'
                //window.opener.redirReboot();
		    <% else %>
                window.opener.updateChanges();
                window.opener.updateOption('<%=networkName%>',"encryption",getEncryptionText());
                window.opener.updateOption('<%=networkName%>',"mgmtKey",get_mgmtPassphrase());
                <%if opmode == "sta_ap" and device ~= "" then%>
                window.opener.updateOption('<%=ntm:get_wifinet_index(device,opmode,"1")["sid"]%>', "encryption", getEncryptionText());
                <% if uci:get('functionlist','functionlist','SUPPORT_AP_RP_SETUP_WIZARD') == "1" then %>
                    window.opener.updateOption('wifix_ssid_1',"encryption",getEncryptionText());
                <%end%>
                <%end%>

                <% if uci:get('functionlist','functionlist','SUPPORT_COMBINED_SSID_SETTING') == "1" then %>
                    window.opener.updateOption('<%=networkName%>',"isolation",getVlanIDEnable());
                    <% if displayMode == "wds_ap" then %>
                        window.opener.updateOption('<%=networkName%>',"vlanid_wds",getVlanID());
                    <% end %>
                    <% if displayMode == "ap" then %>
                        window.opener.updateOption('<%=networkName%>',"vlanid_ap",getVlanID());
                        window.opener.updateOption('<%=networkName%>',"encryptionCOMBINED",getEncryptionText());
                        <% if uci:get('functionlist','functionlist','SUPPORT_WLAN24G') == "1" then %>
                            window.opener.updateOption('<%=networkName%>',"dis2G",get2GRadioEnable());
                        <% end %>
                        <% if uci:get('functionlist','functionlist','SUPPORT_WLAN5G') == "1" then %>
                            window.opener.updateOption('<%=networkName%>',"dis5G",get5GRadioEnable());
                        <% end %>
                        <% if uci:get('functionlist','functionlist','SUPPORT_WLAN5G_2') == "1" then %>
                            window.opener.updateOption('<%=networkName%>',"dis52G",get52GRadioEnable());
                        <% end %>
                    <% end %>
                <% end %>

                if($('input:enabled[name$=".ssid"]').length>0){
                    window.opener.updateOption('<%=networkName%>',"ssid",$('input:enabled[name$=".ssid"]').val());
                    <%if opmode == "sta_ap" and device ~= "" then%>
                    window.opener.updateOption('<%=ntm:get_wifinet_index(device,opmode,"1")["sid"]%>', "ssid", $('input:enabled[name$=".ssid"]').val());
                    <% if uci:get('functionlist','functionlist','SUPPORT_AP_RP_SETUP_WIZARD') == "1" then %>
                        window.opener.updateOption('wifix_ssid_1',"ssid",$('input:enabled[name$=".ssid"]').val());
                    <%end%>
                    <%end%>
                }
            <% end %>
            window.close();
        }
	    window.close();
    }
    window.addEventListener("pagehide",submitClose,false)


<%
local wnet = ntm:get_wifinet(netId)
local tc_enabled=uci:get("wireless",wnet.sid,"tc_enabled") or "0"
local downperuser=uci:get("wireless",wnet.sid,"tc_downlimit") or "0"
local upperuser=uci:get("wireless",wnet.sid,"tc_uplimit") or "0"
%>

<% if support_l2_whitelist == "1" then %>
$(function() {
    <%
    maclist_iface = wnet.sid
    maclist_iface,j = string.gsub(maclist_iface,"wifi0","wifi")
    maclist_iface,j = string.gsub(maclist_iface,"wifi1","wifi")
    maclist_table=uci:get('l2_isolation',maclist_iface,'mac_list') or {}
    %>
    //whitelist="<%=uci:get('l2_isolation',maclist_iface,'mac_list')%>";
    whitelist_num="<%=#maclist_table%>"

    $('#l2_isolatior_row').after(
        '<tr id="l2_whitelist_row1" name="l2_whitelist_row1" class="title-option-no-border"> \
           <td width="30%">&nbsp&nbsp&nbsp<%:Whitelist%> 1</td>\
           <td width="70%"><input name="l2_whitelist_1" id="l2_whitelist_1" maxlength="17" value="<%=maclist_table[1]%>"></td>\
        </tr>\
        <tr id="l2_whitelist_row2" name="l2_whitelist_row2" class="title-option-no-border"> \
           <td width="30%">&nbsp&nbsp&nbsp<%:Whitelist%> 2</td>\
           <td width="70%"><input name="l2_whitelist_2" id="l2_whitelist_2" maxlength="17" value="<%=maclist_table[2]%>"></td>\
        </tr>\
        <tr id="l2_whitelist_row3" name="l2_whitelist_row3" class="title-option"> \
           <td width="30%">&nbsp&nbsp&nbsp<%:Whitelist%> 3</td>\
           <td width="70%"><input name="l2_whitelist_3" id="l2_whitelist_3" maxlength="17" value="<%=maclist_table[3]%>"></td>\
        </tr>'
    );
    $('#l2_isolatior_row').removeClass("title-option").addClass("title-option-no-border");
});
<% end %>

// Yolin: add upperuser and downperuser
$(function() {
<% if sntcd_unit == "Kbps" then %>
    <% tc_downrateunit = uci:get('wireless',wnet.sid,'tc_downrateunit') or "Mbps" %>
    $('input[name$=tc_downlimit]').after(
        '<select class="tc_unit_select" id="tc_down_unit" name="tc_down_unit" size="1"> \
            <option id="tc_down_unit_Kbps" value="Kbps" <% if tc_downrateunit == "Kbps" then%> selected="selected" <% end %> ><%:Kbps%></option> \
            <option id="tc_down_unit_Mbps" value="Mbps" <% if tc_downrateunit == "Mbps" then%> selected="selected" <% end %> ><%:Mbps%></option> \
        </select> \
        <input value="1" id="downperuser" name="downperuser" type="checkbox" <%if downperuser ~= "0" then %>checked<% end %>  /> <%:Per User%> \
        <br><div id="tc_downlimit_desc" name="tc_downlimit_desc" class="cbi-value-description"></div>'
        );
<% else %>
    $('input[name$=tc_downlimit]').after('<input value="1" id="downperuser" name="downperuser" type="checkbox" <%if downperuser ~= "0" then %>checked<% end %>  /> <%:Per User%>');
<% end %>
<% if uci:get('functionlist','functionlist','SUPPORT_AP_RP_SETUP_WIZARD') == "1" and uci:get("system","firmware","first_login") == "1" then %>   
    document.getElementById('menu_right_style').style.display = "none";
<% end %>
});
    switch(netId.split('.')[0]){
        case 'wifi0':
            wifiRadio = "wifi24"; break;
        case 'wifi1':
            wifiRadio = "wifi5"; break;
        case 'wifi2':
            wifiRadio = "wifi5_1"; break;
    }

<%
wifi_dev=string.sub(networkName,1,5)
%>

var idchangeArray ={
"cbid.wireless.<%=string.gsub(networkName,wifi_dev,"wifi0")%>.disabled":"wifi24_radio_enable",
"cbid.wireless.<%=string.gsub(networkName,wifi_dev,"wifi1")%>.disabled":"wifi5_radio_enable",
"cbid.wireless.<%=string.gsub(networkName,wifi_dev,"wifi2")%>.disabled":"wifi5_1_radio_enable",
"ssid":"wifi_ssid",
"vlan_id":"wifi_vlan_id",
"cbid.wireless.<%=wnet.sid%>.hidden1_enable":"wifi_hidden_enable",
"cbid.wireless.<%=wnet.sid%>.hidden1_disable":"wifi_hidden_disable",
"cbid.wireless.<%=wnet.sid%>.isolate1_enable":"wifi_client_isolation_enable",
"cbid.wireless.<%=wnet.sid%>.isolate1_disable":"wifi_client_isolation_disable",
"cbid.wireless.<%=wnet.sid%>.isolation1_enable":"wifi_vlan_isolation_enable",
"cbid.wireless.<%=wnet.sid%>.isolation1_disable":"wifi_vlan_isolation_disable",
"cbid.wireless.<%=wnet.sid%>.l2_isolatior1_enable":"wifi_l2_isolation_enable",
"cbid.wireless.<%=wnet.sid%>.l2_isolatior1_disable":"wifi_l2_isolation_disable",
"cbid.wireless.<%=wnet.sid%>.bandsteer_en1_enable":"wifi_bandsteer_en_enable",
"cbid.wireless.<%=wnet.sid%>.bandsteer_en1_disable":"wifi_bandsteer_en_disable",
"cbid.wireless.<%=wnet.sid%>.suite_b1_enable":"wifi_suite_b_enable",
"cbid.wireless.<%=wnet.sid%>.suite_b1_disable":"wifi_suite_b_disable",
"cbid.wireless.<%=wnet.sid%>.bandsteerrssi":"wifi_bandsteerrssi",
"cbid.wireless.<%=wnet.sid%>.bandsteerpersent":"wifi_bandsteerpersent",
"cbid.wireless.<%=wnet.sid%>.encryption":"wifi_securitymode",
"cbid.wireless.<%=wnet.sid%>.macfilter":"wifi_macfilter",
"aclid0":"wifi_aclmac1",
"aclid1":"wifi_aclmac2",
"aclid2":"wifi_aclmac3",
"aclid3":"wifi_aclmac4",
"aclid4":"wifi_aclmac5",
"aclid5":"wifi_aclmac6",
"acl_btn":"wifi_aclmac_add",
"cbid.wireless.<%=wnet.sid%>.tc_enabled1_enable":"wifi_tc_enable",
"cbid.wireless.<%=wnet.sid%>.tc_enabled1_disable":"wifi_tc_disable",
"cbid.wireless.<%=wnet.sid%>.tc_downlimit":"wifi_tc_downlimit",
"downperuser":"wifi_tc_downlimit_peruser",
"cbid.wireless.<%=wnet.sid%>.tc_uplimit":"wifi_tc_uplimit",
"upperuser":"wifi_tc_uplimit_peruser",
"encryption_submit":"button_save",
"cbid.wireless.<%=wnet.sid%>.auth_type":"wifi_auth_type",
"cbid.wireless.<%=wnet.sid%>.input_type":"wifi_input_type",
"cbid.wireless.<%=wnet.sid%>.key_length":"wifi_key_length",
"cbid.wireless.<%=wnet.sid%>.key_id":"wifi_key_id",
"cbid.wireless.<%=wnet.sid%>.key1":"wifi_key1",
"cbid.wireless.<%=wnet.sid%>.key2":"wifi_key2",
"cbid.wireless.<%=wnet.sid%>.key3":"wifi_key3",
"cbid.wireless.<%=wnet.sid%>.key4":"wifi_key4",
"cbid.wireless.<%=wnet.sid%>.cipher":"wifi_encrypt",
"cbid.wireless.<%=wnet.sid%>.key":"wifi_key",
"cbid.wireless.<%=wnet.sid%>.wpa_group_rekey":"wifi_wpa_group_rekey",
"cbid.wireless.<%=wnet.sid%>.psk2_password":"wifi_psk2_password",
"cbid.wireless.<%=wnet.sid%>.sae_password":"wifi_sae_password",
"cbid.wireless.wifi0.fastroamingEnable1_enable":"wifi_fastroaming_enable",
"cbid.wireless.wifi0.fastroamingEnable1_disable":"wifi_fastroaming_disable",
"cbid.wireless.<%=wnet.sid%>.auth_server":"wifi_auth_server",
"cbid.wireless.<%=wnet.sid%>.auth_port":"wifi_auth_port",
"cbid.wireless.<%=wnet.sid%>.auth_secret":"wifi_auth_secret",
"cbid.wireless.<%=wnet.sid%>.acct_enabled1_enable":"wifi_acct_enabled",
"cbid.wireless.<%=wnet.sid%>.acct_enabled1_disable":"wifi_acct_disabled",
"cbid.wireless.<%=wnet.sid%>.acct_server":"wifi_acct_server",
"cbid.wireless.<%=wnet.sid%>.acct_port":"wifi_acct_port",
"cbid.wireless.<%=wnet.sid%>.acct_secret":"wifi_acct_secret",
"cbid.wireless.<%=wnet.sid%>.acct_interval":"wifi_acct_interval",
"cbid.wireless.<%=wnet.sid%>.preferbssid_enable":"wifi_preferbssid_enable",
"cbid.wireless.<%=wnet.sid%>.bssid1":"wifi_preferbssid_mac1",
"cbid.wireless.<%=wnet.sid%>.bssid2":"wifi_preferbssid_mac2",
"cbid.wireless.<%=wnet.sid%>.bssid3":"wifi_preferbssid_mac3",
"cbid.wireless.<%=wnet.sid%>.bssid4":"wifi_preferbssid_mac4",
"cbid.wireless.<%=wnet.sid%>.bssid5":"wifi_preferbssid_mac5",
"cbid.wireless.<%=wnet.sid%>.bssid6":"wifi_preferbssid_mac6",
"cbid.wireless.<%=wnet.sid%>.ssid":"wifi_ssid",
"cbid.wireless.<%=wnet.sid%>.eap_type":"wifi_eap_type",
"cbid.wireless.<%=wnet.sid%>.auth":"wifi_eap_auth",
"cbid.wireless.<%=wnet.sid%>.identity":"wifi_identity",
"cbid.wireless.<%=wnet.sid%>.password":"wifi_password",
"nasid_enable_gui":"wifi_NASID_enable",
"nasport_enable_gui":"wifi_NASPORT_enable",
"nasip_enable_gui":"wifi_NASIP_enable",
"cbid.wireless.<%=wnet.sid%>.nasid":"wifi_NASID",
"cbid.wireless.<%=wnet.sid%>.nasport":"wifi_NASPORT",
"cbid.wireless.<%=wnet.sid%>.nasip":"wifi_NASIP"
};

var idchangeArray_for = {
    "cbid.wireless.<%=wnet.sid%>.macfilter":"title_wifi_macfilter",
    "cbid.wireless.<%=wnet.sid%>.bssid":"title_wifi_preferbssid",
    "cbid.wireless.<%=wnet.sid%>.ssid":"title_wifi_ssid",
    "cbid.wireless.<%=wnet.sid%>.encryption":"title_wifi_securitymode",
    "cbid.wireless.<%=wnet.sid%>.cipher":"title_wifi_encrypt",
    "cbid.wireless.<%=wnet.sid%>.key":"title_wifi_key",
    "cbid.wireless.<%=wnet.sid%>.eap_type":"title_wifi_eap_type",
    "cbid.wireless.<%=wnet.sid%>.auth":"title_wifi_eap_auth",
    "cbid.wireless.<%=wnet.sid%>.identity":"title_wifi_identity",
    "cbid.wireless.<%=wnet.sid%>.password":"title_wifi_password",
    "cbid.wireless.<%=wnet.sid%>.auth_type":"title_wifi_auth_type",
    "cbid.wireless.<%=wnet.sid%>.input_type":"title_wifi_input_type",
    "cbid.wireless.<%=wnet.sid%>.key_length":"title_wifi_key_length",
    "cbid.wireless.<%=wnet.sid%>.key_id":"title_wifi_key_id",
    "cbid.wireless.<%=wnet.sid%>.key1":"title_wifi_key1",
    "cbid.wireless.<%=wnet.sid%>.key2":"title_wifi_key2",
    "cbid.wireless.<%=wnet.sid%>.key3":"title_wifi_key3",
    "cbid.wireless.<%=wnet.sid%>.key4":"title_wifi_key4",
    "cbid.wireless.<%=wnet.sid%>.tc_enabled":"title_wifi_tc",
    "cbid.wireless.<%=wnet.sid%>.tc_downlimit":"title_wifi_tc_downlimit",
    "cbid.wireless.<%=wnet.sid%>.tc_uplimit":"title_wifi_tc_uplimit",
    "cbid.wireless.<%=wnet.sid%>.wpa_group_rekey":"title_wifi_wpa_group_rekey",
    "cbid.wireless.<%=wnet.sid%>.psk2_password":"title_wifi_psk2_password",
    "cbid.wireless.<%=wnet.sid%>.sae_password":"title_wifi_sae_password",
    "cbid.wireless.<%=wnet.sid%>.auth_server":"title_wifi_auth_server",
    "cbid.wireless.<%=wnet.sid%>.auth_secret":"title_wifi_auth_secret",
    "cbid.wireless.<%=wnet.sid%>.acct_enabled":"title_wifi_acct",
    "cbid.wireless.<%=wnet.sid%>.acct_port":"title_wifi_acct_port",
    "cbid.wireless.<%=wnet.sid%>.auth_port":"title_wifi_auth_port",
    "cbid.wireless.<%=wnet.sid%>.acct_server":"title_wifi_acct_server",
    "cbid.wireless.<%=wnet.sid%>.acct_secret":"title_wifi_acct_secret",
    "cbid.wireless.<%=wnet.sid%>.acct_interval":"title_wifi_acct_interval",
    "cbid.wireless.wifi0.fastroamingEnable":"title_wifi_fastroaming",
    "cbid.wireless.wifi1.fastroamingEnable":"title_wifi_fastroaming"
}
<% if uci:get('functionlist','functionlist','SUPPORT_MYID') == '1' then %>
for(i=0;i< <%=MAX_WLAN_MAC_FILTER_NUMBER%>;i++)
{
    if(wifiRadio=="wifi24")
        idchangeArray["allow_"+i+""]="wifi24_mac_delete"+(i+1)+""
    else
        idchangeArray["allow_"+i+""]="wifi5_mac_delete"+(i+1)+""
};

var changeMyId = (function(){
    SetMyId = function(){
         //---------Add myid attribute for test-----------------------
        $('form :input').each(function(){
            var orgId = ($(this).attr('id')||$(this).attr('name')||$(this).attr('for')||"");

            if($(this).attr('type')=="radio"){
                orgId = ($(this).val()=="0"||$(this).val()=="") ? orgId+"_disable" : orgId+"_enable";
                $(this).attr("myid",idchangeArray[orgId]);
            }
            else{
                $(this).attr("myid",idchangeArray[orgId]);
            }
        });
    },

    SecurityChange = function(){
        $('select[name$="encryption"]').change(function(){
            SetMyId();
        })
    },

    macfilterChange =function(){
        $('input[name="acl_btn"]').click(function(){
            SetMyId();
            $('button[id^="allow_"]').click(function(){
            SetMyId();
            });
        });

    },

    changeMyId =function(){
        SetMyId();
        SecurityChange();
        macfilterChange();
    }

    return{
        changeMyId:changeMyId
    };

}());
<% end %>
$(function() {
<% if sntcd_unit == "Kbps" then %>
    <% tc_uprateunit = uci:get('wireless',wnet.sid,'tc_uprateunit') or "Mbps" %>
    $('input[name$=tc_uplimit]').after(
        '<select class="tc_unit_select" id="tc_up_unit" name="tc_up_unit" size="1"> \
            <option id="tc_up_unit_Kbps" value="Kbps" <% if tc_uprateunit == "Kbps" then%> selected="selected" <% end %> ><%:Kbps%></option> \
            <option id="tc_up_unit_Mbps" value="Mbps" <% if tc_uprateunit == "Mbps" then%> selected="selected" <% end %> ><%:Mbps%></option> \
        </select> \
        <input value="1" id="upperuser" name="upperuser" type="checkbox" <%if upperuser ~= "0" then %>checked<% end %> /> <%:Per User%> \
        <br><div id="tc_uplimit_desc" name="tc_uplimit_desc" class="cbi-value-description"></div>'
        );
<% else %>
    $('input[name$=tc_uplimit]').after('<input value="1" id="upperuser" name="upperuser" type="checkbox" <%if upperuser ~= "0" then %>checked<% end %> /> <%:Per User%>');
<% end %>

<% if uci:get('functionlist','functionlist','SUPPORT_BANDSTEER_SELECT_LIST') ~= "1" then %>
	$('#tbl_bandsteering').css("display","none");
<% end %>

<% if uci:get('functionlist','functionlist','SUPPORT_MYID') == '1' then %>
    changeMyId.changeMyId();
<% end %>
});

$('input[name$="downperuser"]').ready(function(){
    $('input[name$="downperuser"]').attr("disabled", <%=(tc_enabled or 0)%>==0?true:false);
});
<% if sntcd_unit == "Kbps" then %>
$('input[name$="tc_down_unit"]').ready(function(){
    $('select[name$="tc_down_unit"]').attr("disabled", <%=(tc_enabled or 0)%>==0?true:false);
    $('select[name$="tc_down_unit"]').change(function(){
        if ( $(this).val() == "Kbps" )
        {
            desc = getById('tc_downlimit_desc');
            if(desc)
            {
                desc.innerHTML = "Kbps (1-999999)";
            }
        }
        else
        {
            desc = getById('tc_downlimit_desc');
            if(desc)
            {
                desc.innerHTML = "Mbps (1-999)";
            }
        }
        $('input[name$=tc_downlimit]').attr("maxlength",$(this).val() == "Kbps"? 6:3);
    });
    $('select[name$="tc_down_unit"]').triggerHandler("change");
});
<% end %>
$('input[name$="upperuser"]').ready(function(){
    $('input[name$="upperuser"]').attr("disabled", <%=(tc_enabled or 0)%>==0?true:false);
});
<% if sntcd_unit == "Kbps" then %>
$('input[name$="tc_up_unit"]').ready(function(){
    $('select[name$="tc_up_unit"]').attr("disabled", <%=(tc_enabled or 0)%>==0?true:false);
    $('select[name$="tc_up_unit"]').change(function(){
        if ( $(this).val() == "Kbps" )
        {
            desc = getById('tc_uplimit_desc');
            if(desc)
            {
                desc.innerHTML = "Kbps (1-999999)";
            }
        }
        else
        {
            desc = getById('tc_uplimit_desc');
            if(desc)
            {
                desc.innerHTML = "Mbps (1-999)";
            }
        }
        $('input[name$=tc_uplimit]').attr("maxlength",$(this).val() == "Kbps"? 6:3);
    });
    $('select[name$="tc_up_unit"]').triggerHandler("change");
});
<% end %>
 // $(function() {console.log(functionlist);console.log(vendorlist)});

//info icon
$('input[name$="isolate"]').ready(function(){
	$('tr[id$="isolate_row"]').children(":first").append($('#Client_Isolation_info'));
	//$('tr[id$="isolate_row"]').children(":first").append('<img class="popper" data-popbox="Client_Isolation_info" src="<%=media%>/pictures/icon_info_blue.png">');
});

$('input[name$="isolation"]').ready(function(){
	$('tr[id$="isolation_row"]').children(":first").append($('#VLAN_Isolation_info'));
	//$('tr[id$="isolation_row"]').children(":first").append('<img class="popper" data-popbox="VLAN_Isolation_info" src="<%=media%>/pictures/icon_info_blue.png">');
});


function checkAllDisable(){
    var allDisabled = true;
    <% if displayMode == "ap" then %>
    $('input:visible[name$="disabled"][type="checkbox"]').each(function(){                     
	    if(this.checked){ allDisabled = false; }                          
    });
    <% else %>
    	allDisabled = false;
    <% end %>
    return allDisabled;  //if true then grey-out all option
}

//for bandsteering
function checkAllEnable(){
	var allEnabled = true;

	if( !$('[name^="cbid.wireless.wifi0"][name$="disabled"]').is(":checked") ){
		allEnabled = false;
	}

	if( !$('[name^="cbid.wireless.wifi1"][name$="disabled"]').is(":checked")
<% if uci:get('functionlist','functionlist','SUPPORT_WLAN5G_2') == "1" then %>
		&& !$('[name^="cbid.wireless.wifi2"][name$="disabled"]').is(":checked")
<% end %>
	){
		allEnabled = false;
	}

	return allEnabled;
}

function greyEncrOption(){
	if( $('select[name$=".cipher"]').find('option').length=="1" ){
		$('select[name$=".cipher"]').attr("disabled",$('select[name$=".cipher"]').val()=="ccmp"?true:false);
	}
}

function backtoSiteSurvey()
{
    var device="wifi0"
    var tmpOpmode="sta_ap"
    var netid="wifix.network18"
    var url ='<%=luci.dispatcher.build_url("admin/network/wireless_join")%>?title=Sitesurvey&device='+device+'&tmpOpmode='+tmpOpmode+'&netid='+netid;

    var win = window.open(url, '_self');
    win.focus();
}

$(function(){
    $('form').trigger("change");
<% if uci:get('functionlist','functionlist','SUPPORT_COMBINED_SSID_SETTING') == '1' then %>
    $('#mytable').show();
    $('#tr_bandsteer_area').insertAfter($("#bandsteer_en_row")); //append bandsteer select list
    $('#tr_setSSID').insertAfter($("#disabled_row")); //append SSID text field 
	<% if displayMode == "wds_ap" then %>
		$('#disabled_row').hide();
	<% end %>
    <% 
    local show_bandsteering;
    if uci:get('functionlist','functionlist','SUPPORT_WLAN5G_2') == '1' then 
   	if wifi0_opmode == "ap" and wifi1_opmode == "ap" and wifi2_opmode == "ap" then
   		show_bandsteering = true
   	else
   		show_bandsteering = false
   	end
    else
    	if wifi0_opmode == "ap" and wifi1_opmode == "ap" then
    		show_bandsteering = true
    	else
    		show_bandsteering = false
    	end
    end
    %>
    
    <% if not show_bandsteering then %>
    	$('#tbl_bandsteering').css("display","none");
    <% end %> 
    	
    <% if displayMode == "ori" or displayMode == "sta_ap" or displayMode == "sta" or displayMode == "wds_sta" then %>
        $('#tbl_wireless_setting').css("display","none");
        $('#tbl_bandsteering').css("display","none");
    <% end %>
    
    var bandsteer = '<%=uci:get('wireless',networkName,'bandsteer_en') or 0%>';
    if(bandsteer == "0"){bandsteer = 2;} //default bandsteer 
    $("select[name='select.bandsteer']").val(bandsteer); //init bandsteer

    //append VLAN ID text field    
    if($('label[for$="isolation"]').length > 0){
       $("div[id$=isolation][class='cbi-value']").after('&nbsp&nbspID: <input id="vlan_id" type="text" style="width:10%" name="cbid.wireless.<%=networkName%>.vlan_id" value="<%=uci:get('wireless',networkName,'vlan_id')%>">(1~4094)');
    <% if uci:get('functionlist','functionlist','SUPPORT_MYID') == '1' then %>
        changeMyId.changeMyId();
    <% end %>
    }
   
    if($('input[name$="disabled"]').length > 0){ //append 5G 5G_2 checkbox
      <% if displayMode == "ap" then %>
        <% if uci:get('functionlist','functionlist','SUPPORT_WLAN5G_2') == '1' then %>
             //2G, 5G, 5G_2
             //$('input[name$="disabled"][class$="checkbox"]').after('<label id="wifi0_label">2.4G</label>&nbsp&nbsp&nbsp<input type="checkbox" name="cbid.wireless.<%=string.gsub(networkName,"wifi0","wifi1")%>.disabled" id="cbid.wireless.<%=string.gsub(networkName,"wifi0","wifi1")%>.disabled" value="<%=uci:get('wireless',string.gsub(networkName,"wifi0","wifi1"),'disabled')%>"  ><label id="wifi1_label">5G</label><input type="checkbox" name="cbid.wireless.<%=string.gsub(networkName,"wifi0","wifi2")%>.disabled" id="cbid.wireless.<%=string.gsub(networkName,"wifi0","wifi2")%>.disabled" value="<%=uci:get('wireless',string.gsub(networkName,"wifi0","wifi2"),'disabled')%>"  ><label id="wifi2_label">5G-2</label>');
	        $('input[name$="disabled"][class$="checkbox"]').after('<label id="wifi0_label">2.4G</label>&nbsp&nbsp&nbsp<input type="checkbox" name="cbid.wireless.<%=string.gsub(networkName,"wifi0","wifi1")%>.disabled" id="cbid.wireless.<%=string.gsub(networkName,"wifi0","wifi1")%>.disabled" value="<%=uci:get('wireless',string.gsub(networkName,"wifi0","wifi1"),'disabled')%>"  ><label id="wifi1_label">5G</label>&nbsp&nbsp&nbsp <input type="checkbox" name="cbid.wireless.<%=string.gsub(networkName,"wifi0","wifi2")%>.disabled" id="cbid.wireless.<%=string.gsub(networkName,"wifi0","wifi2")%>.disabled" value="<%=uci:get('wireless',string.gsub(networkName,"wifi0","wifi2"),'disabled')%>"  ><label id="wifi2_label">5G-2</label>');
        <% else %>
             //2G, 5G
            <% option = networkName:match("wifi1_enjet") or "" %>
             $('input[name$="disabled"][class$="checkbox"]').after('<% if option == "" then %><label id="wifi0_label">2.4G</label>&nbsp&nbsp&nbsp<input type="checkbox" name="cbid.wireless.<%=string.gsub(networkName,"wifi0","wifi1")%>.disabled" id="cbid.wireless.<%=string.gsub(networkName,"wifi0","wifi1")%>.disabled" value="<%=uci:get('wireless',string.gsub(networkName,"wifi0","wifi1"),'disabled')%>"  ><% end %><label id="wifi1_label">5G</label>');
        <% end %>
        <% if uci:get('functionlist','functionlist','SUPPORT_MYID') == '1' then %>
            changeMyId.changeMyId();
        <% end %>
      <% end %>
    
      <% if displayMode == "ap" then %>
        var checkbox2G = "<%=checkbox2G%>";
        var checkbox5G = "<%=checkbox5G%>";
        <% if uci:get('functionlist','functionlist','SUPPORT_WLAN5G_2') == '1' then %>
          var checkbox52G = "<%=checkbox52G%>";
        <% end %>
          
          //sync radio checkbox
          if($('input[name^="cbid.wireless.wifi0"][name$="disabled"]').length > 0){
		           $('input[name^="cbid.wireless.wifi0"][name$="disabled"]').prop("checked",checkbox2G=="0"?true:false);
          }
          
          if($('input[name^="cbid.wireless.wifi1"][name$="disabled"]').length > 0){
		          $('input[name^="cbid.wireless.wifi1"][name$="disabled"]').prop("checked",checkbox5G=="0"?true:false);
          }
          
          if($('input[name^="cbid.wireless.wifi2"][name$="disabled"]').length > 0){
		          $('input[name^="cbid.wireless.wifi2"][name$="disabled"]').prop("checked",checkbox52G=="0"?true:false);
          }
      <% end %>

      <% if displayMode == "wds_ap" then %>
	  //default enable
	  $('input[name$="disabled"][type="checkbox"]').each(function(){                 
        	  $(this).prop("checked", true);                    
      })

	  var enableStr;
	  <% if radio == "0" then %>
		    enableStr = "<label>2.4G</label>";
	    <% elseif radio == "1" then %>
		    enableStr = "<label>5G</label>";
	    <% else %>
		    enableStr = "<label>5G-2</label>";
	  <% end %>
	  $('input[name$="disabled"][class$="checkbox"]').after(enableStr);
    <% end %>
  } // checkbox
    
    
    <% if displayMode == "ap" then %>
        <% if wifi0_opmode ~= "ap" then %>
            $('input[name^="cbid.wireless.wifi0_ssid"][name$="disabled"]').css("display","none");
            $('label[id="wifi0_label"]').css("display","none");
        <% end %>
        <% if wifi1_opmode ~= "ap" then %>
            $('input[name^="cbid.wireless.wifi1_ssid"][name$="disabled"]').css("display","none");
            $('label[id="wifi1_label"]').css("display","none");
        <% end %>
        <% if uci:get('functionlist','functionlist','SUPPORT_WLAN5G_2') == '1' then %>
            <% if wifi2_opmode ~= "ap" then %>
                $('input[name^="cbid.wireless.wifi2_ssid"][name$="disabled"]').css("display","none");
                $('label[id="wifi2_label"]').css("display","none");
            <% end %>
        <% end %>
    <% end %>

  <% if displayMode == "wds_ap" then %>
    <% if wifi0_opmode ~= "wds_ap" or radio ~= "0" then %>
        $('input[name^="cbid.wireless.wifi0_wds_"][name$="disabled"]').css("display","none");
        $('label[id="wifi0_label"]').css("display","none");
    <% end %>
    <% if wifi1_opmode ~= "wds_ap" or radio ~= "1" then %>
        $('input[name^="cbid.wireless.wifi1_wds_"][name$="disabled"]').css("display","none");
        $('label[id="wifi1_label"]').css("display","none");
    <% end %>
    <% if uci:get('functionlist','functionlist','SUPPORT_WLAN5G_2') == '1' then %>
        <% if wifi2_opmode ~= "wds_ap" or radio ~= "2" then %>
            $('input[name^="cbid.wireless.wifi2_wds_"][name$="disabled"]').css("display","none");
            $('label[id="wifi2_label"]').css("display","none");
        <% end %>
    <% end %>
  <% end %>

    //deal with 2.4g, 5g, 5g-2 enable checkbox
    //only show when opmode is AP or WDS_AP
<% if wifi0_opmode ~= "ap" and wifi0_opmode ~= "wds_ap" then %>
    	$('input[name^="cbid.wireless.wifi0_ssid"][name$="disabled"]').css("display","none");
    	$('label[id="wifi0_label"]').css("display","none");	
<% end %>

<% if wifi1_opmode ~= "ap" and wifi1_opmode ~= "wds_ap" then %>
   	$('input[name^="cbid.wireless.wifi1_ssid"][name$="disabled"]').css("display","none");
	$('label[id="wifi1_label"]').css("display","none");
<% end %>

<% if uci:get('functionlist','functionlist','SUPPORT_WLAN5G_2') == '1' then %>
	<% if wifi2_opmode ~= "ap" and wifi2_opmode ~= "wds_ap" then %>
   		$('input[name^="cbid.wireless.wifi2_ssid"][name$="disabled"]').css("display","none");
		$('label[id="wifi2_label"]').css("display","none");
	<% end %>
<% end %>   
   
    //WDS_AP mode only support 4 SSID
    if(netId.slice(-1) > 4){
        //console.log("NUM: "+netId.slice(-1));
        <% if wifi0_opmode == "wds_ap" then %>
            $('input[name^="cbid.wireless.wifi0_ssid"][name$="disabled"]').css("display","none");
            $('label[id="wifi0_label"]').css("display","none");
        <% end %>
        <% if wifi1_opmode == "wds_ap" then %>
            $('input[name^="cbid.wireless.wifi1_ssid"][name$="disabled"]').css("display","none");
            $('label[id="wifi1_label"]').css("display","none");
        <% end %>
        <% if uci:get('functionlist','functionlist','SUPPORT_WLAN5G_2') == '1' then %>
            <% if wifi2_opmode == "wds_ap" then %>
                $('input[name^="cbid.wireless.wifi2_ssid"][name$="disabled"]').css("display","none");
                $('label[id="wifi2_label"]').css("display","none");
            <% end %>
        <% end %>
    }  

   $('input[name$="disabled"][type="checkbox"]').change(function(){                                        
        var allDisabled = checkAllDisable();                                                
        var allEnabled = checkAllEnable();
        //console.log("allEnabled " +allEnabled); 
         $('#tbl_security').find("input,select").attr("disabled", allDisabled);
		greyEncrOption();
         $('#tr_setSSID').find("input,select").attr("disabled", allDisabled);            
         $('#hidden_row').find("input,select").attr("disabled", allDisabled);            
		$('#isolate_row').find("input,select").attr("disabled", allDisabled);
	$('#bandsteer_en_row').find("input,select").attr("disabled", !allEnabled); 
	<% if guestEn == "1" and displayMode == "ap" then %>
		$('#l2_isolatior_row').find("input,select").attr("disabled", true);
		$('input[type="radio"][name$="l2_isolatior"][value="0"]').prop("checked",true);
        <% if support_l2_whitelist == "1" then %>
            $('input[name^="l2_whitelist_"]').attr("disabled", true);
            $('tr[name^="l2_whitelist_row"]').css("display","none");
            $('#l2_isolatior_row').removeClass("title-option-no-border").addClass("title-option");
        <% end %>
	<% else %>
		$('#l2_isolatior_row').find("input,select").attr("disabled", allDisabled);
		$('input[name$="l2_isolatior"]').trigger("change");
	<% end %>
	<% if guestEn == "1" and displayMode == "ap" then %>
		$('#isolation_row').find("input,select").attr("disabled", true);
		$('input[type="radio"][name$="isolation"][value="0"]').prop("checked",true);
		$('#vlan_id').attr("disabled", true);
	<% else %>
		$("input[name$='isolation']").attr("disabled", allDisabled);
	<% end %>
	<% if guestEn == "1" and displayMode == "ap" then %>
		$('#tbl_radius_settings, #tbl_radius_acctounting').find("input,select").attr("disabled", true);

        //radius setting
        $('input[type="checkbox"][name$="nasid_enable_gui"]').prop("checked",false);
        $('input[type="checkbox"][name$="nasport_enable_gui"]').prop("checked",false);
        $('input[type="checkbox"][name$="nasip_enable_gui"]').prop("checked",false);

        //radius accounting
        $('input[type="radio"][name$="acct_enabled"][value="0"]').prop("checked",true);

		$('#tbl_macfilter, #tbl_tc').find("input,select").attr("disabled", allDisabled);
	<% else %>
		$( '#tbl_radius_settings, #tbl_radius_acctounting, #tbl_fastroaming, #tbl_macfilter, #tbl_tc').find("input,select").attr("disabled", allDisabled);
	<% end %>
    	 if(allDisabled){
    	 	$("tr[name='tr_loadbalance']").hide();
    	 }else{
    	 	$("tr[name='tr_loadbalance']").insertAfter($("#tr_bandsteer_area"));
    	 	$("tr[name='tr_loadbalance']").show();
		$('input[name$="nasid_enable_gui"]').triggerHandler('click');
		$('input[name$="nasport_enable_gui"]').triggerHandler('click');
		$('input[name$="nasip_enable_gui"]').triggerHandler('click');
		$('input[name$="acct_enabled"]').triggerHandler('change');
		$('select[name$="macfilter"]').triggerHandler('change');
        $('select[name$="macfilter"]').triggerHandler('change');
		$('input:checked[name$="tc_enabled"]').triggerHandler('click');
    	 }
    	 $('input[name$="bandsteer_en"]').trigger("change");
     //fix grey-out field
     $('input[name$="isolation"]').trigger("change");
    }).trigger("change");

   
   $('select[name$="encryption"]').change(function(){
	GroupKeyDescription();
    <% if uci:get('functionlist','functionlist','SUPPORT_WPA3')=='1' then %>
        SuiteB_setting();
    <% end %>
   	if( $('select[name$=".cipher"]').find('option').length=="1" ){
   		$('select[name$=".cipher"]').attr("disabled",$('select[name$=".cipher"]').val()=="ccmp"?true:false);
   	}
   });

//Bandsteering
$('input[name$="bandsteer_en"]').change(function(){   
    var allEnabled = checkAllEnable();
	if(allEnabled && $('input[name$="bandsteer_en"][value=1]').is(":checked") ){
		$("tr[name='tr_bandsteer']").find("input,select").attr("disabled", false);
		$("tr[name='tr_loadbalance']").show();
	}else{
		$("tr[name='tr_bandsteer']").find("input,select").attr("disabled", true);
		$("tr[name='tr_loadbalance']").hide();
	}
 }).trigger("change");
   
   
   
   
   //VLAN isolation 
   <% if guestEn ~= "1" then %> 
   $('input[name$="isolation"]').change(function(){         
     var allDisabled = checkAllDisable();
     if(allDisabled){
     	$('input[name$="vlan_id"]').attr("disabled", true);
        $('#vlan_isolation_enable').val("0");
     }else if( $(this).val()=="1" || $('input[name$="isolation"][value=1]').is(":checked") ){                                                    
        $('input[name$="vlan_id"]').attr("disabled", false);
        $('#vlan_isolation_enable').val("1");
     }else{
	$('input[name$="vlan_id"]').attr("disabled", true);
        $('#vlan_isolation_enable').val("0");
     }                                                                          
    }).trigger("change");
   <% end %>
    $('input[name$="l2_isolatior"]').change(function(){
 	if($('input[name$="l2_isolatior"][value="1"]').is(":checked")){
 		$('input[name$="isolate"][value="1"]').prop("checked", true);
 		$('input[name$="isolate"]').attr("disabled", true);
        <% if support_l2_whitelist == "1" then %>
            $('input[name^="l2_whitelist_"]').attr("disabled", false);
            $('tr[name^="l2_whitelist_row"]').removeAttr("style");
            $('#l2_isolatior_row').removeClass("title-option").addClass("title-option-no-border");
        <% end %>
 	}else{
 		var allDisabled=checkAllDisable();
 		if(!allDisabled)
 		{
 			$('input[name$="isolate"]').attr("disabled", false);
 		}
        <% if support_l2_whitelist == "1" then %>
            $('input[name^="l2_whitelist_"]').attr("disabled", true);
            $('tr[name^="l2_whitelist_row"]').css("display","none");
            $('#l2_isolatior_row').removeClass("title-option-no-border").addClass("title-option");
        <% end %>
 	}
    })

   
   // fix style of radio button 
   $('input[class="cbi-input-radio"]').siblings().removeAttr("style");

   greyEncrOption();

   <% if uci:get('functionlist','functionlist','SUPPORT_BANDSTEER_SELECT_LIST') == '1' then %>
	//---------band steering--------------
    $("select[name='select.bandsteer']").change(function(){
        console.log("BANDSTEER_SELECT_LIST_VALUE "+$(this).val());
        switch($(this).val())
        {
            case "2":
                $("span[name$='bandsteerrssi_enable_span']").show().find('*').attr("disabled",false);
                $("span[name$='bandsteerpersent_enable_span']").hide().find('*').attr("disabled",true);
                break;
            case "3":
                $("span[name='bandsteerrssi_enable_span'],span[name='bandsteerpersent_enable_span']").show().find('*').attr("disabled",false);
                break;
            default:
                $("span[name='bandsteerrssi_enable_span'],span[name='bandsteerpersent_enable_span']").hide().find('*').attr("disabled",true);
                break;
        }
    }).triggerHandler("change");


    <% if uci:get('functionlist','functionlist','SUPPORT_BANDSTEER_FORCE_5G') == '1' then %>
    //---------band steering Force 5g message Check rule--------------
    $("select[name='select.bandsteer']").change(function(){
       ($(this).val()=='1')?$("#force_5g_msg").show():$("#force_5g_msg").hide();
    }).triggerHandler("change");
    <% end %>

<% end %>
$('input[name$="disabled"][type="checkbox"]').trigger("change");
<% end %>

    $('input[name$="ssid"]').each(function(){
        <%
	local scan_join_ssid = luci.http.formvalue("join")
	if scan_join_ssid then
		ssid=  luci.util.repSpec(tostring(scan_join_ssid) or "")
	else
		ssid = luci.util.repSpec(tostring(uci:get("wireless",networkName,"ssid") or ""))
	end
        %>
        var ssid = repSpec("<%=ssid%>",1);
        $(this).val(ssid);
    });
})//ready end

$(function(){
    GroupKeyDescription();
    EAP_Setting();
    $('select[name$="encryption"]').change(function(){
        $('select[name$="eap_type"]').change(function(){
            EAP_Setting();
        });
    });
    $('select[name$="eap_type"]').change(function(){
            EAP_Setting();
    });
    <% if uci:get('functionlist','functionlist','SUPPORT_WPA3')=='1' then %>
        Security_Mode_Setting();
        SuiteB_setting();
    <% end %>
})
function Security_Mode_Setting(){
<% if from_wifi_join == "1" or from_wifi_join_cb_wdssta == "1" then %>
    return;
<% end %>

    if("<%=uci:get("wireless",networkName,"ieee80211w")%>"==1 && "<%=uci:get("wireless",networkName,"security")%>"=="wpa3-mixed+ccmp"){
        $("select[name$='encryption']").val("wpa3-mixed");
    }
    else if("<%=uci:get("wireless",networkName,"security")%>"=="owe-transition"){
        $("select[name$='encryption']").val("owe-transition");
    }
    else if("<%=uci:get("wireless",networkName,"sae")%>"==1){
        if("<%=uci:get("wireless",networkName,"encryption")%>"=="ccmp"){
            $("select[name$='encryption']").val("sae");
        }
        else if("<%=uci:get("wireless",networkName,"encryption")%>"=="psk2+ccmp"){
            $("select[name$='encryption']").val("sae-mixed");
        }
    }
    else{
        if("<%=uci:get("wireless",networkName,"encryption")%>"=="none"){
            $("select[name$='encryption']").val("none");
        }
        else if("<%=uci:get("wireless",networkName,"encryption")%>"=="psk2+ccmp"){
            if ("<%=uci:get("wireless",networkName,"sae")%>"==1)
            {
                $("select[name$='encryption']").val("sae-mixed");
            }
            else
            {
                $("select[name$='encryption']").val("psk2");
            }
        }
        else if("<%=uci:get("wireless",networkName,"encryption")%>"=="wpa2+ccmp"){
            if("<%=uci:get("wireless",networkName,"security")%>"=="wpa3-mixed+ccmp")
            {
                $("select[name$='encryption']").val("wpa3-mixed");
            }
            else if("<%=uci:get("wireless",networkName,"security")%>"=="wpa3")
            {
                $("select[name$='encryption']").val("wpa3");
            }
            else
            {
                $("select[name$='encryption']").val("wpa2");
            }
        }
        else if("<%=uci:get("wireless",networkName,"encryption")%>"=="ccmp"){
            if ("<%=uci:get("wireless",networkName,"sae")%>"==1)
            {
                $("select[name$='encryption']").val("sae");
            }
            else
            {
                $("select[name$='encryption']").val("owe");
            }
        }
    }

    $('select[name$="encryption"]').trigger("change");
}
function EAP_Setting(){
    if($('select[name$="eap_type"]').val() == "peap"){
        $('select[name$="auth"] option[value="MSCHAP"]').hide();
        $('select[name$="auth"]')[0].value = "MSCHAPV2";
    }
    else{
        $('select[name$="auth"] option[value="MSCHAP"]').show();
    }
}
function GroupKeyDescription(){
    if(('input[name$="wpa_group_rekey"][type="text"]:visible').length > 0){
        if($('#groupKeyDescription').length==0){    //append description for Group Key Update Interval
            $('input[name$="wpa_group_rekey"][type="text"]').after('<label id="groupKeyDescription"> (30~3600; 0:<%:Disable%>) </label>');
        }
    }
}
function SuiteB_setting(){
    if ( $("select[name$='encryption']").val() == 'wpa3' ){
        $("tr[id$='suite_b_row']").show();
    }
    else{
        $('input[type="radio"][name$="suite_b"][value=""]').prop("checked",true);
        $("tr[id$='suite_b_row']").hide();
    }
}
<% if uci:get('functionlist','functionlist','SUPPORT_MANAGEMENT_SSID') == '1' then %>
$(function(){
    <% option = networkName:match("wifi0_mgmt") or networkName:match("wifi1_mgmt") or "" %>
    <% if option ~= "" then %>
        $('table[id$="tbl_radius_settings"]').css("display","none");
        $('table[id$="tbl_radius_acctounting"]').css("display","none");
        $('table[id$="tbl_macfilter"]').css("display","none");
        $('table[id$="tbl_tc"]').css("display","none");

        <% if uci:get('functionlist','vendorlist','MANAGEMENT_SUPPORT_RADIO') == '2' then %>
            $('select[name$="cbid.wireless.wifi1_mgmt.encryption"]').prop("disabled",true);
            $('input[name$="cbid.wireless.wifi1_mgmt.wpa_group_rekey"]').prop("disabled",true);
        <% elseif uci:get('functionlist','vendorlist','MANAGEMENT_SUPPORT_RADIO') == '1' then%>
            $('select[name$="cbid.wireless.wifi0_mgmt.encryption"]').prop("disabled",true);
            $('input[name$="cbid.wireless.wifi0_mgmt.wpa_group_rekey"]').prop("disabled",true);
        <% end %>
    <% end %>
})
<% end %>
<% if uci:get('functionlist','functionlist','SUPPORT_ENJET') == '1' then %>
$(function(){
    <% option = networkName:match("wifi1_enjet") or "" %>
    <% if option ~= "" then %>
        $('table[id$="tbl_tc"]').css("display","none");
    <% end %>
    $('input[name$="cbid.wireless.wifi1_enjet.disabled"]').prop("disabled",true);
})
<% end %>
<% if uci:get('functionlist','functionlist','SUPPORT_WLAN24G')=='1' and uci:get('functionlist','functionlist','SUPPORT_WLAN5G')=='1' then %>
$(function(){
    <% if countryId == "831" or countryId == "829" then %>
        <% for i = 1, 8 do %>
            $('input[type="checkbox"][name="cbid.wireless.wifi0_ssid_' + "<%=i%>" + '.disabled"]').attr("disabled", true);
        <% end %>
    <% end %>
})
<% end %>
<% if ( uci:get('functionlist','functionlist','SUPPORT_AP_RP_SETUP_WIZARD') == "1" or uci:get('functionlist','functionlist','SUPPORT_RP_SSID_SETTING') == "1" ) and
      ( displayMode == "sta_ap" or from_wifi_join == "1" ) then %>
function erp_status() {
    if ($('#erp_enable').prop("checked")) {
        $('#tbl_repeater').show();
    }
    else {
        $('#tbl_repeater').hide();
    }
}
function RP_Sec_Setting(){
    if($('select[name$="repeater_enc"]').val() == "none"){
        $('#rp_cipher_row, #rp_key_row').hide();
        $("input[name='rp_enc_val']").val("none");
    }
    else{
        $('#rp_cipher_row, #rp_key_row').show();
        $("input[name='rp_enc_val']").val("psk2+ccmp");
    }
}
$(function(){
<% if from_wifi_join == "1" then %>
    $('input[name$="repeater_ssid"]').val($('input[name$="ssid"]').val());
    if ( $("select[name$='encryption']").val() == 'none' )
        $('select[name$="repeater_enc"]').val("none");
    else
        $('select[name$="repeater_enc"]').val("psk2");
    $('input[name$="repeater_key"]').val($('input[name$="key"]').val());
<% else %>
    <% if wifi_dev=='wifi0' then
    local ssid_val = luci.util.repSpec(tostring(uci:get("wireless","wifi0_sta_ap_1","ssid") or ""))
    local key_val = luci.util.repSpec(tostring(uci:get("wireless","wifi0_sta_ap_1","key") or "")) %>
        $('input[name$="repeater_ssid"]').val(repSpec("<%=ssid_val%>"));
        $('input[name$="repeater_key"]').val(repSpec("<%=key_val%>"));
        <% if uci:get("wireless","wifi0_sta_ap_1","encryption") == 'none' then %>
            $('select[name$="repeater_enc"]').val("none");
        <% else %>
            $('select[name$="repeater_enc"]').val("psk2");
        <% end %>
    <% elseif wifi_dev=='wifi1' then
    local ssid_val = luci.util.repSpec(tostring(uci:get("wireless","wifi1_sta_ap_1","ssid") or ""))
    local key_val = luci.util.repSpec(tostring(uci:get("wireless","wifi1_sta_ap_1","key") or "")) %>
        $('input[name$="repeater_ssid"]').val(repSpec("<%=ssid_val%>"));
        $('input[name$="repeater_key"]').val(repSpec("<%=key_val%>"));
        <% if uci:get("wireless","wifi1_sta_ap_1","encryption") == 'none' then %>
            $('select[name$="repeater_enc"]').val("none");
        <% else %>
            $('select[name$="repeater_enc"]').val("psk2");
        <% end %>
    <% end %>
    if ($('input[name$="ssid"]').val() != $('input[name$="repeater_ssid"]').val()) {
        $("#erp_enable").attr("checked",true);
        erp_status();
    }
<% end %>
    RP_Sec_Setting();

    $('#tbl_repeater_status').show();
})
<% end %>
</script>
</head>
<body>
<div id="Band_Steering_info" class="popbox">                                                                                                                               
<p><%=translate("It can facilitate effective spectrum usage, enabling 5GHz-capable clients to associate with AP's 5GHz radio and offloading air utilization in 2.4GHz-band.")%></p>
</div>	

<% if WLAN5G_2 == '1' then --[[ #### WLAN5G_2 START ### --]] %>
<div id="bandsteerrssi_text" class="popbox" style="display:none">
    <p><%:Enter a value for the minimum received signal strength indicator (RSSI) required for dual-band wireless clients to associate to the 5GHz band. If the client’s RSSI value drops below this threshold, it will only be able to connect to the 2.4GHz band. The recommended value is -66 ~ -80.%></p>
</div>
<% else %>
<div id="bandsteerrssi_text" class="popbox" style="display:none">
    <p><%:Enter a value for the minimum received signal strength indicator (RSSI) required for dual-band wireless clients to associate to the 5GHz band. If the client’s RSSI value drops below this threshold, it will only be able to connect to the 2.4GHz band. The recommended value is -60 ~ -80.%></p>
</div>
<% end %>

<div id="bandsteerpersent_text" class="popbox" style="display:none">
<p><%:Automatically balances the number of newly connected clients across both 2.4GHz and 5GHz bands. For example, the value 75 indicates that the AP will place 75% of all newly connected clients whose RSSI is above threshold onto the 5GHz band while the remaining 25% of the newly connected clients will be left on the 2.4GHz band.%></p>
</div>

<% if displayMode == "ap" or displayMode == "wds_ap" then %>
<img id="Client_Isolation_info" class="popper" data-popbox="Client_Isolation_info" src="<%=media%>/pictures/icon_info_blue.png">
<div id="Client_Isolation_info" class="popbox">
    <p><%:Block the communication between the associated clients under the same WLAN.%></p>
</div>

<img id="VLAN_Isolation_info" class="popper" data-popbox="VLAN_Isolation_info" src="<%=media%>/pictures/icon_info_blue.png">
<div id="VLAN_Isolation_info" class="popbox">
    <p><%:When this option is checked with specified VLAN ID in a SSID profile, the traffics from this SSID will be tagged with this VLAN ID upon entering LAN bridge.%></p>
</div>
<% end %>

<div class="ctx-body">
<table class="ecm-tbl" id="mytable">
<tbody>
<% if displayMode == "ap" then %>
                <tr id="tr_setSSID" class="title-option">
                	<td class="tbl-name" width="30%"><%:SSID%></td>
                	<td width="70%">
                		<div class="cbi-value" style="margin-bottom: 0px;">
                		<input type="text" maxlength="32" id="ssid" name="cbid.wireless.<%=networkName%>.ssid" value="<%=uci:get('wireless',networkName,'ssid')%>">
                		</div>
                	</td>
                </tr>
                <tr name="tr_bandsteer" id="tr_bandsteer_area" class="title-option">
                    <td width="20%" myid="title_wifi_bandsteer"><%:Band Steering%><img class="popper" data-popbox="Band_Steering_info" src="<%=media%>/pictures/icon_info_blue.png"></td>
                    <td width="80%">
    <% if uci:get('functionlist','functionlist','SUPPORT_BANDSTEER_SELECT_LIST') == '1' then %>                    
                    <select id="select.bandsteer" myid="wifi_bandsteer" class="cbi-input-select" name="select.bandsteer" value="<%=uci:get('wireless',networkName,'bandsteer_en') or 2%>">
        <% if uci:get('functionlist','functionlist','SUPPORT_COMBINED_SSID_SETTING') ~= '1' then %>
                        <option value="0"><%:Disabled%></option>
        <% end %>
                        <option value="2"><%:Prefer 5GHz%></option>
        <% if uci:get('functionlist','functionlist','SUPPORT_BANDSTEER_FORCE_5G') == '1' then --[[ #### SUPPORT_BANDSTEER_FORCE_5G START ### --]] %>
                        <option value="1"><%:Force 5GHz%></option>
        <% end --[[ #### SUPPORT_BANDSTEER_FORCE_5G END ### --]] %>
                        <option value="3"><%:Band Balance%></option>
                    </select>
                    <span name="bandsteerrssi_enable_span" style="display:none">
        <% if WLAN5G_2 == '1' then --[[ #### WLAN5G_2 START ### --]] %>
                        <input type="hidden" maxlength="3" style="width:50px;" name="cbid.wireless.<%=networkName%>.bandsteerHBrssi" type="text" class="cbi-input-text" value="30"/><%:dBm%>
        <% end --[[ #### WLAN5G_2 END ### --]] %>
                        <br>
                        5GHz RSSI&nbsp;
                        <% bandsteer_rssi=uci:get('wireless',networkName,'bandsteerrssi') or "20" %>
                        <input maxlength="3" style="width:50px;" name="cbid.wireless.<%=networkName%>.bandsteerrssi" type="text" class="cbi-input-text" value="<%=tonumber(bandsteer_rssi)-95%>"/><%:dBm%>
                        <div class="popper" data-popbox="bandsteerrssi_text"><img src="<%=media%>/pictures/icon_info_blue.png"></div>
                    </span>
        
                    <span name="bandsteerpersent_enable_span" style="display:none">
                        <br>
        <% 
            bandsteerpersent = uci:get("wireless",networkName,"bandsteerpersent") or "75"
        %>
                        <%:Percent of clients on 5GHz radio %><input maxlength="3" style="width:50px;" name="cbid.wireless.<%=networkName%>.bandsteerpersent" value="<%=bandsteerpersent%>" type="text" class="cbi-input-text">%
                        <div class="popper" data-popbox="bandsteerpersent_text"><img src="<%=media%>/pictures/icon_info_blue.png"></div>
                    </span>
                    
    <% else %>
                    <input id="cbid.wireless.<%=networkName%>.bandsteer1" myid="wifi_bandsteer_enable" class="cbi-input-radio" type="radio" value="1" name="cbid.wireless.<%=networkName%>.bandsteer"><%:Enable%>
                    <input id="cbid.wireless.<%=networkName%>.bandsteer2" myid="wifi_bandsteer_disable" class="cbi-input-radio" type="radio" value="0" name="cbid.wireless.<%=networkName%>.bandsteer"><%:Disable%>
    <% end %>
    <% if uci:get('functionlist','functionlist','SUPPORT_BANDSTEER_FORCE_5G') == '1' then --[[ #### SUPPORT_BANDSTEER_FORCE_5G START ### --]] %>
                        <span id="force_5g_msg" style="display:none"><br>
                        <span class="msg_type_mark">&nbsp;<%:INFORMATION%>:</span>
                        <%:When band steering is configured to Force 5GHz mode, the AP will not allow a dual band client to connect to the 2.4GHz band only if the client is not currently associated on the 2.4Ghz radio of this AP.%>
                        </span>
    <% end --[[ #### SUPPORT_BANDSTEER_FORCE_5G END ### --]] %>
                        <br>
                    </td>
                </tr>
    <% if WLAN5G_2 == '1' then --[[ #### WLAN5G_2 START ### --]] %>
                <tr name="tr_loadbalance">
                    <td class="tbl-name" width="20%""><%:5GHz Load Balance%><img class="popper" data-popbox="Load_Balance_info" src="<%=media%>/pictures/icon_info_blue.png"></td>
                    <td class="tbl-value" width="80%">
                    <span class="msg_type_mark">&nbsp;<%:NOTE%>:</span>
                    <%:The SSID on both the low-band and high-band should be set to the same name and encryption.%>
                    </td>
                </tr>
    <% end --[[ #### WLAN5G_2 END ### --]] %>
<% end %>
 </tbody>
        </table>
    </div>

<%
if uci:get('functionlist','vendorlist','WEB_GUI_VER') ~= nil and uci:get('functionlist','vendorlist','WEB_GUI_VER') > "1" then -----#### CHECK WEB_GUI_VER START ###
    SUPPORT_ENCR = "WPA2-PSK, WPA2-Enterprise."
else
    SUPPORT_ENCR = "WPA2-PSK, WPA-PSK Mixed, WPA2-Enterprise, or WPA Mixed-Enterprise."
end -----#### CHECK WEB_GUI_VER END ###
%>
<div id="Fast_Roaming_info" class="popbox">
    <p><%:Can be enabled to facilitate client roaming, across AP under the same ESS WLAN. This option is available, upon choosing:%> <%=SUPPORT_ENCR%></p>
</div>
<form method="post" name="guestNetworkEncryption"  action='<%=luci.dispatcher.build_url("admin/network/wireless_device")%>' enctype="multipart/form-data" onreset="return cbi_validate_reset(this)" onsubmit="return cbi_validate_form(this, 'Some fields are invalid, cannot save values!')">
<% if uci:get('functionlist','functionlist','SUPPORT_COMBINED_SSID_SETTING') == '1' then %>
  <input type="hidden" id="displayMode" />
  <input type="hidden" id="wifi0Disabled_tmp" name="wifi0Disabled_tmp" />
  <input type="hidden" id="vlan_isolation_enable" name="vlan_isolation_enable" />
  <% if uci:get('functionlist','functionlist','SUPPORT_WLAN5G') then %>
    <input type="hidden" id="wifi1Disabled_tmp" name="wifi1Disabled_tmp" />
  <% end %>
  <% if uci:get('functionlist','functionlist','SUPPORT_WLAN5G_2') then %>
    <input type="hidden" id="wifi2Disabled_tmp" name="wifi2Disabled_tmp" />
  <% end %>
<% end %>
<input type="hidden" name="fromEncr" value="<%=luci.http.formvalue("netId") or netid%>" />
<input type="hidden" name="is_wifi_join" value="<%=luci.http.formvalue("from_wifi_join") or from_wifi_join%>" />

    <div id = "cbi_set" style="display:none" >
     <%
    local checkData = {
        select_hwmode  = luci.http.formvalue("select_hwmode") or ""
    }

        luci.cbi.load("admin_network/wifi_iface2",netId,data,checkData)[1]:render()
        for _, dev in ipairs(ntm:get_wifidevs()) do
            local netId_ap = ""
            local netId_wds_ap = ""

            if dev:get("opmode") ~= "mon" then
                local netId_ap = ntm:get_wifinet_index(dev:name(),"ap",tonumber(1)):id()
if uci:get('functionlist','functionlist','SUPPORT_AP_MODE_ONLY') == '1' then -----#### SUPPORT_AP_MODE_ONLY START ###
else
                local netId_wds_ap = ntm:get_wifinet_index(dev:name(),"wds_ap",tonumber(1)):id()
end-----####  SUPPORT_AP_MODE_ONLY END ####
if uci:get('functionlist','functionlist','SUPPORT_FAST_ROAMING_PER_SSID') == '1' then --# support fast roaming for per ssid
                if ( luci.http.formvalue("displayMode") == "ap" or luci.http.formvalue("displayMode") == "wds_ap" ) and not string.find(networkName, "guest") then
                    luci.cbi.load("admin_network/guestNetwork_IpSetting","fast_roaming",netId,data)[1]:render()
                    break
                end
else
                if netId == netId_ap or netId == netId_wds_ap then
                    luci.cbi.load("admin_network/guestNetwork_IpSetting","fast_roaming",netId,data)[1]:render()
                    break
                end
end --# SUPPORT_FAST_ROAMING_PER_SSID END #
            end
        end
	%>
    </div>
    <input type="hidden" name="opmode" value="<%=opmode%>"/>
    <input type="hidden" name="device" value="<%=device%>"/>
    <div class="ctx-head"></div>
<% if uci:get('functionlist','functionlist','SUPPORT_AP_RP_SETUP_WIZARD') == "1" and uci:get("system","firmware","first_login") == "1" then %>
    <div class="ctx-body">
        <h3><%:STEP 2: Enter Password (security key)%></h3>
        <ul>
        <li><%:The following security settings are automatically entered for you in accords to the selected Access Point/Wireless Router.%></li>
        <li><%:Change it ONLY IF you found it mismatched.%></li>
        <li><%:Usually you are only required to enter the password (security key).%></li>
        <li><%:If your AP does not have security, please ignore this page and press "Save" to proceed.%></li>
        </ul>
    </div>
<% end %>
    <div class="ctx-body">
	<div id="tbl_1" class="table bottommargin"></div>
        <table class="ecm-tbl" id="tbl_ssid">
			<tr>
				<th width="30%" colspan="2" class="title"><script type="text/javascript">document.write(titleSetting)</script></th>
			</tr>
        </table>
	</div>

    <!--Wireless basic setting table -->
    <div class="ctx-body">
    <div id="tbl_6" class="table bottommargin"></div>
        <table class="ecm-tbl" id="tbl_wireless_setting">
            <tr>
                <th width="30%" colspan="2" class="title"><script type="text/javascript">document.write(titleBasicSetting)</script></th>
            </tr>
            <tr style="display:none;">
                <td class="tbl-blank" width="30%" colspan="2"></td>
            </tr>
        </table>
    </div>

    <!--Band steering table -->
    <div class="ctx-body"> 
    <div id="tbl_7" class="table bottommargin"></div>
        <table class="ecm-tbl" id="tbl_bandsteering">             
            <tr>
                <th width="30%" colspan="2" class="title"><script type="text/javascript">document.write("Band Steering")</script></th>
            </tr>
            <tr style="display:none;">               
                <td class="tbl-blank" width="30%" colspan="2"></td>    
            </tr>                                           
        </table>                                                            
    </div>

	<div class="ctx-body">
	<div id="tbl_2" class="table bottommargin"></div>
        <table class="ecm-tbl" id="tbl_security">
<%if uci:get('functionlist','functionlist','SUPPORT_AP_RP_SETUP_WIZARD') == "1" and
     ( displayMode == "sta_ap" or from_wifi_join == "1" ) then%>
            <tr style="display:none;">
<% else %>
			<tr>
<% end %>
				<th width="30%" colspan="2" class="title"><script type="text/javascript">document.write(titleSec)</script></th>
			</tr>
			<tr style="display:none;">
				<td class="tbl-blank" width="30%" colspan="2"></td>
			</tr>
        </table>
	</div>

<%if ( uci:get('functionlist','functionlist','SUPPORT_AP_RP_SETUP_WIZARD') == "1" or uci:get('functionlist','functionlist','SUPPORT_RP_SSID_SETTING') == "1" ) and
     ( displayMode == "sta_ap" or from_wifi_join == "1" ) then%>
    <div class="ctx-body">
        <input type="hidden" name="rp_enc_val">
        <table class="ecm-tbl" id="tbl_repeater_status" style="display: none;">
            <tr style="background-color:white;"><td colspan="2" style="height:30px;"></td></tr>
            <tr class="title-option"><td colspan="2"><input type="checkbox" name="erp_enable" id="erp_enable" myid="rp_ssid_enable" value="1" onclick="erp_status()" style="width: 24px; border: 0px none;"><%:Change Extended SSID%></td></tr>
        </table>
        <table class="ecm-tbl" id="tbl_repeater" style="display: none;">
<% if uci:get('functionlist','functionlist','SUPPORT_REPEATER_CUSTOM_DEFINE') == '1' then %>
            <tr class="title-option"><td width="30%"><%= uci:get('functionlist','functionlist','SUPPORT_REPEATER_CUSTOM_STRING')%> SSID</td>
<% else %>
            <tr class="title-option"><td width="30%"><%:Repeater SSID%></td>
<% end %>
                <td width="70%"><input type="text" name="repeater_ssid" maxlength="32"></td></tr>
            <tr class="title-option"><td width="30%">Security Mode</td>
                <td width="70%"><select name="repeater_enc" onchange="RP_Sec_Setting(this);" size="1">
                <option value="none">None</option><option value="psk2">WPA2-PSK</option>
                </select></td></tr>
            <tr id="rp_cipher_row" class="title-option"><td width="30%">Encryption</td>
                <td width="70%"><select name="repeater_cip" size="1" disabled="disabled">
                <option value="ccmp" selected="selected">AES</option>
                </select></td></tr>
            <tr id="rp_key_row" class="title-option"><td width="30%">Passphrase</td>
                <td width="70%"><input type="text" class="cbi-input-text" name="repeater_key" value="" maxlength="64"></td></tr>
        </table>
    </div>
<% end %>

<%
if uci:get('functionlist','functionlist','SUPPORT_ALL_ENCRYPTION_HAS_RADIUS_SETTING') == '1' then -----#### SUPPORT_ALL_ENCRYPTION_HAS_RADIUS_SETTING START ###
    if (wnet:get("mode_display") == "ap") and not string.find(networkName, "guest") then

    local nasid = luci.util.repSpec(tostring(uci:get('wireless',networkName,'nasid') or ""))
%>
<script>
$(function() {
    var nasid = repSpec("<%=nasid%>");
    $('input[name$="nasid"]').val(nasid);
});
</script>
<%
local nasid_enable_status=""
local nasport_enable_status=""
local nasip_enable_status=""
if uci:get('wireless',networkName,'nasid_enable') == '1' then
    nasid_enable_status = "checked"
end
if  uci:get('wireless',networkName,'nasport_enable') == '1' then
    nasport_enable_status = "checked"
end
if  uci:get('wireless',networkName,'nasip_enable') == '1' then
    nasip_enable_status = "checked"
end
%>
    <div class="ctx-body">
    <div  class="table bottommargin"></div>
        <table class="ecm-tbl" id="tbl_radius_settings">
            <tr>
                <th width="30%" colspan="2" class="title"><%:Radius Settings%></th>
            </tr>
             <tr  class="title-option">

                <td width="30%"><input type="checkbox" name="nasid_enable_gui" <%= nasid_enable_status %> ><input type="hidden" name="cbid.wireless.<%=networkName%>.nasid_enable"><%:NAS-ID%></td>
                <td><input type="text" maxlength="32" name="cbid.wireless.<%=networkName%>.nasid" ></td>
            </tr>
            <tr  class="title-option">
                <td width="30%"><input type="checkbox" name="nasport_enable_gui" <%= nasport_enable_status %> ><input type="hidden" name="cbid.wireless.<%=networkName%>.nasport_enable"><%:NAS-PORT%></td>
                <td><input type="text" maxlength="5" name="cbid.wireless.<%=networkName%>.nasport" value="<%=uci:get('wireless',networkName,'nasport')%>">(0 ~ 65535)</td>
            </tr>
<%
if uci:get('functionlist','functionlist','SUPPORT_NAS_IP_ADDR') == '1' then
%>
            <tr  class="title-option">
                <td width="30%"><input type="checkbox" name="nasip_enable_gui" <%= nasip_enable_status %> ><input type="hidden" name="cbid.wireless.<%=networkName%>.nasip_enable"><%:NAS-IP%></td>
                <td><input type="text" maxlength="39" name="cbid.wireless.<%=networkName%>.nasip" value="<%=uci:get('wireless',networkName,'nasip')%>"></td>
            </tr>
        </table>
    </div>

<%
end
    end
end -----#### SUPPORT_ALL_ENCRYPTION_HAS_RADIUS_SETTING END ###
%>
<%
if uci:get('functionlist','functionlist','SUPPORT_ALL_ENCRYPTION_HAS_RADIUS_ACCOUNTING') == '1' then -----#### SUPPORT_ALL_ENCRYPTION_HAS_RADIUS_ACCOUNTING START ###
%>
    <div class="ctx-body">
    <div  class="table bottommargin"></div>
        <table class="ecm-tbl" id="tbl_radius_acctounting">
            <tr>
                <th width="30%" colspan="2" class="title"><%:Radius Accounting%></th>
            </tr>
        </table>
    </div>
<%
end -----#### SUPPORT_ALL_ENCRYPTION_HAS_RADIUS_ACCOUNTING END ###
%>
<% if uci:get('functionlist','functionlist','SUPPORT_FAST_ROAMING_SETTING') == '1' then %>
    <div class="ctx-body">
	<div id="tbl_3" class="table bottommargin"></div>
        <table class="ecm-tbl" id="tbl_fastroaming">
			<tr>
				<th width="30%" colspan="2" class="title"><%:Fast Roaming%><img class="popper" data-popbox="Fast_Roaming_info" src="<%=media%>/pictures/icon_info_blue.png"></th>
			</tr>
        </table>
    </div>
<% end %>
    <div class="ctx-body">
	    <div id="tbl_4" class="table bottommargin"></div>
	    <table class="ecm-tbl" id="tbl_macfilter">
		    <tr>
			    <th width="30%" colspan="2" class="title"><%:Wireless MAC Filter%></th>
		    </tr>
	    </table>
    </div>
	<div class="ctx-body">
    <div id="tbl_5" class="table bottommargin"></div>
         <table class="ecm-tbl" id="tbl_tc">
                <tr>
                    <th width="30%" colspan="2" class="title"><%:Wireless Traffic Shaping%></th>
                </tr>
        </table>
		<div class="cbi-page-actions">
			<!--input class="cbi-button cbi-button-apply" type="submit" name="cbi.apply" value="Save &#38; Apply" /-->
<% if uci:get('functionlist','functionlist','SUPPORT_AP_RP_SETUP_WIZARD') == "1" and uci:get('system','firmware','first_login') == "1" then %>
            <input id="back" style="width: auto;" class="cbi-button cbi-button-save" type="button" onclick="backtoSiteSurvey()" value="<%:Back%>" />
<% end %>
			<input style="width:auto;" class="cbi-button cbi-button-save" id="encryption_submit" type="button" onclick='ajax_setCsrf();checkRule.check()' value="<%:Save%>"/>&nbsp;<span class="btn_desc"><%:Save current setting(s)%></span>
			<!--input class="cbi-button cbi-button-reset" type="reset" value="Reset" /-->
		</div>
    </div>
</form>
<script type="text/javascript">cbi_d_update();</script>
<span id="bssid_span" style="display:none">
                            <input id='cbid.wireless.<%=wnet.sid%>.bssid1' type="text" name='<%="bssid".."0"%>' maxlength="2" size="2" disabled>
                            :
                            <input id='cbid.wireless.<%=wnet.sid%>.bssid2' type="text" name='<%="bssid".."1"%>' maxlength="2" size="2" disabled>
                            :
                            <input id='cbid.wireless.<%=wnet.sid%>.bssid3' type="text" name='<%="bssid".."2"%>' maxlength="2" size="2" disabled>
                            :
                            <input id='cbid.wireless.<%=wnet.sid%>.bssid4' type="text" name='<%="bssid".."3"%>' maxlength="2" size="2" disabled>
                            :
                            <input id='cbid.wireless.<%=wnet.sid%>.bssid5' type="text" name='<%="bssid".."4"%>' maxlength="2" size="2" disabled>
                            :
                            <input id='cbid.wireless.<%=wnet.sid%>.bssid6' type="text" name='<%="bssid".."5"%>' maxlength="2" size="2" disabled>
</span>
<span id="acl_span" style="display:none">
                            <input id='<%="aclid".."0"%>' type="text" name='<%="aclid".."0"%>' maxlength="2" size="2" disabled>
                            :
                            <input id='<%="aclid".."1"%>' type="text" name='<%="aclid".."1"%>' maxlength="2" size="2" disabled>
                            :
                            <input id='<%="aclid".."2"%>' type="text" name='<%="aclid".."2"%>' maxlength="2" size="2" disabled>
                            :
                            <input id='<%="aclid".."3"%>' type="text" name='<%="aclid".."3"%>' maxlength="2" size="2" disabled>
                            :
                            <input id='<%="aclid".."4"%>' type="text" name='<%="aclid".."4"%>' maxlength="2" size="2" disabled>
                            :
                            <input id='<%="aclid".."5"%>' type="text" name='<%="aclid".."5"%>' maxlength="2" size="2" disabled>
                            <input class="cbi-button" id="acl_btn" name="acl_btn" type="button" value="<%:Add%>" disabled>
</span>
</body>
</html>
